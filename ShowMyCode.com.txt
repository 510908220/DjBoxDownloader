
//----------------------------------------------------------------------
//Symbol 105 MovieClip [List] Frame 1
//----------------------------------------------------------------------
    #initclip 64
    Object.registerClass("List", mx.controls.List);
    #endinitclip

    stop();

﻿
//----------------------------------------------------------------------
//Symbol 15 MovieClip [UIObjectExtensions] Frame 1
//----------------------------------------------------------------------
    #initclip 43
    Object.registerClass("UIObjectExtensions", mx.core.ext.UIObjectExtensions);
    #endinitclip

﻿
//----------------------------------------------------------------------
//Instance of Symbol 259 MovieClip "loadBar1_red5" in Symbol 320 MovieClip Frame 5
//----------------------------------------------------------------------
onClipEvent (enterFrame) {
    if (_parent.tuodong) {
        this._width = _parent.playJDT_red5._x - 104;
    }
}
﻿
//----------------------------------------------------------------------
//Symbol 101 MovieClip [VScrollBar] Frame 1
//----------------------------------------------------------------------
    #initclip 60
    Object.registerClass("VScrollBar", mx.controls.VScrollBar);
    #endinitclip

    stop();

﻿
//----------------------------------------------------------------------
//Symbol 338 MovieClip Frame 1
//----------------------------------------------------------------------
    stop();
    W_bg.useHandCursor = false;
    W_bg.onPress = function () {
    };
    W_bg.onRelease = (W_bg.onReleaseOutside = function () {
    });

﻿
//----------------------------------------------------------------------
//Symbol 295 MovieClip Frame 10
//----------------------------------------------------------------------
    stop();

﻿
//----------------------------------------------------------------------
//Symbol 7 MovieClip [__Packages.mx.controls.listclasses.DataProvider] Frame 0
//----------------------------------------------------------------------
    class mx.controls.listclasses.DataProvider extends Object
    {
        var length, splice, dispatchEvent, sortOn, reverse, sort;
        function DataProvider (obj) {
            super();
        }
        static function Initialize(obj) {
            var _local4 = mixinProps;
            var _local6 = _local4.length;
            obj = obj.prototype;
            var _local3 = 0;
            while (_local3 < _local6) {
                obj[_local4[_local3]] = mixins[_local4[_local3]];
                _global.ASSetPropFlags(obj, _local4[_local3], 1);
                _local3++;
            }
            mx.events.EventDispatcher.initialize(obj);
            _global.ASSetPropFlags(obj, "addEventListener", 1);
            _global.ASSetPropFlags(obj, "removeEventListener", 1);
            _global.ASSetPropFlags(obj, "dispatchEvent", 1);
            _global.ASSetPropFlags(obj, "dispatchQueue", 1);
            Object.prototype.LargestID = 0;
            Object.prototype.getID = function () {
                if (this.__ID__ == undefined) {
                    this.__ID__ = Object.prototype.LargestID++;
                    _global.ASSetPropFlags(this, "__ID__", 1);
                }
                return(this.__ID__);
            };
            _global.ASSetPropFlags(Object.prototype, "LargestID", 1);
            _global.ASSetPropFlags(Object.prototype, "getID", 1);
            return(true);
        }
        function addItemAt(index, value) {
            if (index < length) {
                splice(index, 0, value);
            } else if (index > length) {
                trace("Cannot add an item past the end of the DataProvider");
                return(undefined);
            }
            this[index] = value;
            updateViews("addItems", index, index);
        }
        function addItem(value) {
            addItemAt(length, value);
        }
        function addItemsAt(index, newItems) {
            index = Math.min(length, index);
            newItems.unshift(index, 0);
            splice.apply(this, newItems);
            newItems.splice(0, 2);
            updateViews("addItems", index, (index + newItems.length) - 1);
        }
        function removeItemsAt(index, len) {
            var _local3 = new Array();
            var _local2 = 0;
            while (_local2 < len) {
                _local3.push(getItemID(index + _local2));
                _local2++;
            }
            var _local6 = splice(index, len);
            dispatchEvent({type:"modelChanged", eventName:"removeItems", firstItem:index, lastItem:(index + len) - 1, removedItems:_local6, removedIDs:_local3});
        }
        function removeItemAt(index) {
            var _local2 = this[index];
            removeItemsAt(index, 1);
            return(_local2);
        }
        function removeAll(Void) {
            splice(0);
            updateViews("removeItems", 0, length - 1);
        }
        function replaceItemAt(index, itemObj) {
            if ((index < 0) || (index >= length)) {
                return(undefined);
            }
            var _local3 = getItemID(index);
            this[index] = itemObj;
            this[index].__ID__ = _local3;
            updateViews("updateItems", index, index);
        }
        function getItemAt(index) {
            return(this[index]);
        }
        function getItemID(index) {
            var _local2 = this[index];
            if ((typeof(_local2) != "object") && (_local2 != undefined)) {
                return(index);
            }
            return(_local2.getID());
        }
        function sortItemsBy(fieldName, order) {
            if (typeof(order) == "string") {
                sortOn(fieldName);
                if (order.toUpperCase() == "DESC") {
                    reverse();
                }
            } else {
                sortOn(fieldName, order);
            }
            updateViews("sort");
        }
        function sortItems(compareFunc, optionFlags) {
            sort(compareFunc, optionFlags);
            updateViews("sort");
        }
        function editField(index, fieldName, newData) {
            this[index][fieldName] = newData;
            dispatchEvent({type:"modelChanged", eventName:"updateField", firstItem:index, lastItem:index, fieldName:fieldName});
        }
        function getEditingData(index, fieldName) {
            return(this[index][fieldName]);
        }
        function updateViews(event, first, last) {
            dispatchEvent({type:"modelChanged", eventName:event, firstItem:first, lastItem:last});
        }
        static var mixinProps = ["addView", "addItem", "addItemAt", "removeAll", "removeItemAt", "replaceItemAt", "getItemAt", "getItemID", "sortItemsBy", "sortItems", "updateViews", "addItemsAt", "removeItemsAt", "getEditingData", "editField"];
        static var evtDipatcher = mx.events.EventDispatcher;
        static var mixins = new mx.controls.listclasses.DataProvider();
    }
﻿
//----------------------------------------------------------------------
//Instance of Symbol 105 MovieClip [List] "MList" in Symbol 322 MovieClip Frame 1
//----------------------------------------------------------------------
//component parameters
onClipEvent (construct) {
    multipleSelection = false;
    rowHeight = 20;
}
﻿
//----------------------------------------------------------------------
//Instance of Symbol 37 MovieClip [SimpleButton] in Symbol 100 MovieClip [HScrollBar] Frame 2
//----------------------------------------------------------------------
//component parameters
onClipEvent (initialize) {
    selected = false;
    toggle = false;
    enabled = true;
    visible = true;
    minHeight = 0;
    minWidth = 0;
}
﻿
//----------------------------------------------------------------------
//Instance of Symbol 294 MovieClip in Symbol 295 MovieClip Frame 11
//----------------------------------------------------------------------
on (release) {
    _root.RootMenu.menuR_11.onRelease();
}
﻿
//----------------------------------------------------------------------
//Symbol 341 MovieClip [__Packages.mx.behaviors.DepthControl] Frame 0
//----------------------------------------------------------------------
    class mx.behaviors.DepthControl extends Object
    {
        function DepthControl () {
            super();
        }
        static function sendToBack(target) {
            var _local2 = false;
            while (_local2 == false) {
                sendBackward(target);
                _local2 = target == getInstanceAtLowest(target._parent);
            }
        }
        static function bringToFront(target) {
            var _local2 = false;
            while (_local2 == false) {
                bringForward(target);
                _local2 = target == getInstanceAtHighest(target._parent);
            }
        }
        static function sendBackward(target) {
            var _local2 = trackDepths(target._parent);
            if (target != getInstanceAtLowest(target._parent)) {
                target.swapDepths(getInstanceLowerThan(target));
            }
        }
        static function bringForward(target) {
            if (target != getInstanceAtHighest(target._parent)) {
                target.swapDepths(getInstanceHigherThan(target));
            }
        }
        static function trackDepths(mcParent) {
            var _local4 = [];
            for (var _local5 in mcParent) {
                if (typeof(mcParent[_local5]) == "movieclip") {
                    _local4.push({mc:mcParent[_local5], depth:mcParent[_local5].getDepth()});
                }
            }
            _local4.sort(orderFunc);
            return(_local4);
        }
        static function orderFunc(a, b) {
            var _local2 = Number(a.depth);
            var _local1 = Number(b.depth);
            if (_local2 > _local1) {
                return(-1);
            }
            if (_local1 > _local2) {
                return(1);
            }
            return(0);
        }
        static function getInstanceAtLowest(targetParent) {
            var _local1 = trackDepths(targetParent);
            return(_local1[_local1.length - 1].mc);
        }
        static function getInstanceAtHighest(targetParent) {
            var _local1 = trackDepths(targetParent);
            return(_local1[0].mc);
        }
        static function getInstanceLowerThan(target) {
            var _local2 = trackDepths(target._parent);
            var _local1 = 0;
            while (_local1 < _local2.length) {
                if (_local2[_local1].mc == target) {
                    break;
                }
                _local1++;
            }
            return(_local2[_local1 + 1].mc);
        }
        static function getInstanceHigherThan(target) {
            var _local2 = trackDepths(target._parent);
            var _local1 = 0;
            while (_local1 < _local2.length) {
                if (_local2[_local1].mc == target) {
                    break;
                }
                _local1++;
            }
            return(_local2[_local1 - 1].mc);
        }
    }
﻿
//----------------------------------------------------------------------
//Symbol 131 MovieClip [__Packages.mx.controls.Button] Frame 0
//----------------------------------------------------------------------
    class mx.controls.Button extends mx.controls.SimpleButton
    {
        var initializing, labelPath, initIcon, getState, enabled, phase, idNames, __width, __height, setState, invalidate, iconName, refresh, createLabel, _iconLinkageName, removeIcons, hitArea_mc, createEmptyObject;
        function Button () {
            super();
        }
        function init(Void) {
            super.init();
        }
        function draw() {
            if (initializing) {
                labelPath.visible = true;
            }
            super.draw();
            if (initIcon != undefined) {
                _setIcon(initIcon);
            }
            delete initIcon;
        }
        function onRelease(Void) {
            super.onRelease();
        }
        function createChildren(Void) {
            super.createChildren();
        }
        function setSkin(tag, linkageName, initobj) {
            return(super.setSkin(tag, linkageName, initobj));
        }
        function viewSkin(varName) {
            var _local3 = (getState() ? "true" : "false");
            _local3 = _local3 + (enabled ? (phase) : "disabled");
            super.viewSkin(varName, {styleName:this, borderStyle:_local3});
        }
        function invalidateStyle(c) {
            labelPath.invalidateStyle(c);
            super.invalidateStyle(c);
        }
        function setColor(c) {
            var _local2 = 0;
            while (_local2 < 8) {
                this[idNames[_local2]].redraw(true);
                _local2++;
            }
        }
        function setEnabled(enable) {
            labelPath.enabled = enable;
            super.setEnabled(enable);
        }
        function calcSize(tag, ref) {
            if ((__width == undefined) || (__height == undefined)) {
                return(undefined);
            }
            if (tag < 7) {
                ref.setSize(__width, __height, true);
            }
        }
        function size(Void) {
            setState(getState());
            setHitArea(__width, __height);
            var _local3 = 0;
            while (_local3 < 8) {
                var _local4 = idNames[_local3];
                if (typeof(this[_local4]) == "movieclip") {
                    this[_local4].setSize(__width, __height, true);
                }
                _local3++;
            }
            super.size();
        }
        function set labelPlacement(val) {
            __labelPlacement = val;
            invalidate();
            //return(labelPlacement);
        }
        function get labelPlacement() {
            return(__labelPlacement);
        }
        function getLabelPlacement(Void) {
            return(__labelPlacement);
        }
        function setLabelPlacement(val) {
            __labelPlacement = val;
            invalidate();
        }
        function getBtnOffset(Void) {
            if (getState()) {
                var _local2 = btnOffset;
            } else if (phase == "down") {
                var _local2 = btnOffset;
            } else {
                var _local2 = 0;
            }
            return(_local2);
        }
        function setView(offset) {
            var _local16 = (offset ? (btnOffset) : 0);
            var _local12 = getLabelPlacement();
            var _local7 = 0;
            var _local6 = 0;
            var _local9 = 0;
            var _local8 = 0;
            var _local5 = 0;
            var _local4 = 0;
            var _local3 = labelPath;
            var _local2 = iconName;
            var _local15 = _local3.textWidth;
            var _local14 = _local3.textHeight;
            var _local10 = (__width - borderW) - borderW;
            var _local11 = (__height - borderW) - borderW;
            if (_local2 != undefined) {
                _local7 = _local2._width;
                _local6 = _local2._height;
            }
            if ((_local12 == "left") || (_local12 == "right")) {
                if (_local3 != undefined) {
                    _local9 = Math.min(_local10 - _local7, _local15 + 5);
                    _local3._width = _local9;
                    _local8 = Math.min(_local11, _local14 + 5);
                    _local3._height = _local8;
                }
                if (_local12 == "right") {
                    _local5 = _local7;
                    if (centerContent) {
                        _local5 = _local5 + (((_local10 - _local9) - _local7) / 2);
                    }
                    _local2._x = _local5 - _local7;
                } else {
                    _local5 = (_local10 - _local9) - _local7;
                    if (centerContent) {
                        _local5 = _local5 / 2;
                    }
                    _local2._x = _local5 + _local9;
                }
                _local4 = 0;
                _local2._y = _local4;
                if (centerContent) {
                    _local2._y = (_local11 - _local6) / 2;
                    _local4 = (_local11 - _local8) / 2;
                }
                if (!centerContent) {
                    _local2._y = _local2._y + Math.max(0, (_local8 - _local6) / 2);
                }
            } else {
                if (_local3 != undefined) {
                    _local9 = Math.min(_local10, _local15 + 5);
                    _local3._width = _local9;
                    _local8 = Math.min(_local11 - _local6, _local14 + 5);
                    _local3._height = _local8;
                }
                _local5 = (_local10 - _local9) / 2;
                _local2._x = (_local10 - _local7) / 2;
                if (_local12 == "top") {
                    _local4 = (_local11 - _local8) - _local6;
                    if (centerContent) {
                        _local4 = _local4 / 2;
                    }
                    _local2._y = _local4 + _local8;
                } else {
                    _local4 = _local6;
                    if (centerContent) {
                        _local4 = _local4 + (((_local11 - _local8) - _local6) / 2);
                    }
                    _local2._y = _local4 - _local6;
                }
            }
            var _local13 = borderW + _local16;
            _local3._x = _local5 + _local13;
            _local3._y = _local4 + _local13;
            _local2._x = _local2._x + _local13;
            _local2._y = _local2._y + _local13;
        }
        function set label(lbl) {
            setLabel(lbl);
            //return(label);
        }
        function setLabel(label) {
            if (label == "") {
                labelPath.removeTextField();
                refresh();
                return(undefined);
            }
            if (labelPath == undefined) {
                var _local2 = createLabel("labelPath", 200, label);
                _local2._width = _local2.textWidth + 5;
                _local2._height = _local2.textHeight + 5;
                if (initializing) {
                    _local2.visible = false;
                }
            } else {
                delete labelPath.__text;
                labelPath.text = label;
                refresh();
            }
        }
        function getLabel(Void) {
            return(((labelPath.__text != undefined) ? (labelPath.__text) : (labelPath.text)));
        }
        function get label() {
            return(getLabel());
        }
        function _getIcon(Void) {
            return(_iconLinkageName);
        }
        function get icon() {
            if (initializing) {
                return(initIcon);
            }
            return(_iconLinkageName);
        }
        function _setIcon(linkage) {
            if (initializing) {
                if (linkage == "") {
                    return(undefined);
                }
                initIcon = linkage;
            } else {
                if (linkage == "") {
                    removeIcons();
                    return(undefined);
                }
                super.changeIcon(0, linkage);
                super.changeIcon(1, linkage);
                super.changeIcon(3, linkage);
                super.changeIcon(4, linkage);
                super.changeIcon(5, linkage);
                _iconLinkageName = linkage;
                refresh();
            }
        }
        function set icon(linkage) {
            _setIcon(linkage);
            //return(icon);
        }
        function setHitArea(w, h) {
            if (hitArea_mc == undefined) {
                createEmptyObject("hitArea_mc", 100);
            }
            var _local2 = hitArea_mc;
            _local2.clear();
            _local2.beginFill(16711680);
            _local2.drawRect(0, 0, w, h);
            _local2.endFill();
            _local2.setVisible(false);
        }
        static var symbolName = "Button";
        static var symbolOwner = mx.controls.Button;
        var className = "Button";
        static var version = "2.0.2.126";
        var btnOffset = 0;
        var _color = "buttonColor";
        var __label = "default value";
        var __labelPlacement = "right";
        var falseUpSkin = "ButtonSkin";
        var falseDownSkin = "ButtonSkin";
        var falseOverSkin = "ButtonSkin";
        var falseDisabledSkin = "ButtonSkin";
        var trueUpSkin = "ButtonSkin";
        var trueDownSkin = "ButtonSkin";
        var trueOverSkin = "ButtonSkin";
        var trueDisabledSkin = "ButtonSkin";
        var falseUpIcon = "";
        var falseDownIcon = "";
        var falseOverIcon = "";
        var falseDisabledIcon = "";
        var trueUpIcon = "";
        var trueDownIcon = "";
        var trueOverIcon = "";
        var trueDisabledIcon = "";
        var clipParameters = {labelPlacement:1, icon:1, toggle:1, selected:1, label:1};
        static var mergedClipParameters = mx.core.UIObject.mergeClipParameters(mx.controls.Button.prototype.clipParameters, mx.controls.SimpleButton.prototype.clipParameters);
        var centerContent = true;
        var borderW = 1;
    }
﻿
//----------------------------------------------------------------------
//Symbol 133 MovieClip [__Packages.mx.skins.halo.ButtonSkin] Frame 0
//----------------------------------------------------------------------
    class mx.skins.halo.ButtonSkin extends mx.skins.RectBorder
    {
        var __get__width, __get__height, getStyle, _parent, clear, drawRoundRect, __get__x, __get__y;
        function ButtonSkin () {
            super();
        }
        function init() {
            super.init();
        }
        function size() {
            drawHaloRect(__get__width(), __get__height());
        }
        function drawHaloRect(w, h) {
            var _local6 = getStyle("borderStyle");
            var _local4 = getStyle("themeColor");
            var _local5 = _parent.emphasized;
            clear();
            switch (_local6) {
                case "falseup" : 
                    if (_local5) {
                        drawRoundRect(__get__x(), __get__y(), w, h, 5, 9542041, 100);
                        drawRoundRect(__get__x(), __get__y(), w, h, 5, _local4, 75);
                        drawRoundRect(__get__x() + 1, __get__y() + 1, w - 2, h - 2, 4, [3355443, 16777215], 85, 0, "radial");
                        drawRoundRect(__get__x() + 2, __get__y() + 2, w - 4, h - 4, 3, [0, 14342874], 100, 0, "radial");
                        drawRoundRect(__get__x() + 2, __get__y() + 2, w - 4, h - 4, 3, _local4, 75);
                        drawRoundRect(__get__x() + 3, __get__y() + 3, w - 6, h - 6, 2, 16777215, 100);
                        drawRoundRect(__get__x() + 3, __get__y() + 4, w - 6, h - 7, 2, 16316664, 100);
                    } else {
                        drawRoundRect(0, 0, w, h, 5, 9542041, 100);
                        drawRoundRect(1, 1, w - 2, h - 2, 4, [13291985, 16250871], 100, 0, "radial");
                        drawRoundRect(2, 2, w - 4, h - 4, 3, [9542041, 13818586], 100, 0, "radial");
                        drawRoundRect(3, 3, w - 6, h - 6, 2, 16777215, 100);
                        drawRoundRect(3, 4, w - 6, h - 7, 2, 16316664, 100);
                    }
                    break;
                case "falsedown" : 
                    drawRoundRect(__get__x(), __get__y(), w, h, 5, 9542041, 100);
                    drawRoundRect(__get__x() + 1, __get__y() + 1, w - 2, h - 2, 4, [3355443, 16579836], 100, 0, "radial");
                    drawRoundRect(__get__x() + 1, __get__y() + 1, w - 2, h - 2, 4, _local4, 50);
                    drawRoundRect(__get__x() + 2, __get__y() + 2, w - 4, h - 4, 3, [0, 14342874], 100, 0, "radial");
                    drawRoundRect(__get__x(), __get__y(), w, h, 5, _local4, 40);
                    drawRoundRect(__get__x() + 3, __get__y() + 3, w - 6, h - 6, 2, 16777215, 100);
                    drawRoundRect(__get__x() + 3, __get__y() + 4, w - 6, h - 7, 2, _local4, 20);
                    break;
                case "falserollover" : 
                    drawRoundRect(__get__x(), __get__y(), w, h, 5, 9542041, 100);
                    drawRoundRect(__get__x(), __get__y(), w, h, 5, _local4, 50);
                    drawRoundRect(__get__x() + 1, __get__y() + 1, w - 2, h - 2, 4, [3355443, 16777215], 100, 0, "radial");
                    drawRoundRect(__get__x() + 2, __get__y() + 2, w - 4, h - 4, 3, [0, 14342874], 100, 0, "radial");
                    drawRoundRect(__get__x() + 2, __get__y() + 2, w - 4, h - 4, 3, _local4, 50);
                    drawRoundRect(__get__x() + 3, __get__y() + 3, w - 6, h - 6, 2, 16777215, 100);
                    drawRoundRect(__get__x() + 3, __get__y() + 4, w - 6, h - 7, 2, 16316664, 100);
                    break;
                case "falsedisabled" : 
                    drawRoundRect(0, 0, w, h, 5, 13159628, 100);
                    drawRoundRect(1, 1, w - 2, h - 2, 4, 15921906, 100);
                    drawRoundRect(2, 2, w - 4, h - 4, 3, 13949401, 100);
                    drawRoundRect(3, 3, w - 6, h - 6, 2, 15921906, 100);
                    break;
                case "trueup" : 
                    drawRoundRect(__get__x(), __get__y(), w, h, 5, 10066329, 100);
                    drawRoundRect(__get__x() + 1, __get__y() + 1, w - 2, h - 2, 4, [3355443, 16579836], 100, 0, "radial");
                    drawRoundRect(__get__x() + 1, __get__y() + 1, w - 2, h - 2, 4, _local4, 50);
                    drawRoundRect(__get__x() + 2, __get__y() + 2, w - 4, h - 4, 3, [0, 14342874], 100, 0, "radial");
                    drawRoundRect(__get__x(), __get__y(), w, h, 5, _local4, 40);
                    drawRoundRect(__get__x() + 3, __get__y() + 3, w - 6, h - 6, 2, 16777215, 100);
                    drawRoundRect(__get__x() + 3, __get__y() + 4, w - 6, h - 7, 2, 16250871, 100);
                    break;
                case "truedown" : 
                    drawRoundRect(__get__x(), __get__y(), w, h, 5, 10066329, 100);
                    drawRoundRect(__get__x() + 1, __get__y() + 1, w - 2, h - 2, 4, [3355443, 16579836], 100, 0, "radial");
                    drawRoundRect(__get__x() + 1, __get__y() + 1, w - 2, h - 2, 4, _local4, 50);
                    drawRoundRect(__get__x() + 2, __get__y() + 2, w - 4, h - 4, 3, [0, 14342874], 100, 0, "radial");
                    drawRoundRect(__get__x(), __get__y(), w, h, 5, _local4, 40);
                    drawRoundRect(__get__x() + 3, __get__y() + 3, w - 6, h - 6, 2, 16777215, 100);
                    drawRoundRect(__get__x() + 3, __get__y() + 4, w - 6, h - 7, 2, _local4, 20);
                    break;
                case "truerollover" : 
                    drawRoundRect(__get__x(), __get__y(), w, h, 5, 9542041, 100);
                    drawRoundRect(__get__x(), __get__y(), w, h, 5, _local4, 50);
                    drawRoundRect(__get__x() + 1, __get__y() + 1, w - 2, h - 2, 4, [3355443, 16777215], 100, 0, "radial");
                    drawRoundRect(__get__x() + 1, __get__y() + 1, w - 2, h - 2, 4, _local4, 40);
                    drawRoundRect(__get__x() + 2, __get__y() + 2, w - 4, h - 4, 3, [0, 14342874], 100, 0, "radial");
                    drawRoundRect(__get__x() + 2, __get__y() + 2, w - 4, h - 4, 3, _local4, 40);
                    drawRoundRect(__get__x() + 3, __get__y() + 3, w - 6, h - 6, 2, 16777215, 100);
                    drawRoundRect(__get__x() + 3, __get__y() + 4, w - 6, h - 7, 2, 16316664, 100);
                    break;
                case "truedisabled" : 
                    drawRoundRect(0, 0, w, h, 5, 13159628, 100);
                    drawRoundRect(1, 1, w - 2, h - 2, 4, 15921906, 100);
                    drawRoundRect(2, 2, w - 4, h - 4, 3, 13949401, 100);
                    drawRoundRect(3, 3, w - 6, h - 6, 2, 15921906, 100);
            }
        }
        static function classConstruct() {
            mx.core.ext.UIObjectExtensions.Extensions();
            _global.skinRegistry.ButtonSkin = true;
            return(true);
        }
        static var symbolName = "ButtonSkin";
        static var symbolOwner = mx.skins.halo.ButtonSkin;
        var className = "ButtonSkin";
        var backgroundColorName = "buttonColor";
        static var classConstructed = classConstruct();
        static var UIObjectExtensionsDependency = mx.core.ext.UIObjectExtensions;
    }
﻿
//----------------------------------------------------------------------
//Symbol 130 MovieClip [__Packages.mx.controls.HScrollBar] Frame 0
//----------------------------------------------------------------------
    class mx.controls.HScrollBar extends mx.controls.scrollClasses.ScrollBar
    {
        var _minHeight, _minWidth, _xscale, _rotation, __width, scrollIt;
        function HScrollBar () {
            super();
        }
        function getMinWidth(Void) {
            return(_minHeight);
        }
        function getMinHeight(Void) {
            return(_minWidth);
        }
        function init(Void) {
            super.init();
            _xscale = -100;
            _rotation = -90;
        }
        function get virtualHeight() {
            return(__width);
        }
        function isScrollBarKey(k) {
            if (k == 37) {
                scrollIt("Line", -1);
                return(true);
            }
            if (k == 39) {
                scrollIt("Line", 1);
                return(true);
            }
            return(super.isScrollBarKey(k));
        }
        static var symbolName = "HScrollBar";
        static var symbolOwner = mx.core.UIComponent;
        static var version = "2.0.2.126";
        var className = "HScrollBar";
        var minusMode = "Left";
        var plusMode = "Right";
        var minMode = "AtLeft";
        var maxMode = "AtRight";
    }
﻿
//----------------------------------------------------------------------
//Instance of Symbol 41 MovieClip [Button] in Symbol 101 MovieClip [VScrollBar] Frame 2
//----------------------------------------------------------------------
//component parameters
onClipEvent (initialize) {
    icon = "";
    label = "Button";
    labelPlacement = "right";
    selected = false;
    toggle = false;
    enabled = true;
    visible = true;
    minHeight = 0;
    minWidth = 0;
}
﻿
//----------------------------------------------------------------------
//Symbol 3 MovieClip [__Packages.mx.core.View] Frame 0
//----------------------------------------------------------------------
    class mx.core.View extends mx.core.UIComponent
    {
        var tabChildren, tabEnabled, boundingBox_mc, border_mc, __get__width, __get__height, __tabIndex, depth, createObject, createClassObject, loadExternal, destroyObject, createClassChildAtDepth, doLater;
        function View () {
            super();
        }
        function init() {
            super.init();
            tabChildren = true;
            tabEnabled = false;
            boundingBox_mc._visible = false;
            boundingBox_mc._width = (boundingBox_mc._height = 0);
        }
        function size() {
            border_mc.move(0, 0);
            border_mc.setSize(__get__width(), __get__height());
            doLayout();
        }
        function draw() {
            size();
        }
        function get numChildren() {
            var _local3 = childNameBase;
            var _local2 = 0;
            while (true) {
                if (this[_local3 + _local2] == undefined) {
                    return(_local2);
                }
                _local2++;
            }
        }
        function get tabIndex() {
            return((tabEnabled ? (__tabIndex) : undefined));
        }
        function addLayoutObject(object) {
        }
        function createChild(className, instanceName, initProps) {
            if (depth == undefined) {
                depth = 1;
            }
            var _local2;
            if (typeof(className) == "string") {
                _local2 = createObject(className, instanceName, depth++, initProps);
            } else {
                _local2 = createClassObject(className, instanceName, depth++, initProps);
            }
            if (_local2 == undefined) {
                _local2 = loadExternal(className, _loadExternalClass, instanceName, depth++, initProps);
            } else {
                this[childNameBase + numChildren] = _local2;
                _local2._complete = true;
                childLoaded(_local2);
            }
            addLayoutObject(_local2);
            return(_local2);
        }
        function getChildAt(childIndex) {
            return(this[childNameBase + childIndex]);
        }
        function destroyChildAt(childIndex) {
            if (!((childIndex >= 0) && (childIndex < numChildren))) {
                return(undefined);
            }
            var _local4 = childNameBase + childIndex;
            var _local6 = numChildren;
            var _local3;
            for (_local3 in this) {
                if (_local3 == _local4) {
                    _local4 = "";
                    destroyObject(_local3);
                    break;
                }
            }
            var _local2 = Number(childIndex);
            while (_local2 < (_local6 - 1)) {
                this[childNameBase + _local2] = this[childNameBase + (_local2 + 1)];
                _local2++;
            }
            delete this[childNameBase + (_local6 - 1)];
            depth--;
        }
        function initLayout() {
            if (!hasBeenLayedOut) {
                doLayout();
            }
        }
        function doLayout() {
            hasBeenLayedOut = true;
        }
        function createChildren() {
            if (border_mc == undefined) {
                border_mc = createClassChildAtDepth(_global.styles.rectBorderClass, mx.managers.DepthManager.kBottom, {styleName:this});
            }
            doLater(this, "initLayout");
        }
        function convertToUIObject(obj) {
        }
        function childLoaded(obj) {
            convertToUIObject(obj);
        }
        static function extension() {
            mx.core.ExternalContent.enableExternalContent();
        }
        static var symbolName = "View";
        static var symbolOwner = mx.core.View;
        static var version = "2.0.2.126";
        var className = "View";
        static var childNameBase = "_child";
        var hasBeenLayedOut = false;
        var _loadExternalClass = "UIComponent";
    }
﻿
//----------------------------------------------------------------------
//Symbol 320 MovieClip Frame 4
//----------------------------------------------------------------------
    function playTime() {
        DQ = int(s.position / 1000);
        if (DQ == 30) {
            SC_info.play();
        }
        _root.PL_time = DQ;
        Ztime = int(s.duration / 1000);
        _root.tingWanTime++;
        _root.tingWanZTime = Ztime;
        loadBar1._width = 370 * (((DQ / Ztime) * 100) / 100);
        playJDT._x = loadBar1._width + 99;
        time1 = ((int(s.position / 60000) < 10) ? ("0" + int(s.position / 60000)) : (int(s.position / 60000)));
        time2 = ((int((s.position / 1000) % 60) < 10) ? ("0" + int((s.position / 1000) % 60)) : (int((s.position / 1000) % 60)));
        time3 = ((int(s.duration / 60000) < 10) ? ("0" + int(s.duration / 60000)) : (int(s.duration / 60000)));
        time4 = ((int((s.duration / 1000) % 60) < 10) ? ("0" + int((s.duration / 1000) % 60)) : (int((s.duration / 1000) % 60)));
        DQSJ = (time1 + ":") + time2;
        ZSJ = (time3 + ":") + time4;
    }
    function starPlay() {
        var _local1;
        _local1 = setInterval(playTime, 1000);
    }
    function stopPlay() {
        clearInterval(intervalTime);
    }
    stop();
    Mname.text = _root.playerFileName;
    s.stop();
    s = new Sound();
    _root.tingWanTime = 0;
    _root.tingWanZTime = 0;
    _root.PLloopCount = 0;
    _root.PL_Array = "";
    MusicName_mc.setMask(ZZ_mc);
    loadBar1._width = 1;
    btn2.onPress = function () {
        if (key) {
            s.stop();
            trackname = "\u505C\u6B62";
            mix.gotoAndPlay(1);
            played = 0;
            key = false;
            s = new Sound();
            btn3.gotoAndStop("stop");
            stopPlay();
        }
    };
    btn3.onPress = function () {
        if (key) {
            if (paused) {
                s.start(played / 1000, 1);
                mix.gotoAndStop(1);
                paused = false;
                trackname = "\u64AD\u653E";
                btn3.gotoAndStop("play");
                starPlay();
            } else {
                played = s.position;
                s.stop();
                mix.gotoAndPlay(1);
                trackname = "\u6682\u505C";
                paused = true;
                btn3.gotoAndStop("stop");
                stopPlay();
            }
        } else {
            btn3.gotoAndStop("play");
            trackname = "\u64AD\u653E";
            loadsound(_root.playerFile);
            starPlay();
        }
    };
    loadsound(_root.playerFile);
    var time1 = ((time2 = (time3 = (time4 = 0))));
    starPlay();
    preload.onRelease = (preload.onReleaseOutside = function () {
        var _local2 = (Math.floor(_xmouse - this._x) / 370) * Ztime;
        s.start(_local2);
        paused = false;
        starPlay();
        btn3.gotoAndStop("play");
        trackname = "\u64AD\u653E";
    });
    if (_root.ifLStingGe(_root.playerMusic_ID) == 0) {
        _root.tingGe(_root.LStingGe);
        _root.LStingGe = "";
    }

﻿
//----------------------------------------------------------------------
//Symbol 9 MovieClip [__Packages.mx.controls.List] Frame 0
//----------------------------------------------------------------------
    class mx.controls.List extends mx.controls.listclasses.ScrollSelectList
    {
        var border_mc, __labels, setDataProvider, roundUp, __get__rowCount, __dataProvider, __maxHPosition, invScrollProps, invalidate, __vPosition, getViewMetrics, setSize, __width, __rowHeight, totalWidth, totalHeight, displayWidth, __hScrollPolicy, vScroller, __hPosition, listContent, data, mask_mc, __height, __rowCount, invRowHeight, invLayoutContent, setScrollProperties, oldVWidth;
        function List () {
            super();
        }
        function setEnabled(v) {
            super.setEnabled(v);
            border_mc.backgroundColorName = (v ? "backgroundColor" : "backgroundDisabledColor");
            border_mc.invalidate();
        }
        function get labels() {
            return(__labels);
        }
        function set labels(lbls) {
            __labels = lbls;
            setDataProvider(lbls);
            //return(labels);
        }
        function setVPosition(pos) {
            pos = Math.min((__dataProvider.length - __get__rowCount()) + roundUp, pos);
            pos = Math.max(0, pos);
            super.setVPosition(pos);
        }
        function setHPosition(pos) {
            pos = Math.max(Math.min(__maxHPosition, pos), 0);
            super.setHPosition(pos);
            hScroll(pos);
        }
        function setMaxHPosition(pos) {
            __maxHPosition = pos;
            invScrollProps = true;
            invalidate();
        }
        function setHScrollPolicy(policy) {
            if ((policy.toLowerCase() == "auto") && (!autoHScrollAble)) {
                return(undefined);
            }
            super.setHScrollPolicy(policy);
            if (policy == "off") {
                setHPosition(0);
                setVPosition(Math.min((__dataProvider.length - __get__rowCount()) + roundUp, __vPosition));
            }
        }
        function setRowCount(rC) {
            if (isNaN(rC)) {
                return(undefined);
            }
            var _local2 = getViewMetrics();
            setSize(__width, ((__rowHeight * rC) + _local2.top) + _local2.bottom);
        }
        function layoutContent(x, y, tW, tH, dW, dH) {
            totalWidth = tW;
            totalHeight = tH;
            displayWidth = dW;
            var _local4 = (((__hScrollPolicy == "on") || (__hScrollPolicy == "auto")) ? (Math.max(tW, dW)) : (dW));
            super.layoutContent(x, y, _local4, dH);
        }
        function modelChanged(eventObj) {
            super.modelChanged(eventObj);
            var _local3 = eventObj.eventName;
            if ((((_local3 == "addItems") || (_local3 == "removeItems")) || (_local3 == "updateAll")) || (_local3 == "filterModel")) {
                invScrollProps = true;
                invalidate("invScrollProps");
            }
        }
        function onScroll(eventObj) {
            var _local3 = eventObj.target;
            if (_local3 == vScroller) {
                setVPosition(_local3.scrollPosition);
            } else {
                hScroll(_local3.scrollPosition);
            }
            super.onScroll(eventObj);
        }
        function hScroll(pos) {
            __hPosition = pos;
            listContent._x = -pos;
        }
        function init(Void) {
            super.init();
            if (labels.length > 0) {
                var _local6 = new Array();
                var _local3 = 0;
                while (_local3 < labels.length) {
                    _local6.addItem({label:labels[_local3], data:data[_local3]});
                    _local3++;
                }
                setDataProvider(_local6);
            }
            __maxHPosition = 0;
        }
        function createChildren(Void) {
            super.createChildren();
            listContent.setMask(mask_mc);
            border_mc.move(0, 0);
            border_mc.setSize(__width, __height);
        }
        function getRowCount(Void) {
            var _local2 = getViewMetrics();
            return(((__rowCount == 0) ? (Math.ceil(((__height - _local2.top) - _local2.bottom) / __rowHeight)) : (__rowCount)));
        }
        function size(Void) {
            super.size();
            configureScrolling();
            var _local3 = getViewMetrics();
            layoutContent(_local3.left, _local3.top, __width + __maxHPosition, totalHeight, (__width - _local3.left) - _local3.right, (__height - _local3.top) - _local3.bottom);
        }
        function draw(Void) {
            if (invRowHeight) {
                invScrollProps = true;
                super.draw();
                listContent.setMask(mask_mc);
                invLayoutContent = true;
            }
            if (invScrollProps) {
                configureScrolling();
                delete invScrollProps;
            }
            if (invLayoutContent) {
                var _local3 = getViewMetrics();
                layoutContent(_local3.left, _local3.top, __width + __maxHPosition, totalHeight, (__width - _local3.left) - _local3.right, (__height - _local3.top) - _local3.bottom);
            }
            super.draw();
        }
        function configureScrolling(Void) {
            var _local2 = __dataProvider.length;
            if (__vPosition > Math.max(0, (_local2 - getRowCount()) + roundUp)) {
                setVPosition(Math.max(0, Math.min((_local2 - getRowCount()) + roundUp, __vPosition)));
            }
            var _local3 = getViewMetrics();
            var _local4 = ((__hScrollPolicy != "off") ? (((__maxHPosition + __width) - _local3.left) - _local3.right) : ((__width - _local3.left) - _local3.right));
            if (_local2 == undefined) {
                _local2 = 0;
            }
            setScrollProperties(_local4, 1, _local2, __rowHeight);
            if (oldVWidth != _local4) {
                invLayoutContent = true;
            }
            oldVWidth = _local4;
        }
        static var symbolOwner = mx.controls.List;
        static var symbolName = "List";
        var className = "List";
        static var version = "2.0.2.126";
        var clipParameters = {rowHeight:1, enabled:1, visible:1, labels:1};
        var scrollDepth = 1;
        var __vScrollPolicy = "on";
        var autoHScrollAble = false;
    }
﻿
//----------------------------------------------------------------------
//Symbol 123 MovieClip [__Packages.mx.skins.halo.Defaults] Frame 0
//----------------------------------------------------------------------
    class mx.skins.halo.Defaults
    {
        var beginGradientFill, beginFill, moveTo, lineTo, curveTo, endFill;
        function Defaults () {
        }
        static function setThemeDefaults() {
            var _local2 = _global.style;
            _local2.themeColor = 8453965 /* 0x80FF4D */;
            _local2.disabledColor = 8684164 /* 0x848284 */;
            _local2.modalTransparency = 0;
            _local2.filled = true;
            _local2.stroked = true;
            _local2.strokeWidth = 1;
            _local2.strokeColor = 0;
            _local2.fillColor = 16777215 /* 0xFFFFFF */;
            _local2.repeatInterval = 35;
            _local2.repeatDelay = 500;
            _local2.fontFamily = "_sans";
            _local2.fontSize = 12;
            _local2.selectionColor = 13500353 /* 0xCDFFC1 */;
            _local2.rollOverColor = 14942166 /* 0xE3FFD6 */;
            _local2.useRollOver = true;
            _local2.backgroundDisabledColor = 14540253 /* 0xDDDDDD */;
            _local2.selectionDisabledColor = 14540253 /* 0xDDDDDD */;
            _local2.selectionDuration = 200;
            _local2.openDuration = 250;
            _local2.borderStyle = "inset";
            _local2.color = 734012 /* 0x0B333C */;
            _local2.textSelectedColor = 24371;
            _local2.textRollOverColor = 2831164 /* 0x2B333C */;
            _local2.textDisabledColor = 16777215 /* 0xFFFFFF */;
            _local2.vGridLines = true;
            _local2.hGridLines = false;
            _local2.vGridLineColor = 6710886 /* 0x666666 */;
            _local2.hGridLineColor = 6710886 /* 0x666666 */;
            _local2.headerColor = 15395562 /* 0xEAEAEA */;
            _local2.indentation = 17;
            _local2.folderOpenIcon = "TreeFolderOpen";
            _local2.folderClosedIcon = "TreeFolderClosed";
            _local2.defaultLeafIcon = "TreeNodeIcon";
            _local2.disclosureOpenIcon = "TreeDisclosureOpen";
            _local2.disclosureClosedIcon = "TreeDisclosureClosed";
            _local2.popupDuration = 150;
            _local2.todayColor = 6710886 /* 0x666666 */;
            _local2 = (_global.styles.ScrollSelectList = new mx.styles.CSSStyleDeclaration());
            _local2.backgroundColor = 16777215 /* 0xFFFFFF */;
            _local2.borderColor = 13290186 /* 0xCACACA */;
            _local2.borderStyle = "inset";
            _local2 = (_global.styles.ComboBox = new mx.styles.CSSStyleDeclaration());
            _local2.borderStyle = "inset";
            _local2 = (_global.styles.NumericStepper = new mx.styles.CSSStyleDeclaration());
            _local2.textAlign = "center";
            _local2 = (_global.styles.RectBorder = new mx.styles.CSSStyleDeclaration());
            _local2.borderColor = 14015965 /* 0xD5DDDD */;
            _local2.buttonColor = 7305079 /* 0x6F7777 */;
            _local2.shadowColor = 15658734 /* 0xEEEEEE */;
            _local2.highlightColor = 12897484 /* 0xC4CCCC */;
            _local2.shadowCapColor = 14015965 /* 0xD5DDDD */;
            _local2.borderCapColor = 9542041 /* 0x919999 */;
            var _local4 = new Object();
            _local4.borderColor = 16711680 /* 0xFF0000 */;
            _local4.buttonColor = 16711680 /* 0xFF0000 */;
            _local4.shadowColor = 16711680 /* 0xFF0000 */;
            _local4.highlightColor = 16711680 /* 0xFF0000 */;
            _local4.shadowCapColor = 16711680 /* 0xFF0000 */;
            _local4.borderCapColor = 16711680 /* 0xFF0000 */;
            mx.core.UIComponent.prototype.origBorderStyles = _local4;
            var _local3;
            _local3 = (_global.styles.TextInput = new mx.styles.CSSStyleDeclaration());
            _local3.backgroundColor = 16777215 /* 0xFFFFFF */;
            _local3.borderStyle = "inset";
            _global.styles.TextArea = _global.styles.TextInput;
            _local3 = (_global.styles.Window = new mx.styles.CSSStyleDeclaration());
            _local3.borderStyle = "default";
            _local3 = (_global.styles.windowStyles = new mx.styles.CSSStyleDeclaration());
            _local3.fontWeight = "bold";
            _local3 = (_global.styles.dataGridStyles = new mx.styles.CSSStyleDeclaration());
            _local3.fontWeight = "bold";
            _local3 = (_global.styles.Alert = new mx.styles.CSSStyleDeclaration());
            _local3.borderStyle = "alert";
            _local3 = (_global.styles.ScrollView = new mx.styles.CSSStyleDeclaration());
            _local3.borderStyle = "inset";
            _local3 = (_global.styles.View = new mx.styles.CSSStyleDeclaration());
            _local3.borderStyle = "none";
            _local3 = (_global.styles.ProgressBar = new mx.styles.CSSStyleDeclaration());
            _local3.color = 11187123 /* 0xAAB3B3 */;
            _local3.fontWeight = "bold";
            _local3 = (_global.styles.AccordionHeader = new mx.styles.CSSStyleDeclaration());
            _local3.fontWeight = "bold";
            _local3.fontSize = "11";
            _local3 = (_global.styles.Accordion = new mx.styles.CSSStyleDeclaration());
            _local3.borderStyle = "solid";
            _local3.backgroundColor = 16777215 /* 0xFFFFFF */;
            _local3.borderColor = 9081738 /* 0x8A938A */;
            _local3.headerHeight = 22;
            _local3.marginLeft = (_local3.marginRight = (_local3.marginTop = (_local3.marginBottom = -1)));
            _local3.verticalGap = -1;
            _local3 = (_global.styles.DateChooser = new mx.styles.CSSStyleDeclaration());
            _local3.borderColor = 9542041 /* 0x919999 */;
            _local3.headerColor = 16777215 /* 0xFFFFFF */;
            _local3 = (_global.styles.CalendarLayout = new mx.styles.CSSStyleDeclaration());
            _local3.fontSize = 10;
            _local3.textAlign = "right";
            _local3.color = 2831164 /* 0x2B333C */;
            _local3 = (_global.styles.WeekDayStyle = new mx.styles.CSSStyleDeclaration());
            _local3.fontWeight = "bold";
            _local3.fontSize = 11;
            _local3.textAlign = "center";
            _local3.color = 2831164 /* 0x2B333C */;
            _local3 = (_global.styles.TodayStyle = new mx.styles.CSSStyleDeclaration());
            _local3.color = 16777215 /* 0xFFFFFF */;
            _local3 = (_global.styles.HeaderDateText = new mx.styles.CSSStyleDeclaration());
            _local3.fontSize = 12;
            _local3.fontWeight = "bold";
            _local3.textAlign = "center";
        }
        function drawRoundRect(x, y, w, h, r, c, alpha, rot, gradient, ratios) {
            if (typeof(r) == "object") {
                var _local18 = r.br;
                var _local16 = r.bl;
                var _local15 = r.tl;
                var _local10 = r.tr;
            } else {
                var _local10 = r;
                var _local15 = _local10;
                var _local16 = _local15;
                var _local18 = _local16;
            }
            if (typeof(c) == "object") {
                if (typeof(alpha) != "object") {
                    var _local9 = [alpha, alpha];
                } else {
                    var _local9 = alpha;
                }
                if (ratios == undefined) {
                    ratios = [0, 255];
                }
                var _local14 = h * 0.7;
                if (typeof(rot) != "object") {
                    var _local11 = {matrixType:"box", x:-_local14, y:_local14, w:w * 2, h:h * 4, r:rot * 0.0174532925199433 /* Math.PI/180 */};
                } else {
                    var _local11 = rot;
                }
                if (gradient == "radial") {
                    beginGradientFill("radial", c, _local9, ratios, _local11);
                } else {
                    beginGradientFill("linear", c, _local9, ratios, _local11);
                }
            } else if (c != undefined) {
                beginFill(c, alpha);
            }
            r = _local18;
            var _local13 = r - (r * 0.707106781186547);
            var _local12 = r - (r * 0.414213562373095);
            moveTo(x + w, (y + h) - r);
            lineTo(x + w, (y + h) - r);
            curveTo(x + w, (y + h) - _local12, (x + w) - _local13, (y + h) - _local13);
            curveTo((x + w) - _local12, y + h, (x + w) - r, y + h);
            r = _local16;
            _local13 = r - (r * 0.707106781186547);
            _local12 = r - (r * 0.414213562373095);
            lineTo(x + r, y + h);
            curveTo(x + _local12, y + h, x + _local13, (y + h) - _local13);
            curveTo(x, (y + h) - _local12, x, (y + h) - r);
            r = _local15;
            _local13 = r - (r * 0.707106781186547);
            _local12 = r - (r * 0.414213562373095);
            lineTo(x, y + r);
            curveTo(x, y + _local12, x + _local13, y + _local13);
            curveTo(x + _local12, y, x + r, y);
            r = _local10;
            _local13 = r - (r * 0.707106781186547);
            _local12 = r - (r * 0.414213562373095);
            lineTo((x + w) - r, y);
            curveTo((x + w) - _local12, y, (x + w) - _local13, y + _local13);
            curveTo(x + w, y + _local12, x + w, y + r);
            lineTo(x + w, (y + h) - r);
            if (c != undefined) {
                endFill();
            }
        }
        static function classConstruct() {
            mx.core.ext.UIObjectExtensions.Extensions();
            setThemeDefaults();
            mx.core.UIObject.prototype.drawRoundRect = mx.skins.halo.Defaults.prototype.drawRoundRect;
            return(true);
        }
        static var classConstructed = classConstruct();
        static var CSSStyleDeclarationDependency = mx.styles.CSSStyleDeclaration;
        static var UIObjectExtensionsDependency = mx.core.ext.UIObjectExtensions;
        static var UIObjectDependency = mx.core.UIObject;
    }
﻿
//----------------------------------------------------------------------
//Symbol 295 MovieClip Frame 9
//----------------------------------------------------------------------
    stop();

﻿
//----------------------------------------------------------------------
//Symbol 320 MovieClip Frame 5
//----------------------------------------------------------------------
    Mname.text = _root.playerFileName;
    close_interval();
    var s = new Sound();
    var paused_red5 = false;

﻿
//----------------------------------------------------------------------
//Symbol 332 Button
//----------------------------------------------------------------------
on (release) {
    _parent.playHQ_mc._visible = 0;
}
﻿
//----------------------------------------------------------------------
//Symbol 322 MovieClip Frame 1
//----------------------------------------------------------------------
    function load_MList() {
        MList.selectable = false;
        MList.removeAll();
        MList.addItem("\u6B63\u5728\u8F7D\u5165\u97F3\u4E50\u5217\u8868,\u8BF7\u7A0D\u540E...");
        if (((_root.ZJid == "") || (_root.ZJid == undefined)) && ((_root.music_ID == "") || (_root.music_ID == undefined))) {
            loadMusicShow(_root.strLoadMusic);
        } else {
            var loadMusic = new LoadVars();
            if ((_root.ZJid == "") || (_root.ZJid == undefined)) {
                thisPath = (_root.DataAsp + "load_webPlay_musicID.asp?music_ID=") + _root.music_ID;
            } else {
                thisPath = ((_root.DataPath + "DJ/DJ2010_") + _root.ZJid) + ".txt";
            }
            loadMusic.load(thisPath);
            loadMusic.onLoad = function (success) {
                if (success) {
                    loadMusicShow(loadMusic.strLoadMusic);
                    loadMC._visible = 0;
                    loadMC.gotoAndPlay("\u505C\u6B62");
                } else {
                    _root.msgBox("\u8F7D\u5165DJ\u821E\u66F2\u5217\u8868\u51FA\u9519\uFF0C\u53EF\u80FD\u7531\u4E8E\u7F51\u7EDC\u7E41\u5FD9\u3002");
                }
            };
        }
    }
    function loadMusicShow(musicTxt) {
        MList.removeAll();
        myArray = new Array();
        myArray = musicTxt.split("|||");
        var _local2 = 1;
        i = 0;
        while (i < myArray.length) {
            B = new Array();
            B = myArray[i].split(",,,");
            if (B[1] != undefined) {
                MList.addItem({label:(_local2 + ".") + B[1], data:myArray[i]});
                MList.setPropertiesAt(i, {icon:"DJListCIO"});
                _local2++;
            }
            i++;
        }
        if ((_root.ZJid == "") || (_root.ZJid == undefined)) {
            myArrayLS = new Array();
            myArrayLS = _root.LStingGeArray.split("|||");
            L = 0;
            while (L < myArrayLS.length) {
                B = new Array();
                B = myArrayLS[L].split(",,,");
                if (B[1] != undefined) {
                    MList.addItem({label:(_local2 + ".") + B[1], data:myArrayLS[L]});
                    MList.setPropertiesAt(i, {icon:"DJListCIO"});
                    _local2++;
                }
                i++;
                L++;
            }
        }
        MList.selectable = true;
        MList.setSelectedIndex(0);
        myMusicList();
    }
    function myMusicList() {
        _root.ifPlayStop = true;
        _root.DJpathReload = false;
        _root.R_play_mc.gotoAndStop("\u505C\u6B62");
        thisData = MList.selectedItem.data;
        _root.LStingGe = thisData;
        var _local2 = new Array();
		//strLoadMusic=132576,,,DJ问情-心痛2011【情感车载慢摇】,,,flash/up20101113-1/DJ问情-心痛2011【情感车载慢摇】.mp3,,,2,,,3446723,,,65:47,,,2010-11-13,,,dj问情
        _local2 = thisData.split(",,,");
        _root.playerFile = _local2[2];//flash/up20101113-1/DJ问情-心痛2011【情感车载慢摇】.mp3
        if (int(_local2[0]) > 97160) {
            _root.DJpath = _root.PlayDJdel2(_local2[2]);
        } else {
            _root.DJpath = _root.PlayDJdel(_local2[2]);
        }
        _root.playerMusic_ID = _local2[0];
        if (_root.playerMusic_ID >= 263755) {
            _root.DJpath = jmfilename(_root.DJpath);
        }
        _root.playerFileName = _local2[1];
        _root.this_up_HYname = _local2[7];
        _root.playerTuiJian = _local2[3];
        _root.music_lookCount = _local2[4];
        _root.down320count = _local2[10];
        _root.vote_haoTing = _local2[8];
        _root.vote_buHao = _local2[9];
        newDJurl(_root.DJpath);
    }
    function newDJurl(temp_url) {
        if (_root.DJpathReload) {
            var load_mp3Path = new LoadVars();
            load_mp3Path.onLoad = function (success) {
                if (success) {
                    if ((load_mp3Path.jmurl == "no") || (load_mp3Path.jmurl == undefined)) {
                        _root.reloadCS();
                        myMusicList();
                    } else {
                        _root.playerFile = (temp_url + "?") + _root.checkLinkURL(load_mp3Path.jmurl);
                        _root.saveLoadMp3ID.push(_root.playerMusic_ID);
                        _root.saveLoadMp3Data.push(load_mp3Path.jmurl);
                        _root.soDJpath(_root.playerMusic_ID, _root.playerFile, _root.playServerURL_I, _root.playZL);
                        starPlayDJ();
                        _root.dj320_jian_JF = true;
                    }
                }
            };
            var _local2 = new LoadVars();
            _local2.m = temp_url;
            _local2.jiami = _root.jiami;
            _local2.sendAndLoad(_root.DJ_Path + "load_soft_djmp3.asp", load_mp3Path, "POST");
            trace("\u672C\u5730\u4FDD\u5B58\u5DF2\u8FC7\u671F\u91CD\u65B0\u8F7D\u5165DJ\u8DEF\u5F84");
        } else {
            var _local3 = _root.ifLoadDJpath(_root.playerMusic_ID, _root.playServerURL_I, _root.playZL);
            if (_local3 == 0) {
                var load_mp3Path = new LoadVars();
                load_mp3Path.onLoad = function (success) {
                    if (success) {
                        if ((load_mp3Path.jmurl == "no") || (load_mp3Path.jmurl == undefined)) {
                            _root.reloadCS();
                            myMusicList();
                        } else {
                            _root.playerFile = (temp_url + "?") + _root.checkLinkURL(load_mp3Path.jmurl);
                            _root.saveLoadMp3ID.push(_root.playerMusic_ID);
                            _root.saveLoadMp3Data.push(load_mp3Path.jmurl);
                            _root.soDJpath(_root.playerMusic_ID, _root.playerFile, _root.playServerURL_I, _root.playZL);
                            starPlayDJ();
                            _root.dj320_jian_JF = true;
                        }
                    }
                };
                var _local2 = new LoadVars();
                _local2.m = temp_url;
                _local2.jiami = _root.jiami;
                _local2.sendAndLoad(_root.DJ_Path + "load_soft_djmp3.asp", load_mp3Path, "POST");
            } else {
                _root.playerFile = _local3;
                starPlayDJ();
                _root.dj320_jian_JF = false;
                _root.R_play_mc.gotoAndStop("mp3");
            }
        }
    }
    function starPlayDJ() {
        if ((int(_root.playerMusic_ID) > 97160) && (int(_root.playerMusic_ID) <= 105558)) {
            _root.playerFile = _root.playServerURL2 + _root.playerFile;
        } else if ((int(_root.playerMusic_ID) > 105558) && (int(_root.playerMusic_ID) <= 113933)) {
            _root.playerFile = _root.playServerURL3 + _root.playerFile;
        } else if ((int(_root.playerMusic_ID) > 113933) && (int(_root.playerMusic_ID) <= 123781)) {
            _root.playerFile = _root.playServerURL4 + _root.playerFile;
        } else if ((int(_root.playerMusic_ID) > 123781) && (int(_root.playerMusic_ID) <= 129389)) {
            _root.playerFile = _root.playServerURL5 + _root.playerFile;
        } else if ((int(_root.playerMusic_ID) > 129389) && (int(_root.playerMusic_ID) <= 138471)) {
            _root.playerFile = _root.playServerURL6 + _root.playerFile;
        } else if ((int(_root.playerMusic_ID) > 138471) && (int(_root.playerMusic_ID) <= 144784)) {
            _root.playerFile = _root.playServerURL7 + _root.playerFile;
        } else if ((int(_root.playerMusic_ID) > 144784) && (int(_root.playerMusic_ID) <= 151966)) {
            _root.playerFile = _root.playServerURL8 + _root.playerFile;
        } else if ((int(_root.playerMusic_ID) > 151966) && (int(_root.playerMusic_ID) <= 160431)) {
            _root.playerFile = _root.playServerURL9 + _root.playerFile;
        } else if ((int(_root.playerMusic_ID) > 160431) && (int(_root.playerMusic_ID) <= 167639)) {
            _root.playerFile = _root.playServerURL10 + _root.playerFile;
        } else if ((int(_root.playerMusic_ID) > 167639) && (int(_root.playerMusic_ID) <= 182926)) {
            _root.playerFile = _root.playServerURL11 + _root.playerFile;
        } else if ((int(_root.playerMusic_ID) > 182926) && (int(_root.playerMusic_ID) <= 198890)) {
            _root.playerFile = _root.playServerURL12 + _root.playerFile;
        } else if ((int(_root.playerMusic_ID) > 198890) && (int(_root.playerMusic_ID) <= 213214)) {
            _root.playerFile = _root.playServerURL13 + _root.playerFile;
        } else if ((int(_root.playerMusic_ID) > 213214) && (int(_root.playerMusic_ID) <= 227251)) {
            _root.playerFile = _root.playServerURL14 + _root.playerFile;
        } else if ((int(_root.playerMusic_ID) > 227251) && (int(_root.playerMusic_ID) <= 240890)) {
            _root.playerFile = _root.playServerURL15 + _root.playerFile;
        } else if ((int(_root.playerMusic_ID) > 240890) && (int(_root.playerMusic_ID) <= 268960)) {
            _root.playerFile = _root.playServerURL16 + _root.playerFile;
        } else if (int(_root.playerMusic_ID) > 268960) {
            _root.playerFile = _root.playServerURL17 + _root.playerFile;
        } else {
            _root.playerFile = _root.playServerURL1 + _root.playerFile;
        }
        PlayIndex = MList.selectedIndex;
        _root.saveMList_index = PlayIndex;
        saveMListIndex(PlayIndex);
        _root.R_play_mc.gotoAndPlay("LoadMp3");
    }
    function jmfilename(txt) {
        var _local1 = new String(txt);
        var _local3 = _local1.length;
        Lname = _local1.substring(0, 16);
        var _local2 = _local1.indexOf("/");
        if (_local2 != -1) {
            Rname = _local1.substr(_local2 + 1);
        }
        Lname = Lname.split("(").join("0");
        Lname = Lname.split("\uFF1B").join("1");
        Lname = Lname.split("\uFF0C").join("2");
        Lname = Lname.split("\u3002").join("3");
        Lname = Lname.split("$").join("4");
        Lname = Lname.split("#").join("5");
        Lname = Lname.split("@").join("6");
        Lname = Lname.split("=").join("7");
        Lname = Lname.split(")").join("8");
        Lname = Lname.split("!").join("9");
        Lname = Lname.split("^").join("-");
        Lname = Lname.split("y").join("a");
        Lname = Lname.split("m").join("b");
        Lname = Lname.split("q").join("c");
        Lname = Lname.split("x").join("d");
        Lname = Lname.split("w").join("e");
        Lname = Lname.split("z").join("f");
        Lname = Lname.split("n").join("g");
        Lname = Lname.split("s").join("h");
        Lname = Lname.split("r").join("i");
        Lname = Lname.split("o").join("j");
        Lname = Lname.split("t").join("k");
        Lname = Lname.split("v").join("l");
        return(Lname + Rname);
    }
    function clearLStingGe() {
        MList.removeAll();
        _root.LStingGeArray = "";
        _root.TingGeSave();
    }
    function downListAllDJ() {
        if (_root.checkHY() == 1) {
            downALL_mc._visible = 1;
        }
    }
    MList.vScrollPolicy = "auto";
    var downAllDJ_id = "";
    var page = 1;
    var sumPage = 1;
    MList.change = function (evt) {
        myMusicList();
    };
    MList.addEventListener("change", MList);
    R_menu.setMask(mask);
    barY1 = 0;
    barY2 = 198;
    barX = 488;
    speed = 1;
    prop = (R_menu._height - mask._height) / (barY2 - barY1);
    R_menuY = R_menu._y;
    move_bar.onPress = function () {
        move_bar.startDrag(0, barX, barY1, barX, barY2);
        down = 1;
    };
    move_bar.onMouseUp = function () {
        move_bar.stopDrag();
        down = 0;
    };
    this.onEnterFrame = function () {
        if (down) {
            R_menuMove = (move_bar._y - barY1) * prop;
            R_menu.m_y = R_menuY - R_menuMove;
        }
        R_menu._y = R_menu._y + ((R_menu.m_y - R_menu._y) / speed);
    };
    var playList_menu = new ContextMenu();
    playList_menu.hideBuiltInItems();
    playList_menu.customItems.push(new ContextMenuItem("\u6E05\u7A7A\u64AD\u653E\u5217\u8868", clearLStingGe));
    MList.menu = playList_menu;

﻿
//----------------------------------------------------------------------
//Symbol 155 Button
//----------------------------------------------------------------------
on (release) {
    play();
}
﻿
//----------------------------------------------------------------------
//Symbol 194 Button
//----------------------------------------------------------------------
on (release) {
    _root.playHQ_mc._visible = 1;
}
﻿
//----------------------------------------------------------------------
//Symbol 245 Button
//----------------------------------------------------------------------
on (release) {
    getURL (((_root.webApp + "fenXiang.asp?id=") + _root.playerMusic_ID) + "&FXtype=duoBan", "_blank");
    _root.openURL(((_root.webApp + "fenXiang.asp?id=") + _root.playerMusic_ID) + "&FXtype=duoBan");
}
﻿
//----------------------------------------------------------------------
//Symbol 27 MovieClip [BrdrShdw] Frame 1
//----------------------------------------------------------------------
    mx.skins.ColoredSkinElement.setColorStyle(this, "shadowColor");

﻿
//----------------------------------------------------------------------
//Instance of Symbol 37 MovieClip [SimpleButton] in Symbol 101 MovieClip [VScrollBar] Frame 2
//----------------------------------------------------------------------
//component parameters
onClipEvent (initialize) {
    selected = false;
    toggle = false;
    enabled = true;
    visible = true;
    minHeight = 0;
    minWidth = 0;
}
﻿
//----------------------------------------------------------------------
//Instance of Symbol 273 MovieClip in Symbol 295 MovieClip Frame 4
//----------------------------------------------------------------------
on (rollOver) {
    _parent.jing_mc.gotoAndPlay("\u5F00\u59CB");
    _parent.jing_mc.intotext = "\u5A31\u4E50\u676FDJ\u5927\u8D5B\u4F5C\u54C1";
}
on (release) {
    _root.R_list_mc.R_menu.reloadDJtype("DSall", "DJ\u5927\u8D5B\u4F5C\u54C1");
}
﻿
//----------------------------------------------------------------------
//Symbol 1 MovieClip [__Packages.mx.core.UIObject] Frame 0
//----------------------------------------------------------------------
    class mx.core.UIObject extends MovieClip
    {
        var _width, _height, _x, _y, _parent, _minHeight, _minWidth, _visible, dispatchEvent, _xscale, _yscale, methodTable, onEnterFrame, tfList, __width, __height, moveTo, lineTo, createTextField, attachMovie, buildDepthTable, findNextAvailableDepth, idNames, childrenCreated, _name, createAccessibilityImplementation, _endInit, validateNow, hasOwnProperty, initProperties, stylecache, className, ignoreClassStyleDeclaration, _tf, fontFamily, fontSize, color, marginLeft, marginRight, fontStyle, fontWeight, textAlign, textIndent, textDecoration, embedFonts, styleName, enabled;
        function UIObject () {
            super();
            constructObject();
        }
        function get width() {
            return(_width);
        }
        function get height() {
            return(_height);
        }
        function get left() {
            return(_x);
        }
        function get x() {
            return(_x);
        }
        function get top() {
            return(_y);
        }
        function get y() {
            return(_y);
        }
        function get right() {
            return(_parent.width - (_x + width));
        }
        function get bottom() {
            return(_parent.height - (_y + height));
        }
        function getMinHeight(Void) {
            return(_minHeight);
        }
        function setMinHeight(h) {
            _minHeight = h;
        }
        function get minHeight() {
            return(getMinHeight());
        }
        function set minHeight(h) {
            setMinHeight(h);
            //return(minHeight);
        }
        function getMinWidth(Void) {
            return(_minWidth);
        }
        function setMinWidth(w) {
            _minWidth = w;
        }
        function get minWidth() {
            return(getMinWidth());
        }
        function set minWidth(w) {
            setMinWidth(w);
            //return(minWidth);
        }
        function setVisible(x, noEvent) {
            if (x != _visible) {
                _visible = x;
                if (noEvent != true) {
                    dispatchEvent({type:(x ? "reveal" : "hide")});
                }
            }
        }
        function get visible() {
            return(_visible);
        }
        function set visible(x) {
            setVisible(x, false);
            //return(visible);
        }
        function get scaleX() {
            return(_xscale);
        }
        function set scaleX(x) {
            _xscale = x;
            //return(scaleX);
        }
        function get scaleY() {
            return(_yscale);
        }
        function set scaleY(y) {
            _yscale = y;
            //return(scaleY);
        }
        function doLater(obj, fn) {
            if (methodTable == undefined) {
                methodTable = new Array();
            }
            methodTable.push({obj:obj, fn:fn});
            onEnterFrame = doLaterDispatcher;
        }
        function doLaterDispatcher(Void) {
            delete onEnterFrame;
            if (invalidateFlag) {
                redraw();
            }
            var _local3 = methodTable;
            methodTable = new Array();
            if (_local3.length > 0) {
                var _local2;
                while (_local2 = _local3.shift() , _local2 != undefined) {
                    _local2.obj[_local2.fn]();
                }
            }
        }
        function cancelAllDoLaters(Void) {
            delete onEnterFrame;
            methodTable = new Array();
        }
        function invalidate(Void) {
            invalidateFlag = true;
            onEnterFrame = doLaterDispatcher;
        }
        function invalidateStyle(Void) {
            invalidate();
        }
        function redraw(bAlways) {
            if (invalidateFlag || (bAlways)) {
                invalidateFlag = false;
                var _local2;
                for (_local2 in tfList) {
                    tfList[_local2].draw();
                }
                draw();
                dispatchEvent({type:"draw"});
            }
        }
        function draw(Void) {
        }
        function move(x, y, noEvent) {
            var _local3 = _x;
            var _local2 = _y;
            _x = x;
            _y = y;
            if (noEvent != true) {
                dispatchEvent({type:"move", oldX:_local3, oldY:_local2});
            }
        }
        function setSize(w, h, noEvent) {
            var _local2 = __width;
            var _local3 = __height;
            __width = w;
            __height = h;
            size();
            if (noEvent != true) {
                dispatchEvent({type:"resize", oldWidth:_local2, oldHeight:_local3});
            }
        }
        function size(Void) {
            _width = __width;
            _height = __height;
        }
        function drawRect(x1, y1, x2, y2) {
            moveTo(x1, y1);
            lineTo(x2, y1);
            lineTo(x2, y2);
            lineTo(x1, y2);
            lineTo(x1, y1);
        }
        function createLabel(name, depth, text) {
            createTextField(name, depth, 0, 0, 0, 0);
            var _local2 = this[name];
            _local2._color = textColorList;
            _local2._visible = false;
            _local2.__text = text;
            if (tfList == undefined) {
                tfList = new Object();
            }
            tfList[name] = _local2;
            _local2.invalidateStyle();
            invalidate();
            _local2.styleName = this;
            return(_local2);
        }
        function createObject(linkageName, id, depth, initobj) {
            return(attachMovie(linkageName, id, depth, initobj));
        }
        function createClassObject(className, id, depth, initobj) {
            var _local3 = className.symbolName == undefined;
            if (_local3) {
                Object.registerClass(className.symbolOwner.symbolName, className);
            }
            var _local4 = createObject(className.symbolOwner.symbolName, id, depth, initobj);
            if (_local3) {
                Object.registerClass(className.symbolOwner.symbolName, className.symbolOwner);
            }
            return(_local4);
        }
        function createEmptyObject(id, depth) {
            return(createClassObject(mx.core.UIObject, id, depth));
        }
        function destroyObject(id) {
            var _local2 = this[id];
            if (_local2.getDepth() < 0) {
                var _local4 = buildDepthTable();
                var _local5 = findNextAvailableDepth(0, _local4, "up");
                var _local3 = _local5;
                _local2.swapDepths(_local3);
            }
            _local2.removeMovieClip();
            delete this[id];
        }
        function getSkinIDName(tag) {
            return(idNames[tag]);
        }
        function setSkin(tag, linkageName, initObj) {
            if (_global.skinRegistry[linkageName] == undefined) {
                mx.skins.SkinElement.registerElement(linkageName, mx.skins.SkinElement);
            }
            return(createObject(linkageName, getSkinIDName(tag), tag, initObj));
        }
        function createSkin(tag) {
            var _local2 = getSkinIDName(tag);
            createEmptyObject(_local2, tag);
            return(this[_local2]);
        }
        function createChildren(Void) {
        }
        function _createChildren(Void) {
            createChildren();
            childrenCreated = true;
        }
        function constructObject(Void) {
            if (_name == undefined) {
                return(undefined);
            }
            init();
            _createChildren();
            createAccessibilityImplementation();
            _endInit();
            if (validateNow) {
                redraw(true);
            } else {
                invalidate();
            }
        }
        function initFromClipParameters(Void) {
            var _local4 = false;
            var _local2;
            for (_local2 in clipParameters) {
                if (hasOwnProperty(_local2)) {
                    _local4 = true;
                    this["def_" + _local2] = this[_local2];
                    delete this[_local2];
                }
            }
            if (_local4) {
                for (_local2 in clipParameters) {
                    var _local3 = this["def_" + _local2];
                    if (_local3 != undefined) {
                        this[_local2] = _local3;
                    }
                }
            }
        }
        function init(Void) {
            __width = _width;
            __height = _height;
            if (initProperties == undefined) {
                initFromClipParameters();
            } else {
                initProperties();
            }
            if (_global.cascadingStyles == true) {
                stylecache = new Object();
            }
        }
        function getClassStyleDeclaration(Void) {
            var _local4 = this;
            var _local3 = className;
            while (_local3 != undefined) {
                if (ignoreClassStyleDeclaration[_local3] == undefined) {
                    if (_global.styles[_local3] != undefined) {
                        return(_global.styles[_local3]);
                    }
                }
                _local4 = _local4.__proto__;
                _local3 = _local4.className;
            }
        }
        function setColor(color) {
        }
        function __getTextFormat(tf, bAll) {
            var _local8 = stylecache.tf;
            if (_local8 != undefined) {
                var _local3;
                for (_local3 in mx.styles.StyleManager.TextFormatStyleProps) {
                    if (bAll || (mx.styles.StyleManager.TextFormatStyleProps[_local3])) {
                        if (tf[_local3] == undefined) {
                            tf[_local3] = _local8[_local3];
                        }
                    }
                }
                return(false);
            }
            var _local6 = false;
            for (var _local3 in mx.styles.StyleManager.TextFormatStyleProps) {
                if (bAll || (mx.styles.StyleManager.TextFormatStyleProps[_local3])) {
                    if (tf[_local3] == undefined) {
                        var _local5 = _tf[_local3];
                        if (_local5 != undefined) {
                            tf[_local3] = _local5;
                        } else if ((_local3 == "font") && (fontFamily != undefined)) {
                            tf[_local3] = fontFamily;
                        } else if ((_local3 == "size") && (fontSize != undefined)) {
                            tf[_local3] = fontSize;
                        } else if ((_local3 == "color") && (color != undefined)) {
                            tf[_local3] = color;
                        } else if ((_local3 == "leftMargin") && (marginLeft != undefined)) {
                            tf[_local3] = marginLeft;
                        } else if ((_local3 == "rightMargin") && (marginRight != undefined)) {
                            tf[_local3] = marginRight;
                        } else if ((_local3 == "italic") && (fontStyle != undefined)) {
                            tf[_local3] = fontStyle == _local3;
                        } else if ((_local3 == "bold") && (fontWeight != undefined)) {
                            tf[_local3] = fontWeight == _local3;
                        } else if ((_local3 == "align") && (textAlign != undefined)) {
                            tf[_local3] = textAlign;
                        } else if ((_local3 == "indent") && (textIndent != undefined)) {
                            tf[_local3] = textIndent;
                        } else if ((_local3 == "underline") && (textDecoration != undefined)) {
                            tf[_local3] = textDecoration == _local3;
                        } else if ((_local3 == "embedFonts") && (embedFonts != undefined)) {
                            tf[_local3] = embedFonts;
                        } else {
                            _local6 = true;
                        }
                    }
                }
            }
            if (_local6) {
                var _local9 = styleName;
                if (_local9 != undefined) {
                    if (typeof(_local9) != "string") {
                        _local6 = _local9.__getTextFormat(tf, true, this);
                    } else if (_global.styles[_local9] != undefined) {
                        _local6 = _global.styles[_local9].__getTextFormat(tf, true, this);
                    }
                }
            }
            if (_local6) {
                var _local10 = getClassStyleDeclaration();
                if (_local10 != undefined) {
                    _local6 = _local10.__getTextFormat(tf, true, this);
                }
            }
            if (_local6) {
                if (_global.cascadingStyles) {
                    if (_parent != undefined) {
                        _local6 = _parent.__getTextFormat(tf, false);
                    }
                }
            }
            if (_local6) {
                _local6 = _global.style.__getTextFormat(tf, true, this);
            }
            return(_local6);
        }
        function _getTextFormat(Void) {
            var _local2 = stylecache.tf;
            if (_local2 != undefined) {
                return(_local2);
            }
            _local2 = new TextFormat();
            __getTextFormat(_local2, true);
            stylecache.tf = _local2;
            if (enabled == false) {
                var _local3 = getStyle("disabledColor");
                _local2.color = _local3;
            }
            return(_local2);
        }
        function getStyleName(Void) {
            var _local2 = styleName;
            if (_local2 != undefined) {
                if (typeof(_local2) != "string") {
                    return(_local2.getStyleName());
                }
                return(_local2);
            }
            if (_parent != undefined) {
                return(_parent.getStyleName());
            }
            return(undefined);
        }
        function getStyle(styleProp) {
            var _local3;
            _global.getStyleCounter++;
            if (this[styleProp] != undefined) {
                return(this[styleProp]);
            }
            var _local6 = styleName;
            if (_local6 != undefined) {
                if (typeof(_local6) != "string") {
                    _local3 = _local6.getStyle(styleProp);
                } else {
                    var _local7 = _global.styles[_local6];
                    _local3 = _local7.getStyle(styleProp);
                }
            }
            if (_local3 != undefined) {
                return(_local3);
            }
            var _local7 = getClassStyleDeclaration();
            if (_local7 != undefined) {
                _local3 = _local7[styleProp];
            }
            if (_local3 != undefined) {
                return(_local3);
            }
            if (_global.cascadingStyles) {
                if (mx.styles.StyleManager.isInheritingStyle(styleProp) || (mx.styles.StyleManager.isColorStyle(styleProp))) {
                    var _local5 = stylecache;
                    if (_local5 != undefined) {
                        if (_local5[styleProp] != undefined) {
                            return(_local5[styleProp]);
                        }
                    }
                    if (_parent != undefined) {
                        _local3 = _parent.getStyle(styleProp);
                    } else {
                        _local3 = _global.style[styleProp];
                    }
                    if (_local5 != undefined) {
                        _local5[styleProp] = _local3;
                    }
                    return(_local3);
                }
            }
            if (_local3 == undefined) {
                _local3 = _global.style[styleProp];
            }
            return(_local3);
        }
        static function mergeClipParameters(o, p) {
            for (var _local3 in p) {
                o[_local3] = p[_local3];
            }
            return(true);
        }
        static var symbolName = "UIObject";
        static var symbolOwner = mx.core.UIObject;
        static var version = "2.0.2.126";
        static var textColorList = {color:1, disabledColor:1};
        var invalidateFlag = false;
        var lineWidth = 1;
        var lineColor = 0;
        var tabEnabled = false;
        var clipParameters = {visible:1, minHeight:1, minWidth:1, maxHeight:1, maxWidth:1, preferredHeight:1, preferredWidth:1};
    }
﻿
//----------------------------------------------------------------------
//Symbol 4 MovieClip [__Packages.mx.core.ScrollView] Frame 0
//----------------------------------------------------------------------
    class mx.core.ScrollView extends mx.core.View
    {
        var __width, hScroller, vScroller, __maxHPosition, propsInited, scrollAreaChanged, specialHScrollCase, createObject, viewableColumns, __height, oldRndUp, viewableRows, __viewMetrics, owner, enabled, border_mc, __get__width, __get__height, invLayout, mask_mc, _parent, dispatchEvent;
        function ScrollView () {
            super();
        }
        function getHScrollPolicy(Void) {
            return(__hScrollPolicy);
        }
        function setHScrollPolicy(policy) {
            __hScrollPolicy = policy.toLowerCase();
            if (__width == undefined) {
                return(undefined);
            }
            setScrollProperties(numberOfCols, columnWidth, rowC, rowH, heightPadding, widthPadding);
        }
        function get hScrollPolicy() {
            return(getHScrollPolicy());
        }
        function set hScrollPolicy(policy) {
            setHScrollPolicy(policy);
            //return(hScrollPolicy);
        }
        function getVScrollPolicy(Void) {
            return(__vScrollPolicy);
        }
        function setVScrollPolicy(policy) {
            __vScrollPolicy = policy.toLowerCase();
            if (__width == undefined) {
                return(undefined);
            }
            setScrollProperties(numberOfCols, columnWidth, rowC, rowH, heightPadding, widthPadding);
        }
        function get vScrollPolicy() {
            return(getVScrollPolicy());
        }
        function set vScrollPolicy(policy) {
            setVScrollPolicy(policy);
            //return(vScrollPolicy);
        }
        function get hPosition() {
            return(getHPosition());
        }
        function set hPosition(pos) {
            setHPosition(pos);
            //return(hPosition);
        }
        function getHPosition(Void) {
            return(__hPosition);
        }
        function setHPosition(pos) {
            hScroller.__set__scrollPosition(pos);
            __hPosition = pos;
        }
        function get vPosition() {
            return(getVPosition());
        }
        function set vPosition(pos) {
            setVPosition(pos);
            //return(vPosition);
        }
        function getVPosition(Void) {
            return(__vPosition);
        }
        function setVPosition(pos) {
            vScroller.__set__scrollPosition(pos);
            __vPosition = pos;
        }
        function get maxVPosition() {
            var _local2 = vScroller.maxPos;
            return(((_local2 == undefined) ? 0 : (_local2)));
        }
        function get maxHPosition() {
            return(getMaxHPosition());
        }
        function set maxHPosition(pos) {
            setMaxHPosition(pos);
            //return(maxHPosition);
        }
        function getMaxHPosition(Void) {
            if (__maxHPosition != undefined) {
                return(__maxHPosition);
            }
            var _local2 = hScroller.maxPos;
            return(((_local2 == undefined) ? 0 : (_local2)));
        }
        function setMaxHPosition(pos) {
            __maxHPosition = pos;
        }
        function setScrollProperties(colCount, colWidth, rwCount, rwHeight, hPadding, wPadding) {
            var _local3 = getViewMetrics();
            if (hPadding == undefined) {
                hPadding = 0;
            }
            if (wPadding == undefined) {
                wPadding = 0;
            }
            propsInited = true;
            delete scrollAreaChanged;
            heightPadding = hPadding;
            widthPadding = wPadding;
            if (colWidth == 0) {
                colWidth = 1;
            }
            if (rwHeight == 0) {
                rwHeight = 1;
            }
            var _local5 = Math.ceil((((__width - _local3.left) - _local3.right) - widthPadding) / colWidth);
            if ((__hScrollPolicy == "on") || ((_local5 < colCount) && (__hScrollPolicy == "auto"))) {
                if ((hScroller == undefined) || (specialHScrollCase)) {
                    delete specialHScrollCase;
                    hScroller = createObject("HScrollBar", "hSB", 1001);
                    hScroller.__set__lineScrollSize(20);
                    hScroller.scrollHandler = scrollProxy;
                    hScroller.__set__scrollPosition(__hPosition);
                    scrollAreaChanged = true;
                }
                if ((((numberOfCols != colCount) || (columnWidth != colWidth)) || (viewableColumns != _local5)) || (scrollAreaChanged)) {
                    hScroller.setScrollProperties(_local5, 0, colCount - _local5);
                    viewableColumns = _local5;
                    numberOfCols = colCount;
                    columnWidth = colWidth;
                }
            } else if (((__hScrollPolicy == "auto") || (__hScrollPolicy == "off")) && (hScroller != undefined)) {
                hScroller.removeMovieClip();
                delete hScroller;
                scrollAreaChanged = true;
            }
            if (heightPadding == undefined) {
                heightPadding = 0;
            }
            var _local4 = Math.ceil((((__height - _local3.top) - _local3.bottom) - heightPadding) / rwHeight);
            var _local8 = (((__height - _local3.top) - _local3.bottom) % rwHeight) != 0;
            if ((__vScrollPolicy == "on") || ((_local4 < (rwCount + _local8)) && (__vScrollPolicy == "auto"))) {
                if (vScroller == undefined) {
                    vScroller = createObject("VScrollBar", "vSB", 1002);
                    vScroller.scrollHandler = scrollProxy;
                    vScroller.__set__scrollPosition(__vPosition);
                    scrollAreaChanged = true;
                    rowH = 0;
                }
                if ((((rowC != rwCount) || (rowH != rwHeight)) || ((viewableRows + _local8) != (_local4 + oldRndUp))) || (scrollAreaChanged)) {
                    vScroller.setScrollProperties(_local4, 0, (rwCount - _local4) + _local8);
                    viewableRows = _local4;
                    rowC = rwCount;
                    rowH = rwHeight;
                    oldRndUp = _local8;
                }
            } else if (((__vScrollPolicy == "auto") || (__vScrollPolicy == "off")) && (vScroller != undefined)) {
                vScroller.removeMovieClip();
                delete vScroller;
                scrollAreaChanged = true;
            }
            numberOfCols = colCount;
            columnWidth = colWidth;
            if (scrollAreaChanged) {
                doLayout();
                var _local2 = __viewMetrics;
                var _local12 = ((owner != undefined) ? (owner) : this);
                _local12.layoutContent(_local2.left, _local2.top, ((columnWidth * numberOfCols) - _local2.left) - _local2.right, rowC * rowH, (__width - _local2.left) - _local2.right, (__height - _local2.top) - _local2.bottom);
            }
            if (!enabled) {
                setEnabled(false);
            }
        }
        function getViewMetrics(Void) {
            var _local2 = __viewMetrics;
            var _local3 = border_mc.__get__borderMetrics();
            _local2.left = _local3.left;
            _local2.right = _local3.right;
            if (vScroller != undefined) {
                _local2.right = _local2.right + vScroller.minWidth;
            }
            _local2.top = _local3.top;
            if ((hScroller == undefined) && ((__hScrollPolicy == "on") || (__hScrollPolicy == true))) {
                hScroller = createObject("FHScrollBar", "hSB", 1001);
                specialHScrollCase = true;
            }
            _local2.bottom = _local3.bottom;
            if (hScroller != undefined) {
                _local2.bottom = _local2.bottom + hScroller.minHeight;
            }
            return(_local2);
        }
        function doLayout(Void) {
            var _local10 = __get__width();
            var _local8 = __get__height();
            delete invLayout;
            var _local3 = (__viewMetrics = getViewMetrics());
            var _local2 = _local3.left;
            var _local9 = _local3.right;
            var _local5 = _local3.top;
            var _local11 = _local3.bottom;
            var _local7 = hScroller;
            var _local6 = vScroller;
            _local7.setSize((_local10 - _local2) - _local9, _local7.minHeight + 0);
            _local7.move(_local2, _local8 - _local11);
            _local6.setSize(_local6.minWidth + 0, (_local8 - _local5) - _local11);
            _local6.move(_local10 - _local9, _local5);
            var _local4 = mask_mc;
            _local4._width = (_local10 - _local2) - _local9;
            _local4._height = (_local8 - _local5) - _local11;
            _local4._x = _local2;
            _local4._y = _local5;
        }
        function createChild(id, name, props) {
            var _local2 = super.createChild(id, name, props);
            return(_local2);
        }
        function init(Void) {
            super.init();
            __viewMetrics = new Object();
            if (_global.__SVMouseWheelManager == undefined) {
                var _local4 = (_global.__SVMouseWheelManager = new Object());
                _local4.onMouseWheel = __onMouseWheel;
                Mouse.addListener(_local4);
            }
        }
        function __onMouseWheel(delta, scrollTarget) {
            var _local4 = scrollTarget;
            var _local1;
            while (_local4 != undefined) {
                if (_local4 instanceof mx.core.ScrollView) {
                    _local1 = _local4;
                }
                _local4 = _local4._parent;
            }
            if (_local1 != undefined) {
                _local4 = ((delta <= 0) ? 1 : -1);
                var _local2 = _local1.vScroller.lineScrollSize;
                if (_local2 == undefined) {
                    _local2 = 0;
                }
                _local2 = Math.max(Math.abs(delta), _local2);
                var _local3 = _local1.vPosition + (_local2 * _local4);
                _local1.vPosition = Math.max(0, Math.min(_local3, _local1.maxVPosition));
                _local1.dispatchEvent({type:"scroll", direction:"vertical", position:_local1.vPosition});
            }
        }
        function createChildren(Void) {
            super.createChildren();
            if (mask_mc == undefined) {
                mask_mc = createObject("BoundingBox", "mask_mc", MASK_DEPTH);
            }
            mask_mc._visible = false;
        }
        function invalidate(Void) {
            super.invalidate();
        }
        function draw(Void) {
            size();
        }
        function size(Void) {
            super.size();
        }
        function scrollProxy(docObj) {
            _parent.onScroll(docObj);
        }
        function onScroll(docObj) {
            var _local3 = docObj.target;
            var _local2 = _local3.scrollPosition;
            if (_local3 == vScroller) {
                var _local4 = "vertical";
                var _local5 = "__vPosition";
            } else {
                var _local4 = "horizontal";
                var _local5 = "__hPosition";
            }
            this[_local5] = _local2;
            dispatchEvent({type:"scroll", direction:_local4, position:_local2});
        }
        function setEnabled(v) {
            vScroller.enabled = (hScroller.enabled = v);
        }
        function childLoaded(obj) {
            super.childLoaded(obj);
            obj.setMask(mask_mc);
        }
        static var symbolName = "ScrollView";
        static var symbolOwner = mx.core.ScrollView;
        static var version = "2.0.2.126";
        var className = "ScrollView";
        var __vScrollPolicy = "auto";
        var __hScrollPolicy = "off";
        var __vPosition = 0;
        var __hPosition = 0;
        var numberOfCols = 0;
        var rowC = 0;
        var columnWidth = 1;
        var rowH = 0;
        var heightPadding = 0;
        var widthPadding = 0;
        var MASK_DEPTH = 10000;
    }
﻿
//----------------------------------------------------------------------
//Instance of Symbol 276 MovieClip in Symbol 295 MovieClip Frame 5
//----------------------------------------------------------------------
on (rollOver) {
    _parent.jing_mc.gotoAndPlay("\u5F00\u59CB");
    _parent.jing_mc.intotext = "\u53C2\u8D5B\u524D20\u5F3ADJ\u4F5C\u54C1\u3002";
}
on (release) {
    _root.R_list_mc.R_menu.reloadDJtype("DSall", "DJ\u5927\u8D5B\u4F5C\u54C1");
}
﻿
//----------------------------------------------------------------------
//Symbol 168 Button
//----------------------------------------------------------------------
on (release) {
    _parent.tempSoundVol = true;
    play();
}
﻿
//----------------------------------------------------------------------
//Symbol 169 MovieClip Frame 1
//----------------------------------------------------------------------
    stop();

﻿
//----------------------------------------------------------------------
//Instance of Symbol 288 MovieClip in Symbol 295 MovieClip Frame 9
//----------------------------------------------------------------------
on (rollOver) {
    _parent.jing_mc.gotoAndPlay("\u5F00\u59CB");
    _parent.jing_mc.intotext = "\u53C2\u8D5B\u4F5C\u54C1\u7B2C1\u540D";
}
on (release) {
    _root.R_list_mc.R_menu.reloadDJtype("DSall", "DJ\u5927\u8D5B\u4F5C\u54C1");
}
﻿
//----------------------------------------------------------------------
//Instance of Symbol 285 MovieClip in Symbol 295 MovieClip Frame 8
//----------------------------------------------------------------------
on (rollOver) {
    _parent.jing_mc.gotoAndPlay("\u5F00\u59CB");
    _parent.jing_mc.intotext = "\u53C2\u8D5B\u4F5C\u54C1\u7B2C2\u540D";
}
on (release) {
    _root.R_list_mc.R_menu.reloadDJtype("DSall", "DJ\u5927\u8D5B\u4F5C\u54C1");
}
﻿
//----------------------------------------------------------------------
//Symbol 56 MovieClip [ScrollThemeColor2] Frame 1
//----------------------------------------------------------------------
    mx.skins.ColoredSkinElement.setColorStyle(this, "themeColor");

﻿
//----------------------------------------------------------------------
//Symbol 295 MovieClip Frame 4
//----------------------------------------------------------------------
    stop();

﻿
//----------------------------------------------------------------------
//Instance of Symbol 279 MovieClip in Symbol 295 MovieClip Frame 6
//----------------------------------------------------------------------
on (rollOver) {
    _parent.jing_mc.gotoAndPlay("\u5F00\u59CB");
    _parent.jing_mc.intotext = "\u201C\u5A31\u4E50\u676F\u201D\u53C2\u4E0E\u5956";
}
on (release) {
    _root.R_list_mc.R_menu.reloadDJtype("DSall", "DJ\u5927\u8D5B\u4F5C\u54C1");
}
﻿
//----------------------------------------------------------------------
//Symbol 206 Button
//----------------------------------------------------------------------
on (release) {
    if ((_root.playerMusic_ID == "") || (_root.playerMusic_ID == undefined)) {
    } else {
        getURL ((_root.userPath + "downloadDJ_web.asp?music_ID=") + _root.playerMusic_ID, "_blank");
    }
}
﻿
//----------------------------------------------------------------------
//Symbol 224 Button
//----------------------------------------------------------------------
on (release) {
    this.gotoAndStop("\u505C\u6B62");
}
﻿
//----------------------------------------------------------------------
//Instance of Symbol 267 MovieClip in Symbol 295 MovieClip Frame 2
//----------------------------------------------------------------------
on (release) {
    _root.R_list_mc.R_menu.reloadDJtype("TJ", "\u6700\u65B0\u63A8\u8350DJ");
}
﻿
//----------------------------------------------------------------------
//Symbol 295 MovieClip Frame 8
//----------------------------------------------------------------------
    stop();

﻿
//----------------------------------------------------------------------
//Symbol 295 MovieClip Frame 7
//----------------------------------------------------------------------
    stop();

﻿
//----------------------------------------------------------------------
//Symbol 102 MovieClip [View] Frame 1
//----------------------------------------------------------------------
    #initclip 61
    Object.registerClass("View", mx.core.View);
    #endinitclip

    stop();

﻿
//----------------------------------------------------------------------
//Symbol 21 MovieClip [FocusRect] Frame 1
//----------------------------------------------------------------------
    #initclip 46
    Object.registerClass("FocusRect", mx.skins.halo.FocusRect);
    #endinitclip

﻿
//----------------------------------------------------------------------
//Instance of Symbol 282 MovieClip in Symbol 295 MovieClip Frame 7
//----------------------------------------------------------------------
on (rollOver) {
    _parent.jing_mc.gotoAndPlay("\u5F00\u59CB");
    _parent.jing_mc.intotext = "\u53C2\u8D5B\u4F5C\u54C1\u7B2C3\u540D";
}
on (release) {
    _root.R_list_mc.R_menu.reloadDJtype("DSall", "DJ\u5927\u8D5B\u4F5C\u54C1");
}
﻿
//----------------------------------------------------------------------
//Symbol 263 MovieClip Frame 124
//----------------------------------------------------------------------
    if ((((_parent.DJfileSize == "") || (_parent.DJfileSize == "NaN")) || (_parent.DJfileSize == "0")) || (_parent.DJfileSize == undefined)) {
        _root.DJpathReload = true;
        _root.R_list_mc.newDJurl(_root.DJpath);
    } else {
        _root.DJpathReload = false;
    }
    stop();

﻿
//----------------------------------------------------------------------
//Symbol 233 Button
//----------------------------------------------------------------------
on (release) {
    getURL (((_root.webApp + "fenXiang.asp?id=") + _root.playerMusic_ID) + "&FXtype=qq", "_blank");
    _root.openURL(((_root.webApp + "fenXiang.asp?id=") + _root.playerMusic_ID) + "&FXtype=qq");
}
﻿
//----------------------------------------------------------------------
//Symbol 107 MovieClip [__Packages.mx.styles.CSSTextStyles] Frame 0
//----------------------------------------------------------------------
    class mx.styles.CSSTextStyles
    {
        function CSSTextStyles () {
        }
        static function addTextStyles(o, bColor) {
            o.addProperty("textAlign", function () {
                return(this._tf.align);
            }, function (x) {
                if (this._tf == undefined) {
                    this._tf = new TextFormat();
                }
                this._tf.align = x;
            });
            o.addProperty("fontWeight", function () {
                return(((this._tf.bold != undefined) ? ((this._tf.bold ? "bold" : "none")) : undefined));
            }, function (x) {
                if (this._tf == undefined) {
                    this._tf = new TextFormat();
                }
                this._tf.bold = x == "bold";
            });
            if (bColor) {
                o.addProperty("color", function () {
                    return(this._tf.color);
                }, function (x) {
                    if (this._tf == undefined) {
                        this._tf = new TextFormat();
                    }
                    this._tf.color = x;
                });
            }
            o.addProperty("fontFamily", function () {
                return(this._tf.font);
            }, function (x) {
                if (this._tf == undefined) {
                    this._tf = new TextFormat();
                }
                this._tf.font = x;
            });
            o.addProperty("textIndent", function () {
                return(this._tf.indent);
            }, function (x) {
                if (this._tf == undefined) {
                    this._tf = new TextFormat();
                }
                this._tf.indent = x;
            });
            o.addProperty("fontStyle", function () {
                return(((this._tf.italic != undefined) ? ((this._tf.italic ? "italic" : "none")) : undefined));
            }, function (x) {
                if (this._tf == undefined) {
                    this._tf = new TextFormat();
                }
                this._tf.italic = x == "italic";
            });
            o.addProperty("marginLeft", function () {
                return(this._tf.leftMargin);
            }, function (x) {
                if (this._tf == undefined) {
                    this._tf = new TextFormat();
                }
                this._tf.leftMargin = x;
            });
            o.addProperty("marginRight", function () {
                return(this._tf.rightMargin);
            }, function (x) {
                if (this._tf == undefined) {
                    this._tf = new TextFormat();
                }
                this._tf.rightMargin = x;
            });
            o.addProperty("fontSize", function () {
                return(this._tf.size);
            }, function (x) {
                if (this._tf == undefined) {
                    this._tf = new TextFormat();
                }
                this._tf.size = x;
            });
            o.addProperty("textDecoration", function () {
                return(((this._tf.underline != undefined) ? ((this._tf.underline ? "underline" : "none")) : undefined));
            }, function (x) {
                if (this._tf == undefined) {
                    this._tf = new TextFormat();
                }
                this._tf.underline = x == "underline";
            });
            o.addProperty("embedFonts", function () {
                return(this._tf.embedFonts);
            }, function (x) {
                if (this._tf == undefined) {
                    this._tf = new TextFormat();
                }
                this._tf.embedFonts = x;
            });
        }
    }
﻿
//----------------------------------------------------------------------
//Symbol 322 MovieClip Frame 2
//----------------------------------------------------------------------
    stop();
    load_MList(listTitle.text);
    thisPath_mc.text = _root.thisPath;
﻿
//----------------------------------------------------------------------
//Symbol 160 MovieClip Frame 3
//----------------------------------------------------------------------
    stop();
    _root.loopPlay = 3;
    _parent.savePlayCX(3);

﻿
//----------------------------------------------------------------------
//Symbol 37 MovieClip [SimpleButton] Frame 1
//----------------------------------------------------------------------
    #initclip 51
    Object.registerClass("SimpleButton", mx.controls.SimpleButton);
    #endinitclip

    stop();

﻿
//----------------------------------------------------------------------
//Symbol 6 MovieClip [__Packages.mx.events.EventDispatcher] Frame 0
//----------------------------------------------------------------------
    class mx.events.EventDispatcher
    {
        function EventDispatcher () {
        }
        static function _removeEventListener(queue, event, handler) {
            if (queue != undefined) {
                var _local4 = queue.length;
                var _local1;
                _local1 = 0;
                while (_local1 < _local4) {
                    var _local2 = queue[_local1];
                    if (_local2 == handler) {
                        queue.splice(_local1, 1);
                        return(undefined);
                    }
                    _local1++;
                }
            }
        }
        static function initialize(object) {
            if (_fEventDispatcher == undefined) {
                _fEventDispatcher = new mx.events.EventDispatcher();
            }
            object.addEventListener = _fEventDispatcher.addEventListener;
            object.removeEventListener = _fEventDispatcher.removeEventListener;
            object.dispatchEvent = _fEventDispatcher.dispatchEvent;
            object.dispatchQueue = _fEventDispatcher.dispatchQueue;
        }
        function dispatchQueue(queueObj, eventObj) {
            var _local7 = "__q_" + eventObj.type;
            var _local4 = queueObj[_local7];
            if (_local4 != undefined) {
                var _local5;
                for (_local5 in _local4) {
                    var _local1 = _local4[_local5];
                    var _local3 = typeof(_local1);
                    if ((_local3 == "object") || (_local3 == "movieclip")) {
                        if (_local1.handleEvent != undefined) {
                            _local1.handleEvent(eventObj);
                        }
                        if (_local1[eventObj.type] != undefined) {
                            if (exceptions[eventObj.type] == undefined) {
                                _local1[eventObj.type](eventObj);
                            }
                        }
                    } else {
                        _local1.apply(queueObj, [eventObj]);
                    }
                }
            }
        }
        function dispatchEvent(eventObj) {
            if (eventObj.target == undefined) {
                eventObj.target = this;
            }
            this[eventObj.type + "Handler"](eventObj);
            dispatchQueue(this, eventObj);
        }
        function addEventListener(event, handler) {
            var _local3 = "__q_" + event;
            if (this[_local3] == undefined) {
                this[_local3] = new Array();
            }
            _global.ASSetPropFlags(this, _local3, 1);
            _removeEventListener(this[_local3], event, handler);
            this[_local3].push(handler);
        }
        function removeEventListener(event, handler) {
            var _local2 = "__q_" + event;
            _removeEventListener(this[_local2], event, handler);
        }
        static var _fEventDispatcher = undefined;
        static var exceptions = {move:1, draw:1, load:1};
    }
﻿
//----------------------------------------------------------------------
//Symbol 295 MovieClip Frame 2
//----------------------------------------------------------------------
    stop();

﻿
//----------------------------------------------------------------------
//Frame 1
//----------------------------------------------------------------------
    System.security.allowDomain("*");
    System.useCodepage = true;
    _root.DataPath = "http://webapp.djyule.com/";
    _root.DataAsp = "http://webapp.djyule.com/dj2010/";
    _root.DJ_Path = "http://webapp.djyule.com/";
    _root.userPath = "http://user.djyule.com/";
    _root.wwwPath = "http://www.djyule.com/";
    _root.webApp = "http://webapp.djyule.com/dj2010/";
    var loadUserLogon = new LoadVars();
    loadUserLogon.onLoad = function (success) {
        if (success) {
            if (loadUserLogon.Link == 1) {
                trace("\u901A\u8FC7");
                _root.play();
            }
        }
    };
    var send_lv = new LoadVars();
    send_lv.HYname = t_HYname;
    send_lv.HYpwd = t_HYpwd;
    send_lv.ClientID = _root.pcID;
    send_lv.regServerURL = _root.regServer;
    send_lv.sendAndLoad(_root.DataAsp + "loadjm.asp", loadUserLogon, "POST");
    stop();
﻿
//----------------------------------------------------------------------
//Instance of Symbol 316 MovieClip "TD_time_mc" in Symbol 320 MovieClip Frame 5
//----------------------------------------------------------------------
onClipEvent (load) {
    this._visible = 0;
}
onClipEvent (enterFrame) {
    this._x = _parent.playJDT_red5._x;
    var ns_seconds = ((Math.floor(_parent.playJDT_red5._x - 104) / 370) * _parent.Ztime_red5);
    var minutes = Math.floor(ns_seconds / 60);
    if (minutes < 10) {
        minutes = "0" + minutes;
    }
    var seconds = Math.floor(ns_seconds % 60);
    if (seconds < 10) {
        seconds = "0" + seconds;
    }
    time_txt.text = (minutes + ":") + seconds;
}
﻿
//----------------------------------------------------------------------
//Symbol 113 MovieClip [__Packages.mx.events.UIEventDispatcher] Frame 0
//----------------------------------------------------------------------
    class mx.events.UIEventDispatcher extends mx.events.EventDispatcher
    {
        var dispatchQueue, owner, __sentLoadEvent, __origAddEventListener;
        function UIEventDispatcher () {
            super();
        }
        static function addKeyEvents(obj) {
            if (obj.keyHandler == undefined) {
                var _local1 = (obj.keyHandler = new Object());
                _local1.owner = obj;
                _local1.onKeyDown = _fEventDispatcher.onKeyDown;
                _local1.onKeyUp = _fEventDispatcher.onKeyUp;
            }
            Key.addListener(obj.keyHandler);
        }
        static function removeKeyEvents(obj) {
            Key.removeListener(obj.keyHandler);
        }
        static function addLoadEvents(obj) {
            if (obj.onLoad == undefined) {
                obj.onLoad = _fEventDispatcher.onLoad;
                obj.onUnload = _fEventDispatcher.onUnload;
                if (obj.getBytesTotal() == obj.getBytesLoaded()) {
                    obj.doLater(obj, "onLoad");
                }
            }
        }
        static function removeLoadEvents(obj) {
            delete obj.onLoad;
            delete obj.onUnload;
        }
        static function initialize(obj) {
            if (_fEventDispatcher == undefined) {
                _fEventDispatcher = new mx.events.UIEventDispatcher();
            }
            obj.addEventListener = _fEventDispatcher.__addEventListener;
            obj.__origAddEventListener = _fEventDispatcher.addEventListener;
            obj.removeEventListener = _fEventDispatcher.removeEventListener;
            obj.dispatchEvent = _fEventDispatcher.dispatchEvent;
            obj.dispatchQueue = _fEventDispatcher.dispatchQueue;
        }
        function dispatchEvent(eventObj) {
            if (eventObj.target == undefined) {
                eventObj.target = this;
            }
            this[eventObj.type + "Handler"](eventObj);
            dispatchQueue(mx.events.EventDispatcher, eventObj);
            dispatchQueue(this, eventObj);
        }
        function onKeyDown(Void) {
            owner.dispatchEvent({type:"keyDown", code:Key.getCode(), ascii:Key.getAscii(), shiftKey:Key.isDown(16), ctrlKey:Key.isDown(17)});
        }
        function onKeyUp(Void) {
            owner.dispatchEvent({type:"keyUp", code:Key.getCode(), ascii:Key.getAscii(), shiftKey:Key.isDown(16), ctrlKey:Key.isDown(17)});
        }
        function onLoad(Void) {
            if (__sentLoadEvent != true) {
                dispatchEvent({type:"load"});
            }
            __sentLoadEvent = true;
        }
        function onUnload(Void) {
            dispatchEvent({type:"unload"});
        }
        function __addEventListener(event, handler) {
            __origAddEventListener(event, handler);
            var _local3 = lowLevelEvents;
            for (var _local5 in _local3) {
                if (mx.events.UIEventDispatcher[_local5][event] != undefined) {
                    var _local2 = _local3[_local5][0];
                    mx.events.UIEventDispatcher[_local2](this);
                }
            }
        }
        function removeEventListener(event, handler) {
            var _local6 = "__q_" + event;
            mx.events.EventDispatcher._removeEventListener(this[_local6], event, handler);
            if (this[_local6].length == 0) {
                var _local2 = lowLevelEvents;
                for (var _local5 in _local2) {
                    if (mx.events.UIEventDispatcher[_local5][event] != undefined) {
                        var _local3 = _local2[_local5][1];
                        mx.events.UIEventDispatcher[_local2[_local5][1]](this);
                    }
                }
            }
        }
        static var keyEvents = {keyDown:1, keyUp:1};
        static var loadEvents = {load:1, unload:1};
        static var lowLevelEvents = {keyEvents:["addKeyEvents", "removeKeyEvents"], loadEvents:["addLoadEvents", "removeLoadEvents"]};
        static var _fEventDispatcher = undefined;
    }
﻿
//----------------------------------------------------------------------
//Symbol 160 MovieClip Frame 2
//----------------------------------------------------------------------
    stop();
    _root.loopPlay = 2;
    _parent.savePlayCX(2);

﻿
//----------------------------------------------------------------------
//Symbol 106 MovieClip [__Packages.mx.skins.SkinElement] Frame 0
//----------------------------------------------------------------------
    class mx.skins.SkinElement extends MovieClip
    {
        var _visible, _x, _y, _width, _height;
        function SkinElement () {
            super();
        }
        static function registerElement(name, className) {
            Object.registerClass(name, ((className == undefined) ? (mx.skins.SkinElement) : (className)));
            _global.skinRegistry[name] = true;
        }
        function __set__visible(visible) {
            _visible = visible;
        }
        function move(x, y) {
            _x = x;
            _y = y;
        }
        function setSize(w, h) {
            _width = w;
            _height = h;
        }
    }
﻿
//----------------------------------------------------------------------
//Symbol 100 MovieClip [HScrollBar] Frame 1
//----------------------------------------------------------------------
    #initclip 59
    Object.registerClass("HScrollBar", mx.controls.HScrollBar);
    #endinitclip

    stop();

﻿
//----------------------------------------------------------------------
//Symbol 119 MovieClip [__Packages.mx.effects.Tween] Frame 0
//----------------------------------------------------------------------
    class mx.effects.Tween extends Object
    {
        static var IntervalToken;
        var arrayMode, listener, initVal, endVal, startTime, updateFunc, endFunc, ID;
        function Tween (listenerObj, init, end, dur) {
            super();
            if (listenerObj == undefined) {
                return;
            }
            if (typeof(init) != "number") {
                arrayMode = true;
            }
            listener = listenerObj;
            initVal = init;
            endVal = end;
            if (dur != undefined) {
                duration = dur;
            }
            startTime = getTimer();
            if (duration == 0) {
                endTween();
            } else {
                AddTween(this);
            }
        }
        static function AddTween(tween) {
            tween.ID = ActiveTweens.length;
            ActiveTweens.push(tween);
            if (IntervalToken == undefined) {
                Dispatcher.DispatchTweens = DispatchTweens;
                IntervalToken = setInterval(Dispatcher, "DispatchTweens", Interval);
            }
        }
        static function RemoveTweenAt(index) {
            var _local2 = ActiveTweens;
            if (((index >= _local2.length) || (index < 0)) || (index == undefined)) {
                return(undefined);
            }
            _local2.splice(index, 1);
            var _local4 = _local2.length;
            var _local1 = index;
            while (_local1 < _local4) {
                _local2[_local1].ID--;
                _local1++;
            }
            if (_local4 == 0) {
                clearInterval(IntervalToken);
                delete IntervalToken;
            }
        }
        static function DispatchTweens(Void) {
            var _local2 = ActiveTweens;
            var _local3 = _local2.length;
            var _local1 = 0;
            while (_local1 < _local3) {
                _local2[_local1].doInterval();
                _local1++;
            }
            updateAfterEvent();
        }
        function doInterval() {
            var _local2 = getTimer() - startTime;
            var _local3 = getCurVal(_local2);
            if (_local2 >= duration) {
                endTween();
            } else if (updateFunc != undefined) {
                listener[updateFunc](_local3);
            } else {
                listener.onTweenUpdate(_local3);
            }
        }
        function getCurVal(curTime) {
            if (arrayMode) {
                var _local3 = new Array();
                var _local2 = 0;
                while (_local2 < initVal.length) {
                    _local3[_local2] = easingEquation(curTime, initVal[_local2], endVal[_local2] - initVal[_local2], duration);
                    _local2++;
                }
                return(_local3);
            }
            return(easingEquation(curTime, initVal, endVal - initVal, duration));
        }
        function endTween() {
            if (endFunc != undefined) {
                listener[endFunc](endVal);
            } else {
                listener.onTweenEnd(endVal);
            }
            RemoveTweenAt(ID);
        }
        function setTweenHandlers(update, end) {
            updateFunc = update;
            endFunc = end;
        }
        function easingEquation(t, b, c, d) {
            return(((c / 2) * (Math.sin(Math.PI * ((t / d) - 0.5)) + 1)) + b);
        }
        static var ActiveTweens = new Array();
        static var Interval = 10;
        static var Dispatcher = new Object();
        var duration = 3000;
    }
﻿
//----------------------------------------------------------------------
//Symbol 210 Button
//----------------------------------------------------------------------
on (release) {
    if ((_root.playerMusic_ID == "") || (_root.playerMusic_ID == undefined)) {
    } else {
        getURL ((_root.userPath + "SC_add.asp?music_ID=") + _root.playerMusic_ID, "_blank");
    }
}
﻿
//----------------------------------------------------------------------
//Symbol 16 MovieClip [UIObject] Frame 1
//----------------------------------------------------------------------
    #initclip 44
    Object.registerClass("UIObject", mx.core.UIObject);
    #endinitclip

    stop();
﻿
//----------------------------------------------------------------------
//Symbol 112 MovieClip [__Packages.mx.managers.DepthManager] Frame 0
//----------------------------------------------------------------------
    class mx.managers.DepthManager
    {
        var _childCounter, createClassObject, createObject, _parent, swapDepths, _topmost, getDepth;
        function DepthManager () {
            MovieClip.prototype.createClassChildAtDepth = createClassChildAtDepth;
            MovieClip.prototype.createChildAtDepth = createChildAtDepth;
            MovieClip.prototype.setDepthTo = setDepthTo;
            MovieClip.prototype.setDepthAbove = setDepthAbove;
            MovieClip.prototype.setDepthBelow = setDepthBelow;
            MovieClip.prototype.findNextAvailableDepth = findNextAvailableDepth;
            MovieClip.prototype.shuffleDepths = shuffleDepths;
            MovieClip.prototype.getDepthByFlag = getDepthByFlag;
            MovieClip.prototype.buildDepthTable = buildDepthTable;
            _global.ASSetPropFlags(MovieClip.prototype, "createClassChildAtDepth", 1);
            _global.ASSetPropFlags(MovieClip.prototype, "createChildAtDepth", 1);
            _global.ASSetPropFlags(MovieClip.prototype, "setDepthTo", 1);
            _global.ASSetPropFlags(MovieClip.prototype, "setDepthAbove", 1);
            _global.ASSetPropFlags(MovieClip.prototype, "setDepthBelow", 1);
            _global.ASSetPropFlags(MovieClip.prototype, "findNextAvailableDepth", 1);
            _global.ASSetPropFlags(MovieClip.prototype, "shuffleDepths", 1);
            _global.ASSetPropFlags(MovieClip.prototype, "getDepthByFlag", 1);
            _global.ASSetPropFlags(MovieClip.prototype, "buildDepthTable", 1);
        }
        static function sortFunction(a, b) {
            if (a.getDepth() > b.getDepth()) {
                return(1);
            }
            return(-1);
        }
        static function test(depth) {
            if (depth == reservedDepth) {
                return(false);
            }
            return(true);
        }
        static function createClassObjectAtDepth(className, depthSpace, initObj) {
            var _local1;
            switch (depthSpace) {
                case kCursor : 
                    _local1 = holder.createClassChildAtDepth(className, kTopmost, initObj);
                    break;
                case kTooltip : 
                    _local1 = holder.createClassChildAtDepth(className, kTop, initObj);
                    break;
            }
            return(_local1);
        }
        static function createObjectAtDepth(linkageName, depthSpace, initObj) {
            var _local1;
            switch (depthSpace) {
                case kCursor : 
                    _local1 = holder.createChildAtDepth(linkageName, kTopmost, initObj);
                    break;
                case kTooltip : 
                    _local1 = holder.createChildAtDepth(linkageName, kTop, initObj);
                    break;
            }
            return(_local1);
        }
        function createClassChildAtDepth(className, depthFlag, initObj) {
            if (_childCounter == undefined) {
                _childCounter = 0;
            }
            var _local3 = buildDepthTable();
            var _local2 = getDepthByFlag(depthFlag, _local3);
            var _local6 = "down";
            if (depthFlag == kBottom) {
                _local6 = "up";
            }
            var _local5;
            if (_local3[_local2] != undefined) {
                _local5 = _local2;
                _local2 = findNextAvailableDepth(_local2, _local3, _local6);
            }
            var _local4 = createClassObject(className, "depthChild" + (_childCounter++), _local2, initObj);
            if (_local5 != undefined) {
                _local3[_local2] = _local4;
                shuffleDepths(_local4, _local5, _local3, _local6);
            }
            if (depthFlag == kTopmost) {
                _local4._topmost = true;
            }
            return(_local4);
        }
        function createChildAtDepth(linkageName, depthFlag, initObj) {
            if (_childCounter == undefined) {
                _childCounter = 0;
            }
            var _local3 = buildDepthTable();
            var _local2 = getDepthByFlag(depthFlag, _local3);
            var _local6 = "down";
            if (depthFlag == kBottom) {
                _local6 = "up";
            }
            var _local5;
            if (_local3[_local2] != undefined) {
                _local5 = _local2;
                _local2 = findNextAvailableDepth(_local2, _local3, _local6);
            }
            var _local4 = createObject(linkageName, "depthChild" + (_childCounter++), _local2, initObj);
            if (_local5 != undefined) {
                _local3[_local2] = _local4;
                shuffleDepths(_local4, _local5, _local3, _local6);
            }
            if (depthFlag == kTopmost) {
                _local4._topmost = true;
            }
            return(_local4);
        }
        function setDepthTo(depthFlag) {
            var _local2 = _parent.buildDepthTable();
            var _local3 = _parent.getDepthByFlag(depthFlag, _local2);
            if (_local2[_local3] != undefined) {
                shuffleDepths(this, _local3, _local2, undefined);
            } else {
                swapDepths(_local3);
            }
            if (depthFlag == kTopmost) {
                _topmost = true;
            } else {
                delete _topmost;
            }
        }
        function setDepthAbove(targetInstance) {
            if (targetInstance._parent != _parent) {
                return(undefined);
            }
            var _local2 = targetInstance.getDepth() + 1;
            var _local3 = _parent.buildDepthTable();
            if ((_local3[_local2] != undefined) && (getDepth() < _local2)) {
                _local2 = _local2 - 1;
            }
            if (_local2 > highestDepth) {
                _local2 = highestDepth;
            }
            if (_local2 == highestDepth) {
                _parent.shuffleDepths(this, _local2, _local3, "down");
            } else if (_local3[_local2] != undefined) {
                _parent.shuffleDepths(this, _local2, _local3, undefined);
            } else {
                swapDepths(_local2);
            }
        }
        function setDepthBelow(targetInstance) {
            if (targetInstance._parent != _parent) {
                return(undefined);
            }
            var _local6 = targetInstance.getDepth() - 1;
            var _local3 = _parent.buildDepthTable();
            if ((_local3[_local6] != undefined) && (getDepth() > _local6)) {
                _local6 = _local6 + 1;
            }
            var _local4 = lowestDepth + numberOfAuthortimeLayers;
            var _local5;
            for (_local5 in _local3) {
                var _local2 = _local3[_local5];
                if (_local2._parent != undefined) {
                    _local4 = Math.min(_local4, _local2.getDepth());
                }
            }
            if (_local6 < _local4) {
                _local6 = _local4;
            }
            if (_local6 == _local4) {
                _parent.shuffleDepths(this, _local6, _local3, "up");
            } else if (_local3[_local6] != undefined) {
                _parent.shuffleDepths(this, _local6, _local3, undefined);
            } else {
                swapDepths(_local6);
            }
        }
        function findNextAvailableDepth(targetDepth, depthTable, direction) {
            var _local5 = lowestDepth + numberOfAuthortimeLayers;
            if (targetDepth < _local5) {
                targetDepth = _local5;
            }
            if (depthTable[targetDepth] == undefined) {
                return(targetDepth);
            }
            var _local2 = targetDepth;
            var _local1 = targetDepth;
            if (direction == "down") {
                while (depthTable[_local1] != undefined) {
                    _local1--;
                }
                return(_local1);
            }
            while (depthTable[_local2] != undefined) {
                _local2++;
            }
            return(_local2);
        }
        function shuffleDepths(subject, targetDepth, depthTable, direction) {
            var _local9 = lowestDepth + numberOfAuthortimeLayers;
            var _local8 = _local9;
            var _local5;
            for (_local5 in depthTable) {
                var _local7 = depthTable[_local5];
                if (_local7._parent != undefined) {
                    _local9 = Math.min(_local9, _local7.getDepth());
                }
            }
            if (direction == undefined) {
                if (subject.getDepth() > targetDepth) {
                    direction = "up";
                } else {
                    direction = "down";
                }
            }
            var _local1 = new Array();
            for (_local5 in depthTable) {
                var _local7 = depthTable[_local5];
                if (_local7._parent != undefined) {
                    _local1.push(_local7);
                }
            }
            _local1.sort(sortFunction);
            if (direction == "up") {
                var _local3;
                var _local11;
                do {
                    if (_local1.length <= 0) { 
                        break;
                    }
                    _local3 = _local1.pop();
                } while  (_local3 != subject);
                do {
                    if (_local1.length <= 0) { 
                        break;
                    }
                    _local11 = subject.getDepth();
                    _local3 = _local1.pop();
                    var _local4 = _local3.getDepth();
                    if (_local11 > (_local4 + 1)) {
                        if (_local4 >= 0) {
                            subject.swapDepths(_local4 + 1);
                        } else if ((_local11 > _local8) && (_local4 < _local8)) {
                            subject.swapDepths(_local8);
                        }
                    }
                    subject.swapDepths(_local3);
                } while  (_local4 != targetDepth);
            } else if (direction == "down") {
                var _local3;
                do {
                    if (_local1.length <= 0) { 
                        break;
                    }
                    _local3 = _local1.shift();
                } while  (_local3 != subject);
                do {
                    if (_local1.length <= 0) { 
                        break;
                    }
                    var _local11 = _local3.getDepth();
                    _local3 = _local1.shift();
                    var _local4 = _local3.getDepth();
                    if ((_local11 < (_local4 - 1)) && (_local4 > 0)) {
                        subject.swapDepths(_local4 - 1);
                    }
                    subject.swapDepths(_local3);
                } while  (_local4 != targetDepth);
            }
        }
        function getDepthByFlag(depthFlag, depthTable) {
            var _local2 = 0;
            if ((depthFlag == kTop) || (depthFlag == kNotopmost)) {
                var _local5 = 0;
                var _local7 = false;
                var _local8;
                for (_local8 in depthTable) {
                    var _local9 = depthTable[_local8];
                    var _local3 = typeof(_local9);
                    if ((_local3 == "movieclip") || ((_local3 == "object") && (_local9.__getTextFormat != undefined))) {
                        if (_local9.getDepth() <= highestDepth) {
                            if (!_local9._topmost) {
                                _local2 = Math.max(_local2, _local9.getDepth());
                            } else if (!_local7) {
                                _local5 = _local9.getDepth();
                                _local7 = true;
                            } else {
                                _local5 = Math.min(_local5, _local9.getDepth());
                            }
                        }
                    }
                }
                _local2 = _local2 + 20;
                if (_local7) {
                    if (_local2 >= _local5) {
                        _local2 = _local5 - 1;
                    }
                }
            } else if (depthFlag == kBottom) {
                for (var _local8 in depthTable) {
                    var _local9 = depthTable[_local8];
                    var _local3 = typeof(_local9);
                    if ((_local3 == "movieclip") || ((_local3 == "object") && (_local9.__getTextFormat != undefined))) {
                        if (_local9.getDepth() <= highestDepth) {
                            _local2 = Math.min(_local2, _local9.getDepth());
                        }
                    }
                }
                _local2 = _local2 - 20;
            } else if (depthFlag == kTopmost) {
                for (var _local8 in depthTable) {
                    var _local9 = depthTable[_local8];
                    var _local3 = typeof(_local9);
                    if ((_local3 == "movieclip") || ((_local3 == "object") && (_local9.__getTextFormat != undefined))) {
                        if (_local9.getDepth() <= highestDepth) {
                            _local2 = Math.max(_local2, _local9.getDepth());
                        }
                    }
                }
                _local2 = _local2 + 100;
            }
            if (_local2 >= highestDepth) {
                _local2 = highestDepth;
            }
            var _local6 = lowestDepth + numberOfAuthortimeLayers;
            for (var _local9 in depthTable) {
                var _local4 = depthTable[_local9];
                if (_local4._parent != undefined) {
                    _local6 = Math.min(_local6, _local4.getDepth());
                }
            }
            if (_local2 <= _local6) {
                _local2 = _local6;
            }
            return(_local2);
        }
        function buildDepthTable(Void) {
            var _local5 = new Array();
            var _local4;
            for (_local4 in this) {
                var _local2 = this[_local4];
                var _local3 = typeof(_local2);
                if ((_local3 == "movieclip") || ((_local3 == "object") && (_local2.__getTextFormat != undefined))) {
                    if (_local2._parent == this) {
                        _local5[_local2.getDepth()] = _local2;
                    }
                }
            }
            return(_local5);
        }
        static var reservedDepth = 1048575;
        static var highestDepth = 1048574;
        static var lowestDepth = -16383;
        static var numberOfAuthortimeLayers = 383;
        static var kCursor = 101;
        static var kTooltip = 102;
        static var kTop = 201;
        static var kBottom = 202;
        static var kTopmost = 203;
        static var kNotopmost = 204;
        static var holder = _root.createEmptyMovieClip("reserved", reservedDepth);
        static var __depthManager = new mx.managers.DepthManager();
    }
﻿
//----------------------------------------------------------------------
//Symbol 132 MovieClip [__Packages.mx.skins.halo.RectBorder] Frame 0
//----------------------------------------------------------------------
    class mx.skins.halo.RectBorder extends mx.skins.RectBorder
    {
        var offset, getStyle, borderStyleName, __borderMetrics, className, borderColorName, backgroundColorName, shadowColorName, highlightColorName, buttonColorName, __get__width, __get__height, clear, _color, drawRoundRect, beginFill, drawRect, endFill;
        function RectBorder () {
            super();
        }
        function init(Void) {
            borderWidths.default = 3;
            super.init();
        }
        function getBorderMetrics(Void) {
            if (offset == undefined) {
                var _local3 = getStyle(borderStyleName);
                offset = borderWidths[_local3];
            }
            if ((getStyle(borderStyleName) == "default") || (getStyle(borderStyleName) == "alert")) {
                __borderMetrics = {left:3, top:1, right:3, bottom:3};
                return(__borderMetrics);
            }
            return(super.getBorderMetrics());
        }
        function drawBorder(Void) {
            var _local6 = _global.styles[className];
            if (_local6 == undefined) {
                _local6 = _global.styles.RectBorder;
            }
            var _local5 = getStyle(borderStyleName);
            var _local7 = getStyle(borderColorName);
            if (_local7 == undefined) {
                _local7 = _local6[borderColorName];
            }
            var _local8 = getStyle(backgroundColorName);
            if (_local8 == undefined) {
                _local8 = _local6[backgroundColorName];
            }
            var _local16 = getStyle("backgroundImage");
            if (_local5 != "none") {
                var _local14 = getStyle(shadowColorName);
                if (_local14 == undefined) {
                    _local14 = _local6[shadowColorName];
                }
                var _local13 = getStyle(highlightColorName);
                if (_local13 == undefined) {
                    _local13 = _local6[highlightColorName];
                }
                var _local12 = getStyle(buttonColorName);
                if (_local12 == undefined) {
                    _local12 = _local6[buttonColorName];
                }
                var _local11 = getStyle(borderCapColorName);
                if (_local11 == undefined) {
                    _local11 = _local6[borderCapColorName];
                }
                var _local10 = getStyle(shadowCapColorName);
                if (_local10 == undefined) {
                    _local10 = _local6[shadowCapColorName];
                }
            }
            offset = borderWidths[_local5];
            var _local9 = offset;
            var _local3 = __get__width();
            var _local4 = __get__height();
            clear();
            _color = undefined;
            if (_local5 == "none") {
            } else if (_local5 == "inset") {
                _color = colorList;
                draw3dBorder(_local11, _local12, _local7, _local13, _local14, _local10);
            } else if (_local5 == "outset") {
                _color = colorList;
                draw3dBorder(_local11, _local7, _local12, _local14, _local13, _local10);
            } else if (_local5 == "alert") {
                var _local15 = getStyle("themeColor");
                drawRoundRect(0, 5, _local3, _local4 - 5, 5, 6184542, 10);
                drawRoundRect(1, 4, _local3 - 2, _local4 - 5, 4, [6184542, 6184542], 10, 0, "radial");
                drawRoundRect(2, 0, _local3 - 4, _local4 - 2, 3, [0, 14342874], 100, 0, "radial");
                drawRoundRect(2, 0, _local3 - 4, _local4 - 2, 3, _local15, 50);
                drawRoundRect(3, 1, _local3 - 6, _local4 - 4, 2, 16777215, 100);
            } else if (_local5 == "default") {
                drawRoundRect(0, 5, _local3, _local4 - 5, {tl:5, tr:5, br:0, bl:0}, 6184542, 10);
                drawRoundRect(1, 4, _local3 - 2, _local4 - 5, {tl:4, tr:4, br:0, bl:0}, [6184542, 6184542], 10, 0, "radial");
                drawRoundRect(2, 0, _local3 - 4, _local4 - 2, {tl:3, tr:3, br:0, bl:0}, [12897484, 11844796], 100, 0, "radial");
                drawRoundRect(3, 1, _local3 - 6, _local4 - 4, {tl:2, tr:2, br:0, bl:0}, 16777215, 100);
            } else if (_local5 == "dropDown") {
                drawRoundRect(0, 0, _local3 + 1, _local4, {tl:4, tr:0, br:0, bl:4}, [13290186, 7895160], 100, -10, "linear");
                drawRoundRect(1, 1, _local3 - 1, _local4 - 2, {tl:3, tr:0, br:0, bl:3}, 16777215, 100);
            } else if (_local5 == "menuBorder") {
                var _local15 = getStyle("themeColor");
                drawRoundRect(4, 4, _local3 - 2, _local4 - 3, 0, [6184542, 6184542], 10, 0, "radial");
                drawRoundRect(4, 4, _local3 - 1, _local4 - 2, 0, 6184542, 10);
                drawRoundRect(0, 0, _local3 + 1, _local4, 0, [0, 14342874], 100, 250, "linear");
                drawRoundRect(0, 0, _local3 + 1, _local4, 0, _local15, 50);
                drawRoundRect(2, 2, _local3 - 3, _local4 - 4, 0, 16777215, 100);
            } else if (_local5 == "comboNonEdit") {
            } else {
                beginFill(_local7);
                drawRect(0, 0, _local3, _local4);
                drawRect(1, 1, _local3 - 1, _local4 - 1);
                endFill();
                _color = borderColorName;
            }
            if (_local8 != undefined) {
                beginFill(_local8);
                drawRect(_local9, _local9, __get__width() - _local9, __get__height() - _local9);
                endFill();
            }
        }
        function draw3dBorder(c1, c2, c3, c4, c5, c6) {
            var _local3 = __get__width();
            var _local2 = __get__height();
            beginFill(c1);
            drawRect(0, 0, _local3, _local2);
            drawRect(1, 0, _local3 - 1, _local2);
            endFill();
            beginFill(c2);
            drawRect(1, 0, _local3 - 1, 1);
            endFill();
            beginFill(c3);
            drawRect(1, _local2 - 1, _local3 - 1, _local2);
            endFill();
            beginFill(c4);
            drawRect(1, 1, _local3 - 1, 2);
            endFill();
            beginFill(c5);
            drawRect(1, _local2 - 2, _local3 - 1, _local2 - 1);
            endFill();
            beginFill(c6);
            drawRect(1, 2, _local3 - 1, _local2 - 2);
            drawRect(2, 2, _local3 - 2, _local2 - 2);
            endFill();
        }
        static function classConstruct() {
            mx.core.ext.UIObjectExtensions.Extensions();
            _global.styles.rectBorderClass = mx.skins.halo.RectBorder;
            _global.skinRegistry.RectBorder = true;
            return(true);
        }
        static var symbolName = "RectBorder";
        static var symbolOwner = mx.skins.halo.RectBorder;
        static var version = "2.0.2.126";
        var borderCapColorName = "borderCapColor";
        var shadowCapColorName = "shadowCapColor";
        var colorList = {highlightColor:0, borderColor:0, buttonColor:0, shadowColor:0, borderCapColor:0, shadowCapColor:0};
        var borderWidths = {none:0, solid:1, inset:2, outset:2, alert:3, dropDown:2, menuBorder:2, comboNonEdit:2};
        static var classConstructed = classConstruct();
        static var UIObjectExtensionsDependency = mx.core.ext.UIObjectExtensions;
    }
﻿
//----------------------------------------------------------------------
//Symbol 160 MovieClip Frame 1
//----------------------------------------------------------------------
    stop();
    _root.loopPlay = 1;
    _parent.savePlayCX(1);

﻿
//----------------------------------------------------------------------
//Symbol 29 MovieClip [BrdrFace] Frame 1
//----------------------------------------------------------------------
    mx.skins.ColoredSkinElement.setColorStyle(this, "buttonColor");

﻿
//----------------------------------------------------------------------
//Symbol 126 MovieClip [__Packages.mx.skins.halo.FocusRect] Frame 0
//----------------------------------------------------------------------
    class mx.skins.halo.FocusRect extends mx.skins.SkinElement
    {
        var boundingBox_mc, _xscale, _yscale, clear, beginFill, drawRoundRect, endFill, _visible;
        function FocusRect () {
            super();
            boundingBox_mc._visible = false;
            boundingBox_mc._width = (boundingBox_mc._height = 0);
        }
        function draw(o) {
            o.adjustFocusRect();
        }
        function setSize(w, h, r, a, rectCol) {
            _xscale = (_yscale = 100);
            clear();
            if (typeof(r) == "object") {
                r.br = ((r.br > 2) ? (r.br - 2) : 0);
                r.bl = ((r.bl > 2) ? (r.bl - 2) : 0);
                r.tr = ((r.tr > 2) ? (r.tr - 2) : 0);
                r.tl = ((r.tl > 2) ? (r.tl - 2) : 0);
                beginFill(rectCol, a * 0.3);
                drawRoundRect(0, 0, w, h, r);
                drawRoundRect(2, 2, w - 4, h - 4, r);
                endFill();
                r.br = ((r.br > 1) ? (r.br + 1) : 0);
                r.bl = ((r.bl > 1) ? (r.bl + 1) : 0);
                r.tr = ((r.tr > 1) ? (r.tr + 1) : 0);
                r.tl = ((r.tl > 1) ? (r.tl + 1) : 0);
                beginFill(rectCol, a * 0.3);
                drawRoundRect(1, 1, w - 2, h - 2, r);
                r.br = ((r.br > 1) ? (r.br - 1) : 0);
                r.bl = ((r.bl > 1) ? (r.bl - 1) : 0);
                r.tr = ((r.tr > 1) ? (r.tr - 1) : 0);
                r.tl = ((r.tl > 1) ? (r.tl - 1) : 0);
                drawRoundRect(2, 2, w - 4, h - 4, r);
                endFill();
            } else {
                var _local5;
                if (r != 0) {
                    _local5 = r - 2;
                } else {
                    _local5 = 0;
                }
                beginFill(rectCol, a * 0.3);
                drawRoundRect(0, 0, w, h, r);
                drawRoundRect(2, 2, w - 4, h - 4, _local5);
                endFill();
                beginFill(rectCol, a * 0.3);
                if (r != 0) {
                    _local5 = r - 2;
                    r = r - 1;
                } else {
                    _local5 = 0;
                    r = 0;
                }
                drawRoundRect(1, 1, w - 2, h - 2, r);
                drawRoundRect(2, 2, w - 4, h - 4, _local5);
                endFill();
            }
        }
        function handleEvent(e) {
            if (e.type == "unload") {
                _visible = true;
            } else if (e.type == "resize") {
                e.target.adjustFocusRect();
            } else if (e.type == "move") {
                e.target.adjustFocusRect();
            }
        }
        static function classConstruct() {
            mx.core.UIComponent.prototype.drawFocus = function (focused) {
                var _local2 = this._parent.focus_mc;
                if (!focused) {
                    _local2._visible = false;
                    this.removeEventListener("unload", _local2);
                    this.removeEventListener("move", _local2);
                    this.removeEventListener("resize", _local2);
                } else {
                    if (_local2 == undefined) {
                        _local2 = this._parent.createChildAtDepth("FocusRect", mx.managers.DepthManager.kTop);
                        _local2.tabEnabled = false;
                        this._parent.focus_mc = _local2;
                    } else {
                        _local2._visible = true;
                    }
                    _local2.draw(this);
                    if (_local2.getDepth() < this.getDepth()) {
                        _local2.setDepthAbove(this);
                    }
                    this.addEventListener("unload", _local2);
                    this.addEventListener("move", _local2);
                    this.addEventListener("resize", _local2);
                }
            };
            mx.core.UIComponent.prototype.adjustFocusRect = function () {
                var _local2 = this.getStyle("themeColor");
                if (_local2 == undefined) {
                    _local2 = 8453965 /* 0x80FF4D */;
                }
                var _local3 = this._parent.focus_mc;
                _local3.setSize(this.width + 4, this.height + 4, 0, 100, _local2);
                _local3.move(this.x - 2, this.y - 2);
            };
            TextField.prototype.drawFocus = mx.core.UIComponent.prototype.drawFocus;
            TextField.prototype.adjustFocusRect = mx.core.UIComponent.prototype.adjustFocusRect;
            mx.skins.halo.FocusRect.prototype.drawRoundRect = mx.skins.halo.Defaults.prototype.drawRoundRect;
            return(true);
        }
        static var classConstructed = classConstruct();
        static var DefaultsDependency = mx.skins.halo.Defaults;
        static var UIComponentDependency = mx.core.UIComponent;
    }
﻿
//----------------------------------------------------------------------
//Symbol 169 MovieClip Frame 2
//----------------------------------------------------------------------
    stop();

﻿
//----------------------------------------------------------------------
//Symbol 218 MovieClip Frame 1
//----------------------------------------------------------------------
    W_bg.useHandCursor = false;
    W_bg.onPress = function () {
    };
    W_bg.onRelease = (W_bg.onReleaseOutside = function () {
    });

﻿
//----------------------------------------------------------------------
//Symbol 128 MovieClip [__Packages.mx.styles.CSSSetStyle] Frame 0
//----------------------------------------------------------------------
    class mx.styles.CSSSetStyle
    {
        var styleName, stylecache, _color, setColor, invalidateStyle;
        function CSSSetStyle () {
        }
        function _setStyle(styleProp, newValue) {
            this[styleProp] = newValue;
            if (mx.styles.StyleManager.TextStyleMap[styleProp] != undefined) {
                if (styleProp == "color") {
                    if (isNaN(newValue)) {
                        newValue = mx.styles.StyleManager.getColorName(newValue);
                        this[styleProp] = newValue;
                        if (newValue == undefined) {
                            return(undefined);
                        }
                    }
                }
                _level0.changeTextStyleInChildren(styleProp);
                return(undefined);
            }
            if (mx.styles.StyleManager.isColorStyle(styleProp)) {
                if (isNaN(newValue)) {
                    newValue = mx.styles.StyleManager.getColorName(newValue);
                    this[styleProp] = newValue;
                    if (newValue == undefined) {
                        return(undefined);
                    }
                }
                if (styleProp == "themeColor") {
                    var _local7 = mx.styles.StyleManager.colorNames.haloBlue;
                    var _local6 = mx.styles.StyleManager.colorNames.haloGreen;
                    var _local8 = mx.styles.StyleManager.colorNames.haloOrange;
                    var _local4 = {};
                    _local4[_local7] = 12188666 /* 0xB9FBFA */;
                    _local4[_local6] = 13500353 /* 0xCDFFC1 */;
                    _local4[_local8] = 16766319 /* 0xFFD56F */;
                    var _local5 = {};
                    _local5[_local7] = 13958653 /* 0xD4FDFD */;
                    _local5[_local6] = 14942166 /* 0xE3FFD6 */;
                    _local5[_local8] = 16772787 /* 0xFFEEB3 */;
                    var _local9 = _local4[newValue];
                    var _local10 = _local5[newValue];
                    if (_local9 == undefined) {
                        _local9 = newValue;
                    }
                    if (_local10 == undefined) {
                        _local10 = newValue;
                    }
                    setStyle("selectionColor", _local9);
                    setStyle("rollOverColor", _local10);
                }
                _level0.changeColorStyleInChildren(styleName, styleProp, newValue);
            } else {
                if ((styleProp == "backgroundColor") && (isNaN(newValue))) {
                    newValue = mx.styles.StyleManager.getColorName(newValue);
                    this[styleProp] = newValue;
                    if (newValue == undefined) {
                        return(undefined);
                    }
                }
                _level0.notifyStyleChangeInChildren(styleName, styleProp, newValue);
            }
        }
        function changeTextStyleInChildren(styleProp) {
            var _local4 = getTimer();
            var _local5;
            for (_local5 in this) {
                var _local2 = this[_local5];
                if (_local2._parent == this) {
                    if (_local2.searchKey != _local4) {
                        if (_local2.stylecache != undefined) {
                            delete _local2.stylecache.tf;
                            delete _local2.stylecache[styleProp];
                        }
                        _local2.invalidateStyle(styleProp);
                        _local2.changeTextStyleInChildren(styleProp);
                        _local2.searchKey = _local4;
                    }
                }
            }
        }
        function changeColorStyleInChildren(sheetName, colorStyle, newValue) {
            var _local6 = getTimer();
            var _local7;
            for (_local7 in this) {
                var _local2 = this[_local7];
                if (_local2._parent == this) {
                    if (_local2.searchKey != _local6) {
                        if (((_local2.getStyleName() == sheetName) || (sheetName == undefined)) || (sheetName == "_global")) {
                            if (_local2.stylecache != undefined) {
                                delete _local2.stylecache[colorStyle];
                            }
                            if (typeof(_local2._color) == "string") {
                                if (_local2._color == colorStyle) {
                                    var _local4 = _local2.getStyle(colorStyle);
                                    if (colorStyle == "color") {
                                        if (stylecache.tf.color != undefined) {
                                            stylecache.tf.color = _local4;
                                        }
                                    }
                                    _local2.setColor(_local4);
                                }
                            } else if (_local2._color[colorStyle] != undefined) {
                                if (typeof(_local2) != "movieclip") {
                                    _local2._parent.invalidateStyle();
                                } else {
                                    _local2.invalidateStyle(colorStyle);
                                }
                            }
                        }
                        _local2.changeColorStyleInChildren(sheetName, colorStyle, newValue);
                        _local2.searchKey = _local6;
                    }
                }
            }
        }
        function notifyStyleChangeInChildren(sheetName, styleProp, newValue) {
            var _local5 = getTimer();
            var _local6;
            for (_local6 in this) {
                var _local2 = this[_local6];
                if (_local2._parent == this) {
                    if (_local2.searchKey != _local5) {
                        if (((_local2.styleName == sheetName) || ((_local2.styleName != undefined) && (typeof(_local2.styleName) == "movieclip"))) || (sheetName == undefined)) {
                            if (_local2.stylecache != undefined) {
                                delete _local2.stylecache[styleProp];
                                delete _local2.stylecache.tf;
                            }
                            delete _local2.enabledColor;
                            _local2.invalidateStyle(styleProp);
                        }
                        _local2.notifyStyleChangeInChildren(sheetName, styleProp, newValue);
                        _local2.searchKey = _local5;
                    }
                }
            }
        }
        function setStyle(styleProp, newValue) {
            if (stylecache != undefined) {
                delete stylecache[styleProp];
                delete stylecache.tf;
            }
            this[styleProp] = newValue;
            if (mx.styles.StyleManager.isColorStyle(styleProp)) {
                if (isNaN(newValue)) {
                    newValue = mx.styles.StyleManager.getColorName(newValue);
                    this[styleProp] = newValue;
                    if (newValue == undefined) {
                        return(undefined);
                    }
                }
                if (styleProp == "themeColor") {
                    var _local10 = mx.styles.StyleManager.colorNames.haloBlue;
                    var _local9 = mx.styles.StyleManager.colorNames.haloGreen;
                    var _local11 = mx.styles.StyleManager.colorNames.haloOrange;
                    var _local6 = {};
                    _local6[_local10] = 12188666 /* 0xB9FBFA */;
                    _local6[_local9] = 13500353 /* 0xCDFFC1 */;
                    _local6[_local11] = 16766319 /* 0xFFD56F */;
                    var _local7 = {};
                    _local7[_local10] = 13958653 /* 0xD4FDFD */;
                    _local7[_local9] = 14942166 /* 0xE3FFD6 */;
                    _local7[_local11] = 16772787 /* 0xFFEEB3 */;
                    var _local12 = _local6[newValue];
                    var _local13 = _local7[newValue];
                    if (_local12 == undefined) {
                        _local12 = newValue;
                    }
                    if (_local13 == undefined) {
                        _local13 = newValue;
                    }
                    setStyle("selectionColor", _local12);
                    setStyle("rollOverColor", _local13);
                }
                if (typeof(_color) == "string") {
                    if (_color == styleProp) {
                        if (styleProp == "color") {
                            if (stylecache.tf.color != undefined) {
                                stylecache.tf.color = newValue;
                            }
                        }
                        setColor(newValue);
                    }
                } else if (_color[styleProp] != undefined) {
                    invalidateStyle(styleProp);
                }
                changeColorStyleInChildren(undefined, styleProp, newValue);
            } else {
                if ((styleProp == "backgroundColor") && (isNaN(newValue))) {
                    newValue = mx.styles.StyleManager.getColorName(newValue);
                    this[styleProp] = newValue;
                    if (newValue == undefined) {
                        return(undefined);
                    }
                }
                invalidateStyle(styleProp);
            }
            if (mx.styles.StyleManager.isInheritingStyle(styleProp) || (styleProp == "styleName")) {
                var _local8;
                var _local5 = newValue;
                if (styleProp == "styleName") {
                    _local8 = ((typeof(newValue) == "string") ? (_global.styles[newValue]) : (_local5));
                    _local5 = _local8.themeColor;
                    if (_local5 != undefined) {
                        _local8.rollOverColor = (_local8.selectionColor = _local5);
                    }
                }
                notifyStyleChangeInChildren(undefined, styleProp, newValue);
            }
        }
        static function enableRunTimeCSS() {
        }
        static function classConstruct() {
            var _local2 = MovieClip.prototype;
            var _local3 = mx.styles.CSSSetStyle.prototype;
            mx.styles.CSSStyleDeclaration.prototype.setStyle = _local3._setStyle;
            _local2.changeTextStyleInChildren = _local3.changeTextStyleInChildren;
            _local2.changeColorStyleInChildren = _local3.changeColorStyleInChildren;
            _local2.notifyStyleChangeInChildren = _local3.notifyStyleChangeInChildren;
            _local2.setStyle = _local3.setStyle;
            _global.ASSetPropFlags(_local2, "changeTextStyleInChildren", 1);
            _global.ASSetPropFlags(_local2, "changeColorStyleInChildren", 1);
            _global.ASSetPropFlags(_local2, "notifyStyleChangeInChildren", 1);
            _global.ASSetPropFlags(_local2, "setStyle", 1);
            var _local4 = TextField.prototype;
            _local4.setStyle = _local2.setStyle;
            _local4.changeTextStyleInChildren = _local3.changeTextStyleInChildren;
            return(true);
        }
        static var classConstructed = classConstruct();
        static var CSSStyleDeclarationDependency = mx.styles.CSSStyleDeclaration;
    }
﻿
//----------------------------------------------------------------------
//Symbol 164 Button
//----------------------------------------------------------------------
on (release) {
    _parent.tempSoundVol = false;
    _parent.s.setVolume(0);
    play();
}
﻿
//----------------------------------------------------------------------
//Symbol 254 MovieClip Frame 1
//----------------------------------------------------------------------
    stop();
    _parent.cuoPan1.gotoAndPlay("\u64AD\u653E");
    _parent.cuoPan2.gotoAndPlay("\u64AD\u653E");

﻿
//----------------------------------------------------------------------
//Symbol 151 Button
//----------------------------------------------------------------------
on (release) {
    play();
}
﻿
//----------------------------------------------------------------------
//Symbol 111 MovieClip [__Packages.mx.skins.RectBorder] Frame 0
//----------------------------------------------------------------------
    class mx.skins.RectBorder extends mx.skins.Border
    {
        var __width, __height, offset, __borderMetrics;
        function RectBorder () {
            super();
        }
        function get width() {
            return(__width);
        }
        function get height() {
            return(__height);
        }
        function init(Void) {
            super.init();
        }
        function draw(Void) {
            size();
        }
        function getBorderMetrics(Void) {
            var _local2 = offset;
            if (__borderMetrics == undefined) {
                __borderMetrics = {left:_local2, top:_local2, right:_local2, bottom:_local2};
            } else {
                __borderMetrics.left = _local2;
                __borderMetrics.top = _local2;
                __borderMetrics.right = _local2;
                __borderMetrics.bottom = _local2;
            }
            return(__borderMetrics);
        }
        function get borderMetrics() {
            return(getBorderMetrics());
        }
        function drawBorder(Void) {
        }
        function size(Void) {
            drawBorder();
        }
        function setColor(Void) {
            drawBorder();
        }
        static var symbolName = "RectBorder";
        static var symbolOwner = mx.skins.RectBorder;
        static var version = "2.0.2.126";
        var className = "RectBorder";
        var borderStyleName = "borderStyle";
        var borderColorName = "borderColor";
        var shadowColorName = "shadowColor";
        var highlightColorName = "highlightColor";
        var buttonColorName = "buttonColor";
        var backgroundColorName = "backgroundColor";
    }
﻿
//----------------------------------------------------------------------
//Symbol 40 MovieClip [ButtonSkin] Frame 1
//----------------------------------------------------------------------
    #initclip 54
    Object.registerClass("ButtonSkin", mx.skins.halo.ButtonSkin);
    #endinitclip

﻿
//----------------------------------------------------------------------
//Symbol 13 MovieClip [DataSelector] Frame 1
//----------------------------------------------------------------------
    #initclip 41
    Object.registerClass("DataSelector", mx.controls.listclasses.DataSelector);
    #endinitclip

    stop();
﻿
//----------------------------------------------------------------------
//Symbol 34 MovieClip [BrdrHilght] Frame 1
//----------------------------------------------------------------------
    mx.skins.ColoredSkinElement.setColorStyle(this, "highlightColor");

﻿
//----------------------------------------------------------------------
//Symbol 2 MovieClip [__Packages.mx.core.UIComponent] Frame 0
//----------------------------------------------------------------------
    class mx.core.UIComponent extends mx.core.UIObject
    {
        var __width, __height, invalidate, stylecache, removeEventListener, dispatchEvent, drawFocus, addEventListener, _xscale, _yscale, _focusrect, watch, enabled;
        function UIComponent () {
            super();
        }
        function get width() {
            return(__width);
        }
        function get height() {
            return(__height);
        }
        function setVisible(x, noEvent) {
            super.setVisible(x, noEvent);
        }
        function enabledChanged(id, oldValue, newValue) {
            setEnabled(newValue);
            invalidate();
            delete stylecache.tf;
            return(newValue);
        }
        function setEnabled(enabled) {
            invalidate();
        }
        function getFocus() {
            var selFocus = Selection.getFocus();
            return(((selFocus === null) ? null : (eval (selFocus))));
        }
        function setFocus() {
            Selection.setFocus(this);
        }
        function getFocusManager() {
            var _local2 = this;
            while (_local2 != undefined) {
                if (_local2.focusManager != undefined) {
                    return(_local2.focusManager);
                }
                _local2 = _local2._parent;
            }
            return(undefined);
        }
        function onKillFocus(newFocus) {
            removeEventListener("keyDown", this);
            removeEventListener("keyUp", this);
            dispatchEvent({type:"focusOut"});
            drawFocus(false);
        }
        function onSetFocus(oldFocus) {
            addEventListener("keyDown", this);
            addEventListener("keyUp", this);
            dispatchEvent({type:"focusIn"});
            if (getFocusManager().bDrawFocus != false) {
                drawFocus(true);
            }
        }
        function findFocusInChildren(o) {
            if (o.focusTextField != undefined) {
                return(o.focusTextField);
            }
            if (o.tabEnabled == true) {
                return(o);
            }
            return(undefined);
        }
        function findFocusFromObject(o) {
            if (o.tabEnabled != true) {
                if (o._parent == undefined) {
                    return(undefined);
                }
                if (o._parent.tabEnabled == true) {
                    o = o._parent;
                } else if (o._parent.tabChildren) {
                    o = findFocusInChildren(o._parent);
                } else {
                    o = findFocusFromObject(o._parent);
                }
            }
            return(o);
        }
        function pressFocus() {
            var _local3 = findFocusFromObject(this);
            var _local2 = getFocus();
            if (_local3 != _local2) {
                _local2.drawFocus(false);
                if (getFocusManager().bDrawFocus != false) {
                    _local3.drawFocus(true);
                }
            }
        }
        function releaseFocus() {
            var _local2 = findFocusFromObject(this);
            if (_local2 != getFocus()) {
                _local2.setFocus();
            }
        }
        function isParent(o) {
            while (o != undefined) {
                if (o == this) {
                    return(true);
                }
                o = o._parent;
            }
            return(false);
        }
        function size() {
        }
        function init() {
            super.init();
            _xscale = 100;
            _yscale = 100;
            _focusrect = _global.useFocusRect == false;
            watch("enabled", enabledChanged);
            if (enabled == false) {
                setEnabled(false);
            }
        }
        function dispatchValueChangedEvent(value) {
            dispatchEvent({type:"valueChanged", value:value});
        }
        static var symbolName = "UIComponent";
        static var symbolOwner = mx.core.UIComponent;
        static var version = "2.0.2.126";
        static var kStretch = 5000;
        var focusEnabled = true;
        var tabEnabled = true;
        var origBorderStyles = {themeColor:16711680};
        var clipParameters = {};
        static var mergedClipParameters = mx.core.UIObject.mergeClipParameters(mx.core.UIComponent.prototype.clipParameters, mx.core.UIObject.prototype.clipParameters);
    }
﻿
//----------------------------------------------------------------------
//Symbol 24 MovieClip [UIComponent] Frame 1
//----------------------------------------------------------------------
    #initclip 49
    Object.registerClass("UIComponent", mx.core.UIComponent);
    #endinitclip

    stop();
﻿
//----------------------------------------------------------------------
//Frame 3
//----------------------------------------------------------------------
    stop();
﻿
//----------------------------------------------------------------------
//Symbol 19 Button
//----------------------------------------------------------------------
on (keyPress "<Tab>") {
    this.tabHandler();
}
﻿
//----------------------------------------------------------------------
//Symbol 320 MovieClip Frame 6
//----------------------------------------------------------------------
    function NoRed5Play() {
        close_interval();
        _root.red5Noplay = true;
        _root.R_list_mc.myMusicList();
        trace("\u4E0D\u80FDred5\u64AD\u653E");
    }
    function checkTime(ns) {
        DQplayTime++;
        var _local5 = ns.time;
        var _local7 = ns.time;
        var _local4 = Math.floor(_local5 / 60);
        if (_local4 < 10) {
            _local4 = "0" + _local4;
        }
        var _local3 = Math.floor(_local5 % 60);
        if (_local3 < 10) {
            _local3 = "0" + _local3;
        }
        time_txt.text = (_local4 + ":") + _local3;
        loadBar1_red5._width = 370 * (((_local7 / Ztime_red5) * 100) / 100);
        if (tuodong == false) {
            playJDT_red5._x = loadBar1_red5._width + 104;
        }
        back_bufferPct = bufferPct;
        bufferPct = Math.min(Math.round((ns.bufferLength / ns.bufferTime) * 100), 100);
        var _local6 = "";
        _local6 = _local6 + (((((((("Length: " + ns.bufferLength) + "\t") + "Time: ") + ns.bufferTime) + "\t") + "Buffer:") + bufferPct) + "%");
        trace(_local6);
        if (bufferPct == 100) {
            if (setBufferTime_I == 0) {
                setBufferTime_I++;
                ns.setBufferTime(3);
            } else if (setBufferTime_I == 1) {
                setBufferTime_I++;
                ns.setBufferTime(7);
            } else if (setBufferTime_I == 2) {
                setBufferTime_I++;
                ns.setBufferTime(15);
            } else {
                ns.setBufferTime(30);
            }
        }
        if (ns.bufferLength == 0) {
            ns.setBufferTime(0.1);
            setBufferTime_I = 0;
        }
        if (ns.bufferLength == undefined) {
            NoRed5Play();
        }
        if (paused_red5 == false) {
            if (((bufferPct < 100) && (back_bufferPct <= bufferPct)) && (setBufferTime_I < 1)) {
                vote_mc.HYupload_mc._visible = 0;
                red5_load_mc._visible = 1;
                red5_load_mc.loaded_txt.text = ("\u6B63\u5728\u7F13\u51B2\uFF1A" + bufferPct) + "%";
            } else {
                red5_load_mc._visible = 0;
                if ((_root.this_up_HYname != "") and (_root.this_up_HYname != undefined)) {
                    vote_mc.HYupload_mc._visible = 1;
                    vote_mc.HYupload_mc.upHY.text = "\u4E0A\u4F20\uFF1A" + _root.this_up_HYname;
                } else {
                    vote_mc.HYupload_mc._visible = 0;
                }
            }
        }
    }
    stop();
    var back_bufferPct = 0;
    var bufferPct = 0;
    var DQplayTime = 0;
    YLshan_mc1_red5._visible = 1;
    YLshan_mc2_red5._visible = 1;
    var nc = new NetConnection();
    nc.connect(_root.linkServerRed5);
    nc.onStatus = function (infoObject) {
        if (infoObject.code == "NetConnection.Connect.Success") {
            trace("\u8FDE\u63A5\u6210\u529F");
        }
        if (infoObject.code == "NetConnection.Connect.Closed") {
            trace("\u94FE\u63A5\u670D\u52A1\u5668\u4E2D\u65AD");
            vote_mc.HYupload_mc._visible = 0;
            red5_load_mc._visible = 1;
            red5_load_mc.loaded_txt.text = "\u94FE\u63A5\u670D\u52A1\u5668\u4E2D\u65AD";
        }
    };
    var ns = new NetStream(nc);
    ns.setBufferTime(0.1);
    var setBufferTime_I = 0;
    videoContainer.attachVideo(ns);
    ns.onStatus = function (infoObject) {
        for (var _local2 in infoObject) {
            if (infoObject[_local2] == "NetStream.Play.Stop") {
                if (DQplayTime < 30) {
                    NoRed5Play();
                } else {
                    close_interval();
                    next_Music();
                }
            }
            if (infoObject[_local2] == "NetStream.Buffer.Full") {
                tuodong = false;
            }
            if (infoObject[_local2] == "NetStream.Buffer.Empty") {
                ns.setBufferTime(0.1);
                setBufferTime_I = 0;
            }
        }
    };
    ns.onMetaData = function (infoObject) {
        for (var _local4 in infoObject) {
            if (_local4 == "duration") {
                Ztime_red5 = infoObject[_local4];
                if (Ztime_red5 == 0) {
                    close_interval();
                    NoRed5Play();
                }
                var _local2 = Math.floor(Ztime_red5 / 60);
                if (_local2 < 10) {
                    _local2 = "0" + _local2;
                }
                var _local1 = Math.floor(Ztime_red5 % 60);
                if (_local1 < 10) {
                    _local1 = "0" + _local1;
                }
                Ztime_txt.text = (_local2 + ":") + _local1;
            }
        }
    };
    ns.play(_root.playerFileRed5);
    var time_interval = setInterval(checkTime, 500, ns);
    var Ztime_red5 = 300;
    var tuodong = false;
    preload_red5.onRelease = (preload_red5.onReleaseOutside = function () {
        var _local1 = (Math.floor(_xmouse - preload_red5._x) / 370) * Ztime_red5;
        ns.setBufferTime(0.1);
        setBufferTime_I = 0;
        ns.pause(false);
        ns.seek(_local1);
        paused_red5 = false;
        btn3_red5.gotoAndStop("play");
        YLshan_mc1_red5._visible = 1;
        YLshan_mc2_red5._visible = 1;
    });
    var l = 104;
    var t = 170;
    playJDT_red5.onPress = function () {
        TD_time_mc._visible = 1;
        startDrag (this, false, l, t, l + 360, t);
        tuodong = true;
    };
    playJDT_red5.onRelease = (playJDT_red5.onReleaseOutside = function () {
        TD_time_mc._visible = 0;
        stopDrag();
        var _local2 = (Math.floor(this._x - 104) / 370) * Ztime_red5;
        ns.setBufferTime(0.1);
        setBufferTime_I = 0;
        ns.pause(false);
        ns.seek(_local2);
        paused_red5 = false;
        btn3_red5.gotoAndStop("play");
        YLshan_mc1_red5._visible = 1;
        YLshan_mc2_red5._visible = 1;
    });
    btn3_red5.onPress = function () {
        if (paused_red5) {
            ns.setBufferTime(0.1);
            setBufferTime_I = 0;
            ns.pause(false);
            btn3_red5.gotoAndStop("play");
            paused_red5 = false;
            YLshan_mc1_red5._visible = 1;
            YLshan_mc2_red5._visible = 1;
        } else {
            ns.pause(true);
            btn3_red5.gotoAndStop("stop");
            paused_red5 = true;
            YLshan_mc1_red5._visible = 0;
            YLshan_mc2_red5._visible = 0;
        }
    };
    btn2_red5.onPress = function () {
        ns.pause(true);
        btn3_red5.gotoAndStop("stop");
        paused_red5 = true;
        YLshan_mc1_red5._visible = 0;
        YLshan_mc2_red5._visible = 0;
    };
﻿
//----------------------------------------------------------------------
//Symbol 198 Button
//----------------------------------------------------------------------
on (release) {
    preMusic();
}
﻿
//----------------------------------------------------------------------
//Symbol 214 Button
//----------------------------------------------------------------------
on (release) {
    if (_root.playerMusic_ID == undefined) {
        _root.msgBox("\u8BF7\u5148\u70B9\u51FB\u5F00\u59CB\u64AD\u653EDJ\uFF0C\u7136\u540E\u624D\u80FD\u4E0B\u8F7D\u3002");
    } else {
        fenxiang_mc._visible = 1;
        fenxiang_mc.gotoAndPlay("\u5F00\u59CB");
    }
}
﻿
//----------------------------------------------------------------------
//Symbol 42 MovieClip [CustomBorder] Frame 1
//----------------------------------------------------------------------
    #initclip 56
    Object.registerClass("CustomBorder", mx.skins.CustomBorder);
    mx.skins.SkinElement.registerElement("CustomBorder", mx.skins.CustomBorder);
    #endinitclip

﻿
//----------------------------------------------------------------------
//Frame 2
//----------------------------------------------------------------------
    function msgBox(txt) {
        msgBox_mc.info = txt;
        msgBox_mc.gotoAndPlay("\u5F00\u59CB");
        mx.behaviors.DepthControl.bringToFront(_root.msgBox_mc);
    }
    function ErrMsg(t_bodyInfo) {
        error_mc.info = t_bodyInfo;
        error_mc._visible = 1;
    }
    function searchKZM(txt) {
        var _local2 = txt;
        var _local1;
        _local1 = _local2.length;
        return(_local2.slice(_local1 - 3, _local1));
    }
    function PlayDJdel(txt) {
        var _local1 = new String(txt);
        var _local3 = new String();
        var _local2 = _local1.length;
        _local3 = _local1.substr(12, _local2);
        return(_local3);
    }
    function PlayDJdel2(txt) {
        var _local1 = new String(txt);
        var _local3 = new String();
        var _local2 = _local1.length;
        _local3 = _local1.substr(6, _local2);
        return(_local3);
    }
    function openHome() {
        getURL ("http://box.djyule.com", "_blank");
        _root.openURL("http://box.djyule.com");
    }
    function ifLoadMp3(M_id) {
        i = 0;
        while (i < _root.saveLoadMp3ID.length) {
            if (_root.saveLoadMp3ID[i] == M_id) {
                _root.tempArrayI = i;
                return(1);
            }
            i++;
        }
        return(0);
    }
    function soDJpath(DJid, DJUrl, DJserver, DJyz) {
        if ((_root.saveDJUrl == "") or (_root.saveDJUrl == undefined)) {
            _root.saveDJUrl = (((DJid + ",,,") + DJUrl) + ",,,") + DJserver;
        } else {
            var _local8 = false;
            var _local3 = new Array();
            _local3 = _root.saveDJUrl.split("|||");
            var _local2 = 0;
            while (_local2 < _local3.length) {
                var _local4 = new Array();
                _local4 = _local3[_local2].split(",,,");
                if (((_local4[0] == DJid) && (_local4[2] == DJserver)) && (_local4[3] == DJyz)) {
                    _local3[_local2] = (((((DJid + ",,,") + DJUrl) + ",,,") + DJserver) + ",,,") + DJyz;
                    trace("\u91CD\u65B0\u66FF\u6362\u6389\u4FDD\u5B58\u7684DJ\u8DEF\u5F84");
                    _local8 = true;
                }
                _local2++;
            }
            if (_local8) {
                _local2 = 0;
                while (_local2 < _local3.length) {
                    if (_local2 == 0) {
                        _root.saveDJUrl = _local3[_local2];
                    } else {
                        _root.saveDJUrl = (_root.saveDJUrl + "|||") + _local3[_local2];
                    }
                    _local2++;
                }
            } else {
                _root.saveDJUrl = (((((((_root.saveDJUrl + "|||") + DJid) + ",,,") + DJUrl) + ",,,") + DJserver) + ",,,") + DJyz;
            }
        }
        saveDJpath_so.data.saveDJUrl = _root.saveDJUrl;
    }
    function ifLoadDJpath(T_DJid, T_Serveri, T_DJyz) {
        var _local4 = new Array();
        _local4 = _root.saveDJUrl.split("|||");
        var _local3 = 0;
        while (_local3 < _local4.length) {
            var _local2 = new Array();
            _local2 = _local4[_local3].split(",,,");
            if (((_local2[0] == T_DJid) && (_local2[2] == T_Serveri)) && (_local2[3] == T_DJyz)) {
                trace("\u627E\u5230\u5DF2\u64AD\u653E\u8FC7\u7684DJ\u8DEF\u5F84");
                return(_local2[1]);
            }
            _local3++;
        }
        return(0);
    }
    function checkLinkURL(txt) {
        var _local1 = txt;
        _local1 = _local1.split("n").join("10");
        _local1 = _local1.split("h").join("0");
        _local1 = _local1.split("s").join("1");
        _local1 = _local1.split("d").join("2");
        _local1 = _local1.split("y").join("3");
        _local1 = _local1.split("e").join("4");
        _local1 = _local1.split("q").join("5");
        _local1 = _local1.split("w").join("6");
        _local1 = _local1.split("k").join("7");
        _local1 = _local1.split("l").join("8");
        _local1 = _local1.split("g").join("9");
        return(_local1);
    }
    function TingGeSave() {
        myTingGe_so.data.LStingString = LStingGeArray;
    }
    function TingGeRead() {
        LStingGeArray = myTingGe_so.data.LStingString;
    }
    function tingGe(txt) {
        if ((LStingGeArray == "") or (LStingGeArray == undefined)) {
            LStingGeArray = txt;
        } else {
            LStingGeArray = (txt + "|||") + LStingGeArray;
        }
        TingGeSave();
    }
    function ifLStingGe(M_id) {
        var _local2 = new Array();
        _local2 = LStingGeArray.split("|||");
        i = 0;
        while (i < _local2.length) {
            var _local1 = new Array();
            _local1 = _local2[i].split(",,,");
            if (_local1[0] == M_id) {
                return(1);
            }
            i++;
        }
        return(0);
    }
    function playServerPath() {
        _root.playServerURL1 = "http://a64-1.jyw8.com:8080/";
        _root.playServerURL2 = "http://a64-2.jyw8.com:8080/";
        _root.playServerURL3 = "http://a64-3.jyw8.com:8080/";
        _root.playServerURL4 = "http://a64-4.jyw8.com:8080/";
        _root.playServerURL5 = "http://a64-5.jyw8.com:8080/";
        _root.playServerURL6 = "http://a64-6.jyw8.com:8080/";
        _root.playServerURL7 = "http://a64-7.jyw8.com:8080/";
        _root.playServerURL8 = "http://a64-8.jyw8.com:8080/";
        _root.playServerURL9 = "http://a64-9.jyw8.com:8080/";
        _root.playServerURL10 = "http://a64-10.jyw8.com:8080/";
        _root.playServerURL11 = "http://a64-11.jyw8.com:8080/";
        _root.playServerURL12 = "http://a64-12.jyw8.com:8080/";
        _root.playServerURL13 = "http://a64-13.jyw8.com:8080/";
        _root.playServerURL14 = "http://a64-14.jyw8.com:8080/";
        _root.playServerURL15 = "http://a64-15.jyw8.com:8080/";
        _root.playServerURL16 = "http://a64-16.jyw8.com:8080/";
        _root.playServerURL17 = "http://a64-17.jyw8.com:8080/";
        _root.playServerURL18 = "http://a64-18.jyw8.com:8080/";
        _root.playServerURL19 = "http://a64-19.jyw8.com:8080/";
        _root.playServerURL20 = "http://a64-20.jyw8.com:8080/";
    }
    function reloadCS() {
        var load_mp3Path = new LoadVars();
        load_mp3Path.onLoad = function (success) {
            if (success) {
                if (load_mp3Path.cs == "ok") {
                    _root.jiamiok = true;
                }
            }
        };
        var _local2 = new LoadVars();
        _local2.jiami = _root.jiami;
        _local2.sendAndLoad((_root.DJ_Path + "loadmp3CS.asp?t=") + _root.csloadSession_mc.onlineTime, load_mp3Path, "POST");
    }
    function checkVote(mID) {
        T_voteID = new String(VoteID);
        return(T_voteID.lastIndexOf(mID));
    }
    function saveVoteID(mID) {
        saveVote_so.data.VoteID = mID;
    }
    function checkRed5NoPlay(txt) {
        var _local4 = "DJ\u963F\u5CB3|||MC\u4F20\u5947|||\u6D77\u6E2F\u97F3\u6A02\u4FF1\u6A02\u90E8";
        var _local2 = new Array();
        _local2 = _local4.split("|||");
        i = 0;
        while (i < _local2.length) {
            if (_local2[i] == txt) {
                return(1);
            }
            i++;
        }
        return(0);
    }
    _global.style.setStyle("color", 8026489);
    _global.style.setStyle("fontSize", 12);
    _global.style.setStyle("rollOverColor", 10592679);
    _global.style.setStyle("textRollOverColor", 16777215);
    _global.style.setStyle("selectionColor", 16751104);
    _global.style.setStyle("textSelectedColor", 16777215);
    _root.DJtype = id;
    _root.playServerURL_I = 1;
    _root.ifPlayStop = false;
    _root.autoLogin = true;
    _root.HYname = "";
    _root.playZL = "64k";
    var empiremue1 = new ContextMenu();
    empiremue1.hideBuiltInItems();
    empiremue1.customItems.push(new ContextMenuItem("\u9AD8\u97F3\u8D28DJ\u97F3\u4E50\u76D2", openHome));
    _root.menu = empiremue1;
    _root.loopPlay = 0;
    loadMP3 = "";
    _root.saveLoadMp3ID = new Array();
    _root.saveLoadMp3Data = new Array();
    _root.tingWanTime = 0;
    _root.tingWanZTime = 0;
    _root.tingWan_addHYJF = 0;
    _root.tingWan_DJcount = 0;
    _root.PlayDJcount = 0;
    var saveDJpath_so = SharedObject.getLocal("DJURL");
    saveDJpath_so.data.highScore = new Number();
    _root.saveDJUrl = saveDJpath_so.data.saveDJUrl;
    _root.DJpathReload = false;
    _root.LStingGeArray = "";
    var myTingGe_so = SharedObject.getLocal("LStingGe");
    myTingGe_so.data.highScore = new Number();
    TingGeRead();
    playServerPath();
    _root.fangDao = 0;
    _root.jiami = "djbox2013";
    _root.jiamiok = false;
    _root.uplookcountID = "";
    VoteID = "";
    var today_date = new Date();
    thisDay = today_date.getDate();
    var saveVote_so = SharedObject.getLocal("VoteID");
    saveVote_so.data.highScore = new Number();
    VoteID = saveVote_so.data.VoteID;
    VoteDate = saveVote_so.data.VoteDate;
    if (VoteDate == thisDay) {
    } else {
        saveVote_so.data.VoteDate = thisDay;
        saveVote_so.data.VoteID = "";
        VoteID = "";
    }
    _root.red5Noplay = false;

﻿
//----------------------------------------------------------------------
//Instance of Symbol 338 MovieClip "playHQ_mc" in Frame 2
//----------------------------------------------------------------------
onClipEvent (load) {
    if (_root.HYVIPerr_show == 1) {
        this._visible = 0;
    } else if (int(_root.vip) == -1) {
        this._visible = 1;
        this.errTitle.text = "\u60A8\u7684VIP\u4F1A\u5458\u5DF2\u8FC7\u671F";
    } else if ((int(_root.vip) == 1) && (int(_root.HYvipDate_day) <= 30)) {
        if ((_root.HYvipDate_day == undefined) || (_root.HYvipDate_day == "")) {
            this._visible = 0;
        } else {
            this._visible = 1;
            this.errTitle.text = ("\u60A8\u7684VIP\u4F1A\u5458\u8FD8\u5269\u4E0B" + _root.HYvipDate_day) + "\u5929";
        }
    } else {
        this._visible = 0;
    }
}
﻿
//----------------------------------------------------------------------
//Symbol 20 MovieClip Frame 1
//----------------------------------------------------------------------
    #initclip 45
    Object.registerClass("FocusManager", mx.managers.FocusManager);
    if (_root.focusManager == undefined) {
        _root.createClassObject(mx.managers.FocusManager, "focusManager", mx.managers.DepthManager.highestDepth--);
    }
    #endinitclip

﻿
//----------------------------------------------------------------------
//Symbol 295 MovieClip Frame 5
//----------------------------------------------------------------------
    stop();

﻿
//----------------------------------------------------------------------
//Symbol 129 MovieClip [__Packages.mx.core.ext.UIComponentExtensions] Frame 0
//----------------------------------------------------------------------
    class mx.core.ext.UIComponentExtensions
    {
        function UIComponentExtensions () {
        }
        static function Extensions() {
            if (bExtended == true) {
                return(true);
            }
            bExtended = true;
            TextField.prototype.setFocus = function () {
                Selection.setFocus(this);
            };
            TextField.prototype.onSetFocus = function (oldFocus) {
                if (this.tabEnabled != false) {
                    if (this.getFocusManager().bDrawFocus) {
                        this.drawFocus(true);
                    }
                }
            };
            TextField.prototype.onKillFocus = function (oldFocus) {
                if (this.tabEnabled != false) {
                    this.drawFocus(false);
                }
            };
            TextField.prototype.drawFocus = mx.core.UIComponent.prototype.drawFocus;
            TextField.prototype.getFocusManager = mx.core.UIComponent.prototype.getFocusManager;
            mx.managers.OverlappedWindows.enableOverlappedWindows();
            mx.styles.CSSSetStyle.enableRunTimeCSS();
            mx.managers.FocusManager.enableFocusManagement();
        }
        static var bExtended = false;
        static var UIComponentExtended = Extensions();
        static var UIComponentDependency = mx.core.UIComponent;
        static var FocusManagerDependency = mx.managers.FocusManager;
        static var OverlappedWindowsDependency = mx.managers.OverlappedWindows;
    }
﻿
//----------------------------------------------------------------------
//Symbol 108 MovieClip [__Packages.mx.styles.StyleManager] Frame 0
//----------------------------------------------------------------------
    class mx.styles.StyleManager
    {
        function StyleManager () {
        }
        static function registerInheritingStyle(styleName) {
            inheritingStyles[styleName] = true;
        }
        static function isInheritingStyle(styleName) {
            return(inheritingStyles[styleName] == true);
        }
        static function registerColorStyle(styleName) {
            colorStyles[styleName] = true;
        }
        static function isColorStyle(styleName) {
            return(colorStyles[styleName] == true);
        }
        static function registerColorName(colorName, colorValue) {
            colorNames[colorName] = colorValue;
        }
        static function isColorName(colorName) {
            return(colorNames[colorName] != undefined);
        }
        static function getColorName(colorName) {
            return(colorNames[colorName]);
        }
        static var inheritingStyles = {color:true, direction:true, fontFamily:true, fontSize:true, fontStyle:true, fontWeight:true, textAlign:true, textIndent:true};
        static var colorStyles = {barColor:true, trackColor:true, borderColor:true, buttonColor:true, color:true, dateHeaderColor:true, dateRollOverColor:true, disabledColor:true, fillColor:true, highlightColor:true, scrollTrackColor:true, selectedDateColor:true, shadowColor:true, strokeColor:true, symbolBackgroundColor:true, symbolBackgroundDisabledColor:true, symbolBackgroundPressedColor:true, symbolColor:true, symbolDisabledColor:true, themeColor:true, todayIndicatorColor:true, shadowCapColor:true, borderCapColor:true, focusColor:true};
        static var colorNames = {black:0, white:16777215, red:16711680, green:65280, blue:255, magenta:16711935, yellow:16776960, cyan:65535, haloGreen:8453965, haloBlue:2881013, haloOrange:16761344};
        static var TextFormatStyleProps = {font:true, size:true, color:true, leftMargin:false, rightMargin:false, italic:true, bold:true, align:true, indent:true, underline:false, embedFonts:false};
        static var TextStyleMap = {textAlign:true, fontWeight:true, color:true, fontFamily:true, textIndent:true, fontStyle:true, lineHeight:true, marginLeft:true, marginRight:true, fontSize:true, textDecoration:true, embedFonts:true};
    }
﻿
//----------------------------------------------------------------------
//Symbol 127 MovieClip [__Packages.mx.managers.OverlappedWindows] Frame 0
//----------------------------------------------------------------------
    class mx.managers.OverlappedWindows
    {
        function OverlappedWindows () {
        }
        static function checkIdle(Void) {
            if (mx.managers.SystemManager.idleFrames > 10) {
                mx.managers.SystemManager.dispatchEvent({type:"idle"});
            } else {
                mx.managers.SystemManager.idleFrames++;
            }
        }
        static function __addEventListener(e, o, l) {
            if (e == "idle") {
                if (mx.managers.SystemManager.interval == undefined) {
                    mx.managers.SystemManager.interval = setInterval(mx.managers.SystemManager.checkIdle, 100);
                }
            }
            mx.managers.SystemManager._xAddEventListener(e, o, l);
        }
        static function __removeEventListener(e, o, l) {
            if (e == "idle") {
                if (mx.managers.SystemManager._xRemoveEventListener(e, o, l) == 0) {
                    clearInterval(mx.managers.SystemManager.interval);
                }
            } else {
                mx.managers.SystemManager._xRemoveEventListener(e, o, l);
            }
        }
        static function onMouseDown(Void) {
            mx.managers.SystemManager.idleFrames = 0;
            mx.managers.SystemManager.isMouseDown = true;
            var _local5 = _root;
            var _local3;
            var _local8 = _root._xmouse;
            var _local7 = _root._ymouse;
            if (mx.managers.SystemManager.form.modalWindow == undefined) {
                if (mx.managers.SystemManager.forms.length > 1) {
                    var _local6 = mx.managers.SystemManager.forms.length;
                    var _local4;
                    _local4 = 0;
                    while (_local4 < _local6) {
                        var _local2 = mx.managers.SystemManager.forms[_local4];
                        if (_local2._visible) {
                            if (_local2.hitTest(_local8, _local7)) {
                                if (_local3 == undefined) {
                                    _local3 = _local2.getDepth();
                                    _local5 = _local2;
                                } else if (_local3 < _local2.getDepth()) {
                                    _local3 = _local2.getDepth();
                                    _local5 = _local2;
                                }
                            }
                        }
                        _local4++;
                    }
                    if (_local5 != mx.managers.SystemManager.form) {
                        mx.managers.SystemManager.activate(_local5);
                    }
                }
            }
            var _local9 = mx.managers.SystemManager.form;
            _local9.focusManager._onMouseDown();
        }
        static function onMouseMove(Void) {
            mx.managers.SystemManager.idleFrames = 0;
        }
        static function onMouseUp(Void) {
            mx.managers.SystemManager.isMouseDown = false;
            mx.managers.SystemManager.idleFrames = 0;
        }
        static function activate(f) {
            if (mx.managers.SystemManager.form != undefined) {
                if ((mx.managers.SystemManager.form != f) && (mx.managers.SystemManager.forms.length > 1)) {
                    var _local1 = mx.managers.SystemManager.form;
                    _local1.focusManager.deactivate();
                }
            }
            mx.managers.SystemManager.form = f;
            f.focusManager.activate();
        }
        static function deactivate(f) {
            if (mx.managers.SystemManager.form != undefined) {
                if ((mx.managers.SystemManager.form == f) && (mx.managers.SystemManager.forms.length > 1)) {
                    var _local5 = mx.managers.SystemManager.form;
                    _local5.focusManager.deactivate();
                    var _local3 = mx.managers.SystemManager.forms.length;
                    var _local1;
                    var _local2;
                    _local1 = 0;
                    while (_local1 < _local3) {
                        if (mx.managers.SystemManager.forms[_local1] == f) {
                            _local1 = _local1 + 1;
                            while (_local1 < _local3) {
                                if (mx.managers.SystemManager.forms[_local1]._visible == true) {
                                    _local2 = mx.managers.SystemManager.forms[_local1];
                                }
                                _local1++;
                            }
                            mx.managers.SystemManager.form = _local2;
                            break;
                        }
                        if (mx.managers.SystemManager.forms[_local1]._visible == true) {
                            _local2 = mx.managers.SystemManager.forms[_local1];
                        }
                        _local1++;
                    }
                    _local5 = mx.managers.SystemManager.form;
                    _local5.focusManager.activate();
                }
            }
        }
        static function addFocusManager(f) {
            mx.managers.SystemManager.forms.push(f);
            mx.managers.SystemManager.activate(f);
        }
        static function removeFocusManager(f) {
            var _local3 = mx.managers.SystemManager.forms.length;
            var _local1;
            _local1 = 0;
            while (_local1 < _local3) {
                if (mx.managers.SystemManager.forms[_local1] == f) {
                    if (mx.managers.SystemManager.form == f) {
                        mx.managers.SystemManager.deactivate(f);
                    }
                    mx.managers.SystemManager.forms.splice(_local1, 1);
                    return(undefined);
                }
                _local1++;
            }
        }
        static function enableOverlappedWindows() {
            if (!initialized) {
                initialized = true;
                mx.managers.SystemManager.checkIdle = checkIdle;
                mx.managers.SystemManager.__addEventListener = __addEventListener;
                mx.managers.SystemManager.__removeEventListener = __removeEventListener;
                mx.managers.SystemManager.onMouseDown = onMouseDown;
                mx.managers.SystemManager.onMouseMove = onMouseMove;
                mx.managers.SystemManager.onMouseUp = onMouseUp;
                mx.managers.SystemManager.activate = activate;
                mx.managers.SystemManager.deactivate = deactivate;
                mx.managers.SystemManager.addFocusManager = addFocusManager;
                mx.managers.SystemManager.removeFocusManager = removeFocusManager;
            }
        }
        static var initialized = false;
        static var SystemManagerDependency = mx.managers.SystemManager;
    }
﻿
//----------------------------------------------------------------------
//Symbol 254 MovieClip Frame 2
//----------------------------------------------------------------------
    stop();
    _parent.cuoPan1.gotoAndPlay("\u505C\u6B62");
    _parent.cuoPan2.gotoAndPlay("\u505C\u6B62");

﻿
//----------------------------------------------------------------------
//Symbol 237 Button
//----------------------------------------------------------------------
on (release) {
    getURL (((_root.webApp + "fenXiang.asp?id=") + _root.playerMusic_ID) + "&FXtype=renren", "_blank");
    _root.openURL(((_root.webApp + "fenXiang.asp?id=") + _root.playerMusic_ID) + "&FXtype=renren");
}
﻿
//----------------------------------------------------------------------
//Symbol 305 MovieClip Frame 25
//----------------------------------------------------------------------
    stop();
    infoTxt.htmlText = (((((("\u64AD\u653E\u65F6\u957F " + _root.music_lookCount) + "<br>") + "\u4E0A\u4F20\u65E5\u671F ") + _root.thisDate) + "<br>") + "\u4E0A\u4F20\u4F1A\u5458 ") + _root.this_up_HYname;

﻿
//----------------------------------------------------------------------
//Instance of Symbol 222 MovieClip in Symbol 246 MovieClip Frame 6
//----------------------------------------------------------------------
on (release) {
    this.gotoAndPlay("\u590D\u5236");
    System.setClipboard(((_root.wwwPath + "play/") + _root.playerMusic_ID) + ".htm");
}
﻿
//----------------------------------------------------------------------
//Symbol 337 Button
//----------------------------------------------------------------------
on (release) {
    getURL ("http://box.djyule.com/DJbox_setup.exe", "_blank");
    _parent.playHQ_mc._visible = 0;
}
﻿
//----------------------------------------------------------------------
//Instance of Symbol 295 MovieClip in Symbol 320 MovieClip Frame 4
//----------------------------------------------------------------------
onClipEvent (load) {
    if (int(_root.playerTuiJian) == 10) {
        this.gotoAndStop("dujia");
    } else if (int(_root.playerTuiJian) == 9) {
        this.gotoAndStop("yuan");
    } else if (int(_root.playerTuiJian) == 8) {
        this.gotoAndStop("shai_1");
    } else if (int(_root.playerTuiJian) == 7) {
        this.gotoAndStop("shai_2");
    } else if (int(_root.playerTuiJian) == 6) {
        this.gotoAndStop("shai_3");
    } else if (int(_root.playerTuiJian) == 5) {
        this.gotoAndStop("shai_4");
    } else if (int(_root.playerTuiJian) == 4) {
        this.gotoAndStop("shai_top20");
    } else if (int(_root.playerTuiJian) == 3) {
        this.gotoAndStop("shai_mc");
    } else if (int(_root.playerTuiJian) == 2) {
        this.gotoAndStop("jing_mc");
    } else if (int(_root.playerTuiJian) == 1) {
        this.gotoAndStop("jian_mc");
    }
}
﻿
//----------------------------------------------------------------------
//Instance of Symbol 37 MovieClip [SimpleButton] in Symbol 41 MovieClip [Button] Frame 2
//----------------------------------------------------------------------
//component parameters
onClipEvent (initialize) {
    selected = false;
    toggle = false;
    enabled = true;
    visible = true;
    minHeight = 0;
    minWidth = 0;
}
﻿
//----------------------------------------------------------------------
//Instance of Symbol 291 MovieClip in Symbol 295 MovieClip Frame 10
//----------------------------------------------------------------------
on (rollOver) {
    _parent.jing_mc.gotoAndPlay("\u5F00\u59CB");
    _parent.jing_mc.intotext = "\u539F\u521B\u4F5C\u54C1";
}
on (release) {
    _root.R_list_mc.R_menu.reloadDJtype("yuanChuang", "\u539F\u521BDJ\u4F5C\u54C1");
}
﻿
//----------------------------------------------------------------------
//Symbol 8 MovieClip [__Packages.mx.controls.listclasses.ScrollSelectList] Frame 0
//----------------------------------------------------------------------
    class mx.controls.listclasses.ScrollSelectList extends mx.core.ScrollView
    {
        var invLayoutContent, rows, topRowZ, listContent, __dataProvider, __vPosition, tW, layoutX, layoutY, tH, invRowHeight, invalidate, __height, invUpdateControl, __cellRenderer, __labelFunction, __iconField, __iconFunction, getLength, baseRowZ, lastPosition, propertyTable, isSelected, wasKeySelected, changeFlag, clearSelected, selectItem, lastSelected, dispatchEvent, dragScrolling, _ymouse, scrollInterval, isPressed, onMouseUp, getSelectedIndex, enabled, tabEnabled, tabChildren, createEmptyMovieClip, border_mc;
        function ScrollSelectList () {
            super();
        }
        function layoutContent(x, y, w, h) {
            delete invLayoutContent;
            var _local4 = Math.ceil(h / __rowHeight);
            roundUp = (h % __rowHeight) != 0;
            var _local12 = _local4 - __rowCount;
            if (_local12 < 0) {
                var _local3 = _local4;
                while (_local3 < __rowCount) {
                    rows[_local3].removeMovieClip();
                    delete rows[_local3];
                    _local3++;
                }
                topRowZ = topRowZ + _local12;
            } else if (_local12 > 0) {
                if (rows == undefined) {
                    rows = new Array();
                }
                var _local3 = __rowCount;
                while (_local3 < _local4) {
                    var _local2 = (rows[_local3] = listContent.createObject(__rowRenderer, "listRow" + (topRowZ++), topRowZ, {owner:this, styleName:this, rowIndex:_local3}));
                    _local2._x = x;
                    _local2._y = Math.round((_local3 * __rowHeight) + y);
                    _local2.setSize(w, __rowHeight);
                    _local2.drawRow(__dataProvider.getItemAt(__vPosition + _local3), getStateAt(__vPosition + _local3));
                    _local2.lastY = _local2._y;
                    _local3++;
                }
            }
            if (w != tW) {
                var _local11 = ((_local12 > 0) ? (__rowCount) : (_local4));
                var _local3 = 0;
                while (_local3 < _local11) {
                    rows[_local3].setSize(w, __rowHeight);
                    _local3++;
                }
            }
            if ((layoutX != x) || (layoutY != y)) {
                var _local3 = 0;
                while (_local3 < _local4) {
                    rows[_local3]._x = x;
                    rows[_local3]._y = Math.round((_local3 * __rowHeight) + y);
                    _local3++;
                }
            }
            __rowCount = _local4;
            layoutX = x;
            layoutY = y;
            tW = w;
            tH = h;
        }
        function getRowHeight(Void) {
            return(__rowHeight);
        }
        function setRowHeight(v) {
            __rowHeight = v;
            invRowHeight = true;
            invalidate();
        }
        function get rowHeight() {
            return(getRowHeight());
        }
        function set rowHeight(w) {
            setRowHeight(w);
            //return(rowHeight);
        }
        function setRowCount(v) {
            __rowCount = v;
        }
        function getRowCount(Void) {
            var _local2 = ((__rowCount == 0) ? (Math.ceil(__height / __rowHeight)) : (__rowCount));
            return(_local2);
        }
        function get rowCount() {
            return(getRowCount());
        }
        function set rowCount(w) {
            setRowCount(w);
            //return(rowCount);
        }
        function setEnabled(v) {
            super.setEnabled(v);
            invUpdateControl = true;
            invalidate();
        }
        function setCellRenderer(cR) {
            __cellRenderer = cR;
            var _local2 = 0;
            while (_local2 < rows.length) {
                rows[_local2].setCellRenderer(true);
                _local2++;
            }
            invUpdateControl = true;
            invalidate();
        }
        function set cellRenderer(cR) {
            setCellRenderer(cR);
            //return(cellRenderer);
        }
        function get cellRenderer() {
            return(__cellRenderer);
        }
        function set labelField(field) {
            setLabelField(field);
            //return(labelField);
        }
        function setLabelField(field) {
            __labelField = field;
            invUpdateControl = true;
            invalidate();
        }
        function get labelField() {
            return(__labelField);
        }
        function set labelFunction(func) {
            setLabelFunction(func);
            //return(labelFunction);
        }
        function setLabelFunction(func) {
            __labelFunction = func;
            invUpdateControl = true;
            invalidate();
        }
        function get labelFunction() {
            return(__labelFunction);
        }
        function set iconField(field) {
            setIconField(field);
            //return(iconField);
        }
        function setIconField(field) {
            __iconField = field;
            invUpdateControl = true;
            invalidate();
        }
        function get iconField() {
            return(__iconField);
        }
        function set iconFunction(func) {
            setIconFunction(func);
            //return(iconFunction);
        }
        function setIconFunction(func) {
            __iconFunction = func;
            invUpdateControl = true;
            invalidate();
        }
        function get iconFunction() {
            return(__iconFunction);
        }
        function setVPosition(pos) {
            if (pos < 0) {
                return(undefined);
            }
            if ((pos > 0) && (pos > ((getLength() - __rowCount) + roundUp))) {
                return(undefined);
            }
            var _local8 = pos - __vPosition;
            if (_local8 == 0) {
                return(undefined);
            }
            __vPosition = pos;
            var _local10 = _local8 > 0;
            _local8 = Math.abs(_local8);
            if (_local8 >= __rowCount) {
                updateControl();
            } else {
                var _local4 = new Array();
                var _local9 = __rowCount - _local8;
                var _local12 = _local8 * __rowHeight;
                var _local11 = _local9 * __rowHeight;
                var _local6 = (_local10 ? 1 : -1);
                var _local3 = 0;
                while (_local3 < __rowCount) {
                    if (((_local3 < _local8) && (_local10)) || ((_local3 >= _local9) && (!_local10))) {
                        rows[_local3]._y = rows[_local3]._y + Math.round(_local6 * _local11);
                        var _local5 = _local3 + (_local6 * _local9);
                        var _local7 = __vPosition + _local5;
                        _local4[_local5] = rows[_local3];
                        _local4[_local5].rowIndex = _local5;
                        _local4[_local5].drawRow(__dataProvider.getItemAt(_local7), getStateAt(_local7), false);
                    } else {
                        rows[_local3]._y = rows[_local3]._y - Math.round(_local6 * _local12);
                        var _local5 = _local3 - (_local6 * _local8);
                        _local4[_local5] = rows[_local3];
                        _local4[_local5].rowIndex = _local5;
                    }
                    _local3++;
                }
                rows = _local4;
                _local3 = 0;
                while (_local3 < __rowCount) {
                    rows[_local3].swapDepths(baseRowZ + _local3);
                    _local3++;
                }
            }
            lastPosition = pos;
            super.setVPosition(pos);
        }
        function setPropertiesAt(index, obj) {
            var _local2 = __dataProvider.getItemID(index);
            if (_local2 == undefined) {
                return(undefined);
            }
            if (propertyTable == undefined) {
                propertyTable = new Object();
            }
            propertyTable[_local2] = obj;
            rows[index - __vPosition].drawRow(__dataProvider.getItemAt(index), getStateAt(index));
        }
        function getPropertiesAt(index) {
            var _local2 = __dataProvider.getItemID(index);
            if (_local2 == undefined) {
                return(undefined);
            }
            return(propertyTable[_local2]);
        }
        function getPropertiesOf(obj) {
            var _local2 = obj.getID();
            if (_local2 == undefined) {
                return(undefined);
            }
            return(propertyTable[_local2]);
        }
        function getStyle(styleProp) {
            var _local2 = super.getStyle(styleProp);
            var _local3 = mx.styles.StyleManager.colorNames[_local2];
            if (_local3 != undefined) {
                _local2 = _local3;
            }
            return(_local2);
        }
        function updateControl(Void) {
            var _local2 = 0;
            while (_local2 < __rowCount) {
                rows[_local2].drawRow(__dataProvider.getItemAt(_local2 + __vPosition), getStateAt(_local2 + __vPosition));
                _local2++;
            }
            delete invUpdateControl;
        }
        function getStateAt(index) {
            return((isSelected(index) ? "selected" : "normal"));
        }
        function selectRow(rowIndex, transition, allowChangeEvent) {
            if (!selectable) {
                return(undefined);
            }
            var _local3 = __vPosition + rowIndex;
            var _local8 = __dataProvider.getItemAt(_local3);
            var _local5 = rows[rowIndex];
            if (_local8 == undefined) {
                return(undefined);
            }
            if (transition == undefined) {
                transition = true;
            }
            if (allowChangeEvent == undefined) {
                allowChangeEvent = wasKeySelected;
            }
            changeFlag = true;
            if (((!multipleSelection) && (!Key.isDown(17))) || ((!Key.isDown(16)) && (!Key.isDown(17)))) {
                clearSelected(transition);
                selectItem(_local3, true);
                lastSelected = _local3;
                _local5.drawRow(_local5.item, getStateAt(_local3), transition);
            } else if (Key.isDown(16) && (multipleSelection)) {
                if (lastSelected == undefined) {
                    lastSelected = _local3;
                }
                var _local4 = ((lastSelected < _local3) ? 1 : -1);
                clearSelected(false);
                var _local2 = lastSelected;
                while (_local2 != _local3) {
                    selectItem(_local2, true);
                    if ((_local2 >= __vPosition) && (_local2 < (__vPosition + __rowCount))) {
                        rows[_local2 - __vPosition].drawRow(rows[_local2 - __vPosition].item, "selected", false);
                    }
                    _local2 = _local2 + _local4;
                }
                selectItem(_local3, true);
                _local5.drawRow(_local5.item, "selected", transition);
            } else if (Key.isDown(17)) {
                var _local7 = isSelected(_local3);
                if ((!multipleSelection) || (wasKeySelected)) {
                    clearSelected(transition);
                }
                if (!((!multipleSelection) && (_local7))) {
                    selectItem(_local3, !_local7);
                    var _local9 = ((!_local7) ? "selected" : "normal");
                    _local5.drawRow(_local5.item, _local9, transition);
                }
                lastSelected = _local3;
            }
            if (allowChangeEvent) {
                dispatchEvent({type:"change"});
            }
            delete wasKeySelected;
        }
        function dragScroll(Void) {
            clearInterval(dragScrolling);
            if (_ymouse < 0) {
                setVPosition(__vPosition - 1);
                selectRow(0, false);
                var _local2 = Math.min((-_ymouse) - 30, 0);
                scrollInterval = (((0.593 * _local2) * _local2) + 1) + minScrollInterval;
                dragScrolling = setInterval(this, "dragScroll", scrollInterval);
                dispatchEvent({type:"scroll", direction:"vertical", position:__vPosition});
            } else if (_ymouse > __height) {
                var _local3 = __vPosition;
                setVPosition(__vPosition + 1);
                if (_local3 != __vPosition) {
                    selectRow((__rowCount - 1) - roundUp, false);
                }
                var _local2 = Math.min((_ymouse - __height) - 30, 0);
                scrollInterval = (((0.593 * _local2) * _local2) + 1) + minScrollInterval;
                dragScrolling = setInterval(this, "dragScroll", scrollInterval);
                dispatchEvent({type:"scroll", direction:"vertical", position:__vPosition});
            } else {
                dragScrolling = setInterval(this, "dragScroll", 15);
            }
            updateAfterEvent();
        }
        function __onMouseUp(Void) {
            clearInterval(dragScrolling);
            delete dragScrolling;
            delete dragScrolling;
            delete isPressed;
            delete onMouseUp;
            if (!selectable) {
                return(undefined);
            }
            if (changeFlag) {
                dispatchEvent({type:"change"});
            }
            delete changeFlag;
        }
        function moveSelBy(incr) {
            if (!selectable) {
                setVPosition(__vPosition + incr);
                return(undefined);
            }
            var _local3 = getSelectedIndex();
            if (_local3 == undefined) {
                _local3 = -1;
            }
            var _local2 = _local3 + incr;
            _local2 = Math.max(0, _local2);
            _local2 = Math.min(getLength() - 1, _local2);
            if (_local2 == _local3) {
                return(undefined);
            }
            if ((_local3 < __vPosition) || (_local3 >= (__vPosition + __rowCount))) {
                setVPosition(_local3);
            }
            if ((_local2 >= ((__vPosition + __rowCount) - roundUp)) || (_local2 < __vPosition)) {
                setVPosition(__vPosition + incr);
            }
            wasKeySelected = true;
            selectRow(_local2 - __vPosition, false);
        }
        function keyDown(e) {
            if (selectable) {
                if (findInputText()) {
                    return(undefined);
                }
            }
            if (e.code == 40) {
                moveSelBy(1);
            } else if (e.code == 38) {
                moveSelBy(-1);
            } else if (e.code == 34) {
                if (selectable) {
                    var _local3 = getSelectedIndex();
                    if (_local3 == undefined) {
                        _local3 = 0;
                    }
                    setVPosition(_local3);
                }
                moveSelBy((__rowCount - 1) - roundUp);
            } else if (e.code == 33) {
                if (selectable) {
                    var _local3 = getSelectedIndex();
                    if (_local3 == undefined) {
                        _local3 = 0;
                    }
                    setVPosition(_local3);
                }
                moveSelBy((1 - __rowCount) + roundUp);
            } else if (e.code == 36) {
                moveSelBy(-__dataProvider.length);
            } else if (e.code == 35) {
                moveSelBy(__dataProvider.length);
            }
        }
        function findInputText(Void) {
            var _local2 = Key.getAscii();
            if ((_local2 >= 33) && (_local2 <= 126)) {
                findString(String.fromCharCode(_local2));
                return(true);
            }
        }
        function findString(str) {
            if (__dataProvider.length == 0) {
                return(undefined);
            }
            var _local4 = getSelectedIndex();
            if (_local4 == undefined) {
                _local4 = 0;
            }
            var _local6 = 0;
            var _local3 = _local4 + 1;
            while (_local3 != _local4) {
                var _local2 = __dataProvider.getItemAt(_local3);
                if (_local2 instanceof XMLNode) {
                    _local2 = _local2.attributes[__labelField];
                } else if (typeof(_local2) != "string") {
                    _local2 = String(_local2[__labelField]);
                }
                _local2 = _local2.substring(0, str.length);
                if ((str == _local2) || (str.toUpperCase() == _local2.toUpperCase())) {
                    _local6 = _local3 - _local4;
                    break;
                }
                if (_local3 >= (getLength() - 1)) {
                    _local3 = -1;
                }
                _local3++;
            }
            if (_local6 != 0) {
                moveSelBy(_local6);
            }
        }
        function onRowPress(rowIndex) {
            if (!enabled) {
                return(undefined);
            }
            isPressed = true;
            dragScrolling = setInterval(this, "dragScroll", 15);
            onMouseUp = __onMouseUp;
            if (!selectable) {
                return(undefined);
            }
            selectRow(rowIndex);
        }
        function onRowRelease(rowIndex) {
        }
        function onRowRollOver(rowIndex) {
            if (!enabled) {
                return(undefined);
            }
            var _local2 = rows[rowIndex].item;
            if (getStyle("useRollOver") && (_local2 != undefined)) {
                rows[rowIndex].drawRow(_local2, "highlighted", false);
            }
            dispatchEvent({type:"itemRollOver", index:rowIndex + __vPosition});
        }
        function onRowRollOut(rowIndex) {
            if (!enabled) {
                return(undefined);
            }
            if (getStyle("useRollOver")) {
                rows[rowIndex].drawRow(rows[rowIndex].item, getStateAt(rowIndex + __vPosition), false);
            }
            dispatchEvent({type:"itemRollOut", index:rowIndex + __vPosition});
        }
        function onRowDragOver(rowIndex) {
            if (((!enabled) || (isPressed != true)) || (!selectable)) {
                return(undefined);
            }
            if (dropEnabled) {
            } else if (dragScrolling) {
                selectRow(rowIndex, false);
            } else {
                onMouseUp = __onMouseUp;
                onRowPress(rowIndex);
            }
        }
        function onRowDragOut(rowIndex) {
            if (!enabled) {
                return(undefined);
            }
            if (dragEnabled) {
            } else {
                onRowRollOut(rowIndex);
            }
        }
        function init(Void) {
            super.init();
            tabEnabled = true;
            tabChildren = false;
            if (__dataProvider == undefined) {
                __dataProvider = new Array();
                __dataProvider.addEventListener("modelChanged", this);
            }
            baseRowZ = (topRowZ = 10);
        }
        function createChildren(Void) {
            super.createChildren();
            listContent = createEmptyMovieClip("content_mc", CONTENTDEPTH);
            invLayoutContent = true;
            invalidate();
        }
        function draw(Void) {
            if (invRowHeight) {
                delete invRowHeight;
                __rowCount = 0;
                listContent.removeMovieClip();
                listContent = createEmptyMovieClip("content_mc", CONTENTDEPTH);
            }
            if (invUpdateControl) {
                updateControl();
            }
            border_mc.draw();
        }
        function invalidateStyle(propName) {
            if (isRowStyle[propName]) {
                invUpdateControl = true;
                invalidate();
            } else {
                var _local3 = 0;
                while (_local3 < __rowCount) {
                    rows[_local3].invalidateStyle(propName);
                    _local3++;
                }
            }
            super.invalidateStyle(propName);
        }
        static var mixIt1 = mx.controls.listclasses.DataSelector.Initialize(mx.controls.listclasses.ScrollSelectList);
        static var mixIt2 = mx.controls.listclasses.DataProvider.Initialize(Array);
        var CONTENTDEPTH = 100;
        var __hPosition = 0;
        var __rowRenderer = "SelectableRow";
        var __rowHeight = 22;
        var __rowCount = 0;
        var __labelField = "label";
        var minScrollInterval = 30;
        var dropEnabled = false;
        var dragEnabled = false;
        var className = "ScrollSelectList";
        var isRowStyle = {styleName:true, backgroundColor:true, selectionColor:true, rollOverColor:true, selectionDisabledColor:true, backgroundDisabledColor:true, textColor:true, textSelectedColor:true, textRollOverColor:true, textDisabledColor:true, alternatingRowColors:true, defaultIcon:true};
        var roundUp = 0;
        var selectable = true;
        var multipleSelection = false;
    }
﻿
//----------------------------------------------------------------------
//Symbol 305 MovieClip Frame 21
//----------------------------------------------------------------------
﻿
//----------------------------------------------------------------------
//Symbol 39 MovieClip [RectBorder] Frame 1
//----------------------------------------------------------------------
    #initclip 53
    mx.skins.SkinElement.registerElement(mx.skins.RectBorder.symbolName, Object(mx.skins.RectBorder));
    Object.registerClass("RectBorder", mx.skins.halo.RectBorder);
    #endinitclip

    stop();
﻿
//----------------------------------------------------------------------
//Symbol 41 MovieClip [Button] Frame 1
//----------------------------------------------------------------------
    #initclip 55
    Object.registerClass("Button", mx.controls.Button);
    #endinitclip

    stop();

﻿
//----------------------------------------------------------------------
//Symbol 109 MovieClip [__Packages.mx.styles.CSSStyleDeclaration] Frame 0
//----------------------------------------------------------------------
    class mx.styles.CSSStyleDeclaration
    {
        var _tf;
        function CSSStyleDeclaration () {
        }
        function __getTextFormat(tf, bAll) {
            var _local5 = false;
            if (_tf != undefined) {
                var _local2;
                for (_local2 in mx.styles.StyleManager.TextFormatStyleProps) {
                    if (bAll || (mx.styles.StyleManager.TextFormatStyleProps[_local2])) {
                        if (tf[_local2] == undefined) {
                            var _local3 = _tf[_local2];
                            if (_local3 != undefined) {
                                tf[_local2] = _local3;
                            } else {
                                _local5 = true;
                            }
                        }
                    }
                }
            } else {
                _local5 = true;
            }
            return(_local5);
        }
        function getStyle(styleProp) {
            var _local2 = this[styleProp];
            var _local3 = mx.styles.StyleManager.getColorName(_local2);
            return(((_local3 == undefined) ? (_local2) : (_local3)));
        }
        static function classConstruct() {
            mx.styles.CSSTextStyles.addTextStyles(mx.styles.CSSStyleDeclaration.prototype, true);
            return(true);
        }
        static var classConstructed = classConstruct();
        static var CSSTextStylesDependency = mx.styles.CSSTextStyles;
    }
﻿
//----------------------------------------------------------------------
//Symbol 120 MovieClip [__Packages.mx.controls.listclasses.SelectableRow] Frame 0
//----------------------------------------------------------------------
    class mx.controls.listclasses.SelectableRow extends mx.core.UIComponent
    {
        var __height, cell, owner, rowIndex, icon_mc, createObject, __width, backGround, highlight, highlightColor, createLabel, createClassObject, listOwner, tabEnabled, item, createEmptyMovieClip, drawRect, isChangedToSelected, bGTween, grandOwner;
        function SelectableRow () {
            super();
        }
        function setValue(itmObj, state) {
            var _local7 = __height;
            var _local2 = cell;
            var _local5 = owner;
            var _local8 = itemToString(itmObj);
            if (_local2.getValue() != _local8) {
                _local2.setValue(_local8, itmObj, state);
            }
            var _local4 = _local5.getPropertiesAt(rowIndex + _local5.__vPosition).icon;
            if (_local4 == undefined) {
                _local4 = _local5.__iconFunction(itmObj);
                if (_local4 == undefined) {
                    _local4 = itmObj[_local5.__iconField];
                    if (_local4 == undefined) {
                        _local4 = _local5.getStyle("defaultIcon");
                    }
                }
            }
            var _local3 = icon_mc;
            if ((_local4 != undefined) && (itmObj != undefined)) {
                _local3 = createObject(_local4, "icon_mc", 20);
                _local3._x = 2;
                _local3._y = (_local7 - _local3._height) / 2;
                _local2._x = 4 + _local3._width;
            } else {
                _local3.removeMovieClip();
                _local2._x = 2;
            }
            var _local9 = ((_local3 == undefined) ? 0 : (_local3._width));
            _local2.setSize(__width - _local9, Math.min(_local7, _local2.getPreferredHeight()));
            _local2._y = (_local7 - _local2._height) / 2;
        }
        function size(Void) {
            var _local3 = backGround;
            var _local2 = cell;
            var _local4 = __height;
            var _local5 = __width;
            var _local6 = ((icon_mc == undefined) ? 0 : (icon_mc._width));
            _local2.setSize(_local5 - _local6, Math.min(_local4, _local2.getPreferredHeight()));
            _local2._y = (_local4 - _local2._height) / 2;
            icon_mc._y = (_local4 - icon_mc._height) / 2;
            _local3._x = 0;
            _local3._width = _local5;
            _local3._height = _local4;
            drawRowFill(_local3, normalColor);
            drawRowFill(highlight, highlightColor);
        }
        function setCellRenderer(forceSizing) {
            var _local3 = owner.__cellRenderer;
            var _local4;
            if (cell != undefined) {
                _local4 = cell._x;
                cell.removeMovieClip();
                cell.removeTextField();
            }
            var _local2;
            if (_local3 == undefined) {
                _local2 = (cell = createLabel("cll", 0, {styleName:this}));
                _local2.styleName = owner;
                _local2.selectable = false;
                _local2.tabEnabled = false;
                _local2.background = false;
                _local2.border = false;
            } else if (typeof(_local3) == "string") {
                _local2 = (cell = createObject(_local3, "cll", 0, {styleName:this}));
            } else {
                _local2 = (cell = createClassObject(_local3, "cll", 0, {styleName:this}));
            }
            _local2.owner = this;
            _local2.listOwner = owner;
            _local2.getCellIndex = getCellIndex;
            _local2.getDataLabel = getDataLabel;
            if (_local4 != undefined) {
                _local2._x = _local4;
            }
            if (forceSizing) {
                size();
            }
        }
        function getCellIndex(Void) {
            return({columnIndex:0, itemIndex:owner.rowIndex + listOwner.__vPosition});
        }
        function getDataLabel() {
            return(listOwner.labelField);
        }
        function init(Void) {
            super.init();
            tabEnabled = false;
        }
        function createChildren(Void) {
            setCellRenderer(false);
            setupBG();
            setState(state, false);
        }
        function drawRow(itmObj, state, transition) {
            item = itmObj;
            setState(state, transition);
            setValue(itmObj, state, transition);
        }
        function itemToString(itmObj) {
            if (itmObj == undefined) {
                return(" ");
            }
            var _local2 = owner.__labelFunction(itmObj);
            if (_local2 == undefined) {
                _local2 = ((itmObj instanceof XMLNode) ? (itmObj.attributes[owner.__labelField]) : (itmObj[owner.__labelField]));
                if (_local2 == undefined) {
                    _local2 = " ";
                    if (typeof(itmObj) == "object") {
                        for (var _local4 in itmObj) {
                            if (_local4 != "__ID__") {
                                _local2 = (itmObj[_local4] + ", ") + _local2;
                            }
                        }
                        _local2 = _local2.substring(0, _local2.length - 2);
                    } else {
                        _local2 = itmObj;
                    }
                }
            }
            return(_local2);
        }
        function setupBG(Void) {
            var _local2 = (backGround = createEmptyMovieClip("bG_mc", LOWEST_DEPTH));
            drawRowFill(_local2, normalColor);
            highlight = createEmptyMovieClip("tran_mc", LOWEST_DEPTH + 10);
            _local2.owner = this;
            _local2.grandOwner = owner;
            _local2.onPress = bGOnPress;
            _local2.onRelease = bGOnRelease;
            _local2.onRollOver = bGOnRollOver;
            _local2.onRollOut = bGOnRollOut;
            _local2.onDragOver = bGOnDragOver;
            _local2.onDragOut = bGOnDragOut;
            _local2.useHandCursor = false;
            _local2.trackAsMenu = true;
            _local2.drawRect = drawRect;
            highlight.drawRect = drawRect;
        }
        function drawRowFill(mc, newClr) {
            mc.clear();
            mc.beginFill(newClr);
            mc.drawRect(1, 0, __width, __height);
            mc.endFill();
            mc._width = __width;
            mc._height = __height;
        }
        function setState(newState, transition) {
            var _local2 = highlight;
            var _local8 = backGround;
            var _local4 = __height;
            var _local3 = owner;
            if (!_local3.enabled) {
                if ((newState == "selected") || (state == "selected")) {
                    highlightColor = _local3.getStyle("selectionDisabledColor");
                    drawRowFill(_local2, highlightColor);
                    _local2._visible = true;
                    _local2._y = 0;
                    _local2._height = _local4;
                } else {
                    _local2._visible = false;
                    normalColor = _local3.getStyle("backgroundDisabledColor");
                    drawRowFill(_local8, normalColor);
                }
                cell.__enabled = false;
                cell.setColor(_local3.getStyle("disabledColor"));
            } else {
                cell.__enabled = true;
                if (transition && ((newState == state) || ((newState == "highlighted") && (state == "selected")))) {
                    isChangedToSelected = true;
                    return(undefined);
                }
                var _local6 = _local3.getStyle("selectionDuration");
                var _local7 = 0;
                if (isChangedToSelected && (newState == "selected")) {
                    transition = false;
                }
                var _local10 = transition && (_local6 != 0);
                if (newState == "normal") {
                    _local7 = _local3.getStyle("color");
                    normalColor = getNormalColor();
                    drawRowFill(_local8, normalColor);
                    if (_local10) {
                        _local6 = _local6 / 2;
                        _local2._height = _local4;
                        _local2._width = __width;
                        _local2._y = 0;
                        bGTween = new mx.effects.Tween(this, _local4 + 2, _local4 * 0.2, _local6, 5);
                    } else {
                        _local2._visible = false;
                    }
                    delete isChangedToSelected;
                } else {
                    highlightColor = _local3.getStyle(((newState == "highlighted") ? "rollOverColor" : "selectionColor"));
                    drawRowFill(_local2, highlightColor);
                    _local2._visible = true;
                    _local7 = _local3.getStyle(((newState == "highlighted") ? "textRollOverColor" : "textSelectedColor"));
                    if (_local10) {
                        _local2._height = _local4 * 0.5;
                        _local2._y = (_local4 - _local2._height) / 2;
                        bGTween = new mx.effects.Tween(this, _local2._height, _local4 + 2, _local6, 5);
                        var _local9 = _local3.getStyle("selectionEasing");
                        if (_local9 != undefined) {
                            bGTween.easingEquation = _local9;
                        }
                    } else {
                        _local2._y = 0;
                        _local2._height = _local4;
                    }
                }
                cell.setColor(_local7);
            }
            state = newState;
        }
        function onTweenUpdate(val) {
            highlight._height = val;
            highlight._y = (__height - val) / 2;
        }
        function onTweenEnd(val) {
            onTweenUpdate(val);
            highlight._visible = state != "normal";
        }
        function getNormalColor(Void) {
            var _local3;
            var _local2 = owner;
            if (!owner.enabled) {
                _local3 = _local2.getStyle("backgroundDisabledColor");
            } else {
                var _local5 = rowIndex + _local2.__vPosition;
                if (rowIndex == undefined) {
                    _local3 = _local2.getPropertiesOf(item).backgroundColor;
                } else {
                    _local3 = _local2.getPropertiesAt(_local5).backgroundColor;
                }
                if (_local3 == undefined) {
                    var _local4 = _local2.getStyle("alternatingRowColors");
                    if (_local4 == undefined) {
                        _local3 = _local2.getStyle("backgroundColor");
                    } else {
                        _local3 = _local4[_local5 % _local4.length];
                    }
                }
            }
            return(_local3);
        }
        function invalidateStyle(propName) {
            cell.invalidateStyle(propName);
            super.invalidateStyle(propName);
        }
        function bGOnPress(Void) {
            grandOwner.pressFocus();
            grandOwner.onRowPress(owner.rowIndex);
        }
        function bGOnRelease(Void) {
            grandOwner.releaseFocus();
            grandOwner.onRowRelease(owner.rowIndex);
        }
        function bGOnRollOver(Void) {
            grandOwner.onRowRollOver(owner.rowIndex);
        }
        function bGOnRollOut(Void) {
            grandOwner.onRowRollOut(owner.rowIndex);
        }
        function bGOnDragOver(Void) {
            grandOwner.onRowDragOver(owner.rowIndex);
        }
        function bGOnDragOut(Void) {
            grandOwner.onRowDragOut(owner.rowIndex);
        }
        static var LOWEST_DEPTH = -16384;
        var state = "normal";
        var disabledColor = 15263976;
        var normalColor = 16777215;
    }
﻿
//----------------------------------------------------------------------
//Symbol 305 MovieClip Frame 23
//----------------------------------------------------------------------
    stop();

﻿
//----------------------------------------------------------------------
//Symbol 125 MovieClip [__Packages.mx.managers.FocusManager] Frame 0
//----------------------------------------------------------------------
    class mx.managers.FocusManager extends mx.core.UIComponent
    {
        var __defaultPushButton, defPushButton, form, move, tabEnabled, _width, _height, _x, _y, _alpha, _parent, tabCapture, watch, lastMouse, _visible, lastFocus, doLater, lastSelFocus, cancelAllDoLaters, _searchKey, _lastTarget, _firstNode, _nextIsNext, _nextNode, _lastx, _prevNode, _needPrev, _foundList, _prevObj, _nextObj, _firstObj, _lastObj, _lastNode, lastTabFocus, findFocusFromObject;
        function FocusManager () {
            super();
        }
        function get defaultPushButton() {
            return(__defaultPushButton);
        }
        function set defaultPushButton(x) {
            if (x != __defaultPushButton) {
                __defaultPushButton.__set__emphasized(false);
                __defaultPushButton = x;
                defPushButton = x;
                x.__set__emphasized(true);
            }
            //return(defaultPushButton);
        }
        function getMaxTabIndex(o) {
            var _local3 = 0;
            var _local6;
            for (_local6 in o) {
                var _local2 = o[_local6];
                if (_local2._parent == o) {
                    if (_local2.tabIndex != undefined) {
                        if (_local2.tabIndex > _local3) {
                            _local3 = _local2.tabIndex;
                        }
                    }
                    if (_local2.tabChildren == true) {
                        var _local4 = getMaxTabIndex(_local2);
                        if (_local4 > _local3) {
                            _local3 = _local4;
                        }
                    }
                }
            }
            return(_local3);
        }
        function getNextTabIndex(Void) {
            return(getMaxTabIndex(form) + 1);
        }
        function get nextTabIndex() {
            return(getNextTabIndex());
        }
        function relocate(Void) {
            var _local2 = mx.managers.SystemManager.__get__screen();
            move(_local2.x - 1, _local2.y - 1);
        }
        function init(Void) {
            super.init();
            tabEnabled = false;
            _width = (_height = 1);
            _x = (_y = -1);
            _alpha = 0;
            _parent.focusManager = this;
            _parent.tabChildren = true;
            _parent.tabEnabled = false;
            form = _parent;
            _parent.addEventListener("hide", this);
            _parent.addEventListener("reveal", this);
            mx.managers.SystemManager.init();
            mx.managers.SystemManager.addFocusManager(form);
            tabCapture.tabIndex = 0;
            watch("enabled", enabledChanged);
            Selection.addListener(this);
            lastMouse = new Object();
            _global.ASSetPropFlags(_parent, "focusManager", 1);
            _global.ASSetPropFlags(_parent, "tabChildren", 1);
            _global.ASSetPropFlags(_parent, "tabEnabled", 1);
        }
        function enabledChanged(id, oldValue, newValue) {
            _visible = newValue;
            return(newValue);
        }
        function activate(Void) {
            Key.addListener(this);
            activated = (_visible = true);
            if (lastFocus != undefined) {
                bNeedFocus = true;
                if (!mx.managers.SystemManager.isMouseDown) {
                    doLater(this, "restoreFocus");
                }
            }
        }
        function deactivate(Void) {
            Key.removeListener(this);
            activated = (_visible = false);
            var _local2 = getSelectionFocus();
            var _local3 = getActualFocus(_local2);
            if (isOurFocus(_local3)) {
                lastSelFocus = _local2;
                lastFocus = _local3;
            }
            cancelAllDoLaters();
        }
        function isOurFocus(o) {
            if (o.focusManager == this) {
                return(true);
            }
            while (o != undefined) {
                if (o.focusManager != undefined) {
                    return(false);
                }
                if (o._parent == _parent) {
                    return(true);
                }
                o = o._parent;
            }
            return(false);
        }
        function onSetFocus(o, n) {
            if (n == null) {
                if (activated) {
                    bNeedFocus = true;
                }
            } else {
                var _local2 = getFocus();
                if (isOurFocus(_local2)) {
                    bNeedFocus = false;
                    lastFocus = _local2;
                    lastSelFocus = n;
                }
            }
        }
        function restoreFocus(Void) {
            var _local2 = lastSelFocus.hscroll;
            if (_local2 != undefined) {
                var _local5 = lastSelFocus.scroll;
                var _local4 = lastSelFocus.background;
            }
            lastFocus.setFocus();
            var _local3 = Selection;
            Selection.setSelection(_local3.lastBeginIndex, _local3.lastEndIndex);
            if (_local2 != undefined) {
                lastSelFocus.scroll = _local5;
                lastSelFocus.hscroll = _local2;
                lastSelFocus.background = _local4;
            }
        }
        function onUnload(Void) {
            mx.managers.SystemManager.removeFocusManager(form);
        }
        function setFocus(o) {
            if (o == null) {
                Selection.setFocus(null);
            } else if (o.setFocus == undefined) {
                Selection.setFocus(o);
            } else {
                o.setFocus();
            }
        }
        function getActualFocus(o) {
            var _local1 = o._parent;
            while (_local1 != undefined) {
                if (_local1.focusTextField != undefined) {
                    while (_local1.focusTextField != undefined) {
                        o = _local1;
                        _local1 = _local1._parent;
                        if (_local1 == undefined) {
                            return(undefined);
                        }
                        if (_local1.focusTextField == undefined) {
                            return(o);
                        }
                    }
                }
                if (_local1.tabEnabled != true) {
                    return(o);
                }
                o = _local1;
                _local1 = o._parent;
            }
            return(undefined);
        }
        function getSelectionFocus() {
            var m = Selection.getFocus();
            var o = eval (m);
            return(o);
        }
        function getFocus(Void) {
            var _local2 = getSelectionFocus();
            return(getActualFocus(_local2));
        }
        function walkTree(p, index, groupName, dir, lookup, firstChild) {
            var _local5 = true;
            var _local11;
            for (_local11 in p) {
                var _local2 = p[_local11];
                if ((((_local2._parent == p) && (_local2.enabled != false)) && (_local2._visible != false)) && ((_local2.tabEnabled == true) || ((_local2.tabEnabled != false) && ((((((((_local2.onPress != undefined) || (_local2.onRelease != undefined)) || (_local2.onReleaseOutside != undefined)) || (_local2.onDragOut != undefined)) || (_local2.onDragOver != undefined)) || (_local2.onRollOver != undefined)) || (_local2.onRollOut != undefined)) || (_local2 instanceof TextField))))) {
                    if (_local2._searchKey == _searchKey) {
                        continue;
                    }
                    _local2._searchKey = _searchKey;
                    if (_local2 != _lastTarget) {
                        if (((_local2.groupName != undefined) || (groupName != undefined)) && (_local2.groupName == groupName)) {
                            continue;
                        }
                        if ((_local2 instanceof TextField) && (_local2.selectable == false)) {
                            continue;
                        }
                        if (_local5 || (((_local2.groupName != undefined) && (_local2.groupName == _firstNode.groupName)) && (_local2.selected == true))) {
                            if (firstChild) {
                                _firstNode = _local2;
                                firstChild = false;
                            }
                        }
                        if (_nextIsNext == true) {
                            if ((((_local2.groupName != undefined) && (_local2.groupName == _nextNode.groupName)) && (_local2.selected == true)) || ((_nextNode == undefined) && ((_local2.groupName == undefined) || ((_local2.groupName != undefined) && (_local2.groupName != groupName))))) {
                                _nextNode = _local2;
                            }
                        }
                        if ((_local2.groupName == undefined) || (groupName != _local2.groupName)) {
                            if (((_lastx.groupName != undefined) && (_local2.groupName == _lastx.groupName)) && (_lastx.selected == true)) {
                            } else {
                                _lastx = _local2;
                            }
                        }
                    } else {
                        _prevNode = _lastx;
                        _needPrev = false;
                        _nextIsNext = true;
                    }
                    if (_local2.tabIndex != undefined) {
                        if (_local2.tabIndex == index) {
                            if (_foundList[_local2._name] == undefined) {
                                if (_needPrev) {
                                    _prevObj = _local2;
                                    _needPrev = false;
                                }
                                _nextObj = _local2;
                            }
                        }
                        if (dir && (_local2.tabIndex > index)) {
                            if (((_nextObj == undefined) || ((_nextObj.tabIndex > _local2.tabIndex) && (((_local2.groupName == undefined) || (_nextObj.groupName == undefined)) || (_local2.groupName != _nextObj.groupName)))) || ((((_nextObj.groupName != undefined) && (_nextObj.groupName == _local2.groupName)) && (_nextObj.selected != true)) && ((_local2.selected == true) || (_nextObj.tabIndex > _local2.tabIndex)))) {
                                _nextObj = _local2;
                            }
                        } else if ((!dir) && (_local2.tabIndex < index)) {
                            if (((_prevObj == undefined) || ((_prevObj.tabIndex < _local2.tabIndex) && (((_local2.groupName == undefined) || (_prevObj.groupName == undefined)) || (_local2.groupName != _prevObj.groupName)))) || ((((_prevObj.groupName != undefined) && (_prevObj.groupName == _local2.groupName)) && (_prevObj.selected != true)) && ((_local2.selected == true) || (_prevObj.tabIndex < _local2.tabIndex)))) {
                                _prevObj = _local2;
                            }
                        }
                        if (((_firstObj == undefined) || ((_local2.tabIndex < _firstObj.tabIndex) && (((_local2.groupName == undefined) || (_firstObj.groupName == undefined)) || (_local2.groupName != _firstObj.groupName)))) || ((((_firstObj.groupName != undefined) && (_firstObj.groupName == _local2.groupName)) && (_firstObj.selected != true)) && ((_local2.selected == true) || (_local2.tabIndex < _firstObj.tabIndex)))) {
                            _firstObj = _local2;
                        }
                        if (((_lastObj == undefined) || ((_local2.tabIndex > _lastObj.tabIndex) && (((_local2.groupName == undefined) || (_lastObj.groupName == undefined)) || (_local2.groupName != _lastObj.groupName)))) || ((((_lastObj.groupName != undefined) && (_lastObj.groupName == _local2.groupName)) && (_lastObj.selected != true)) && ((_local2.selected == true) || (_local2.tabIndex > _lastObj.tabIndex)))) {
                            _lastObj = _local2;
                        }
                    }
                    if (_local2.tabChildren) {
                        getTabCandidateFromChildren(_local2, index, groupName, dir, _local5 && (firstChild));
                    }
                    _local5 = false;
                } else if (((_local2._parent == p) && (_local2.tabChildren == true)) && (_local2._visible != false)) {
                    if (_local2 == _lastTarget) {
                        if (_local2._searchKey == _searchKey) {
                            continue;
                        }
                        _local2._searchKey = _searchKey;
                        if (_prevNode == undefined) {
                            var _local3 = _lastx;
                            var _local7 = false;
                            while (_local3 != undefined) {
                                if (_local3 == _local2) {
                                    _local7 = true;
                                    break;
                                }
                                _local3 = _local3._parent;
                            }
                            if (_local7 == false) {
                                _prevNode = _lastx;
                            }
                        }
                        _needPrev = false;
                        if (_nextNode == undefined) {
                            _nextIsNext = true;
                        }
                    } else if (!((_local2.focusManager != undefined) && (_local2.focusManager._parent == _local2))) {
                        if (_local2._searchKey == _searchKey) {
                            continue;
                        }
                        _local2._searchKey = _searchKey;
                        getTabCandidateFromChildren(_local2, index, groupName, dir, _local5 && (firstChild));
                    }
                    _local5 = false;
                }
            }
            _lastNode = _lastx;
            if (lookup) {
                if (p._parent != undefined) {
                    if (p != _parent) {
                        if ((_prevNode == undefined) && (dir)) {
                            _needPrev = true;
                        } else if ((_nextNode == undefined) && (!dir)) {
                            _nextIsNext = false;
                        }
                        _lastTarget = _lastTarget._parent;
                        getTabCandidate(p._parent, index, groupName, dir, true);
                    }
                }
            }
        }
        function getTabCandidate(o, index, groupName, dir, firstChild) {
            var _local2;
            var _local3 = true;
            if (o == _parent) {
                _local2 = o;
                _local3 = false;
            } else {
                _local2 = o._parent;
                if (_local2 == undefined) {
                    _local2 = o;
                    _local3 = false;
                }
            }
            walkTree(_local2, index, groupName, dir, _local3, firstChild);
        }
        function getTabCandidateFromChildren(o, index, groupName, dir, firstChild) {
            walkTree(o, index, groupName, dir, false, firstChild);
        }
        function getFocusManagerFromObject(o) {
            while (o != undefined) {
                if (o.focusManager != undefined) {
                    return(o.focusManager);
                }
                o = o._parent;
            }
            return(undefined);
        }
        function tabHandler(Void) {
            bDrawFocus = true;
            var _local5 = getSelectionFocus();
            var _local4 = getActualFocus(_local5);
            if (_local4 != _local5) {
                _local5 = _local4;
            }
            if (getFocusManagerFromObject(_local5) != this) {
                _local5 == undefined;
            }
            if (_local5 == undefined) {
                _local5 = form;
            } else if (_local5.tabIndex != undefined) {
                if ((_foundList != undefined) || (_foundList.tabIndex != _local5.tabIndex)) {
                    _foundList = new Object();
                    _foundList.tabIndex = _local5.tabIndex;
                }
                _foundList[_local5._name] = _local5;
            }
            var _local3 = Key.isDown(16) != true;
            _searchKey = getTimer();
            _needPrev = true;
            _nextIsNext = false;
            _lastx = undefined;
            _firstNode = undefined;
            _lastNode = undefined;
            _nextNode = undefined;
            _prevNode = undefined;
            _firstObj = undefined;
            _lastObj = undefined;
            _nextObj = undefined;
            _prevObj = undefined;
            _lastTarget = _local5;
            var _local6 = _local5;
            getTabCandidate(_local6, ((_local5.tabIndex == undefined) ? 0 : (_local5.tabIndex)), _local5.groupName, _local3, true);
            var _local2;
            if (_local3) {
                if (_nextObj != undefined) {
                    _local2 = _nextObj;
                } else {
                    _local2 = _firstObj;
                }
            } else if (_prevObj != undefined) {
                _local2 = _prevObj;
            } else {
                _local2 = _lastObj;
            }
            if (_local2.tabIndex != _local5.tabIndex) {
                _foundList = new Object();
                _foundList.tabIndex = _local2.tabIndex;
                _foundList[_local2._name] = _local2;
            } else {
                if (_foundList == undefined) {
                    _foundList = new Object();
                    _foundList.tabIndex = _local2.tabIndex;
                }
                _foundList[_local2._name] = _local2;
            }
            if (_local2 == undefined) {
                if (_local3 == false) {
                    if (_nextNode != undefined) {
                        _local2 = _nextNode;
                    } else {
                        _local2 = _firstNode;
                    }
                } else if ((_prevNode == undefined) || (_local5 == form)) {
                    _local2 = _lastNode;
                } else {
                    _local2 = _prevNode;
                }
            }
            if (_local2 == undefined) {
                return(undefined);
            }
            lastTabFocus = _local2;
            setFocus(_local2);
            if (_local2.emphasized != undefined) {
                if (defPushButton != undefined) {
                    _local5 = defPushButton;
                    defPushButton = _local2;
                    _local5.emphasized = false;
                    _local2.emphasized = true;
                }
            } else if ((defPushButton != undefined) && (defPushButton != __defaultPushButton)) {
                _local5 = defPushButton;
                defPushButton = __defaultPushButton;
                _local5.emphasized = false;
                __defaultPushButton.__set__emphasized(true);
            }
        }
        function onKeyDown(Void) {
            mx.managers.SystemManager.idleFrames = 0;
            if (defaultPushButtonEnabled) {
                if (Key.getCode() == 13) {
                    if (defaultPushButton != undefined) {
                        doLater(this, "sendDefaultPushButtonEvent");
                    }
                }
            }
        }
        function sendDefaultPushButtonEvent(Void) {
            defPushButton.dispatchEvent({type:"click"});
        }
        function getMousedComponentFromChildren(x, y, o) {
            for (var _local7 in o) {
                var _local2 = o[_local7];
                if (((_local2._visible && (_local2.enabled)) && (_local2._parent == o)) && (_local2._searchKey != _searchKey)) {
                    _local2._searchKey = _searchKey;
                    if (_local2.hitTest(x, y, true)) {
                        if ((_local2.onPress != undefined) || (_local2.onRelease != undefined)) {
                            return(_local2);
                        }
                        var _local3 = getMousedComponentFromChildren(x, y, _local2);
                        if (_local3 != undefined) {
                            return(_local3);
                        }
                        return(_local2);
                    }
                }
            }
            return(undefined);
        }
        function mouseActivate(Void) {
            if (!bNeedFocus) {
                return(undefined);
            }
            _searchKey = getTimer();
            var _local2 = getMousedComponentFromChildren(lastMouse.x, lastMouse.y, form);
            if (_local2 instanceof mx.core.UIComponent) {
                return(undefined);
            }
            _local2 = findFocusFromObject(_local2);
            if (_local2 == lastFocus) {
                return(undefined);
            }
            if (_local2 == undefined) {
                doLater(this, "restoreFocus");
                return(undefined);
            }
            var _local3 = _local2.hscroll;
            if (_local3 != undefined) {
                var _local6 = _local2.scroll;
                var _local5 = _local2.background;
            }
            setFocus(_local2);
            var _local4 = Selection;
            Selection.setSelection(_local4.lastBeginIndex, _local4.lastEndIndex);
            if (_local3 != undefined) {
                _local2.scroll = _local6;
                _local2.hscroll = _local3;
                _local2.background = _local5;
            }
        }
        function _onMouseDown(Void) {
            bDrawFocus = false;
            if (lastFocus != undefined) {
                lastFocus.drawFocus(false);
            }
            mx.managers.SystemManager.idleFrames = 0;
            var _local3 = Selection;
            _local3.lastBeginIndex = Selection.getBeginIndex();
            _local3.lastEndIndex = Selection.getEndIndex();
            lastMouse.x = _root._xmouse;
            lastMouse.y = _root._ymouse;
            _root.localToGlobal(lastMouse);
        }
        function onMouseUp(Void) {
            if (_visible) {
                doLater(this, "mouseActivate");
            }
        }
        function handleEvent(e) {
            if (e.type == "reveal") {
                mx.managers.SystemManager.activate(form);
            } else {
                mx.managers.SystemManager.deactivate(form);
            }
        }
        static function enableFocusManagement() {
            if (!initialized) {
                initialized = true;
                Object.registerClass("FocusManager", mx.managers.FocusManager);
                if (_root.focusManager == undefined) {
                    _root.createClassObject(mx.managers.FocusManager, "focusManager", mx.managers.DepthManager.highestDepth--);
                }
            }
        }
        static var symbolName = "FocusManager";
        static var symbolOwner = mx.managers.FocusManager;
        static var version = "2.0.2.126";
        var className = "FocusManager";
        var bNeedFocus = false;
        var bDrawFocus = false;
        var defaultPushButtonEnabled = true;
        var activated = true;
        static var initialized = false;
        static var UIObjectExtensionsDependency = mx.core.ext.UIObjectExtensions;
    }
﻿
//----------------------------------------------------------------------
//Symbol 38 MovieClip [Border] Frame 1
//----------------------------------------------------------------------
    #initclip 52
    Object.registerClass("Border", mx.skins.Border);
    #endinitclip

    stop();
﻿
//----------------------------------------------------------------------
//Symbol 103 MovieClip [ScrollView] Frame 1
//----------------------------------------------------------------------
    #initclip 62
    Object.registerClass("ScrollView", mx.core.ScrollView);
    #endinitclip

    stop();

﻿
//----------------------------------------------------------------------
//Symbol 180 MovieClip Frame 1
//----------------------------------------------------------------------
    var l = this._x;
    var t = this._y;
    btn.onPress = function () {
        startDrag (this._parent, false, l - 50, t, l, t);
        Vol_mc._visible = 1;
    };
    btn.onRelease = (btn.onReleaseOutside = function () {
        stopDrag();
        Vol_mc._visible = 0;
    });
    onEnterFrame = function () {
        if (_parent.tempSoundVol) {
            vol = (((this._x - l) / 50) * 100) + 100;
            _parent.s.setVolume(vol);
            this.Vol_mc.Vtxt = int(vol + 1) + "%";
        }
    };

﻿
//----------------------------------------------------------------------
//Symbol 116 MovieClip [__Packages.mx.controls.scrollClasses.ScrollThumb] Frame 0
//----------------------------------------------------------------------
    class mx.controls.scrollClasses.ScrollThumb extends mx.skins.CustomBorder
    {
        var useHandCursor, ymin, ymax, datamin, datamax, scrollMove, lastY, _ymouse, _y, _parent, onMouseMove, grip_mc, setSkin, gripSkin, __get__width, __get__height;
        function ScrollThumb () {
            super();
        }
        function createChildren(Void) {
            super.createChildren();
            useHandCursor = false;
        }
        function setRange(_ymin, _ymax, _datamin, _datamax) {
            ymin = _ymin;
            ymax = _ymax;
            datamin = _datamin;
            datamax = _datamax;
        }
        function dragThumb(Void) {
            scrollMove = _ymouse - lastY;
            scrollMove = scrollMove + _y;
            if (scrollMove < ymin) {
                scrollMove = ymin;
            } else if (scrollMove > ymax) {
                scrollMove = ymax;
            }
            _parent.isScrolling = true;
            _y = scrollMove;
            var _local2 = Math.round(((datamax - datamin) * (_y - ymin)) / (ymax - ymin)) + datamin;
            _parent.scrollPosition = _local2;
            _parent.dispatchScrollEvent("ThumbTrack");
            updateAfterEvent();
        }
        function stopDragThumb(Void) {
            _parent.isScrolling = false;
            _parent.dispatchScrollEvent("ThumbPosition");
            _parent.dispatchScrollChangedEvent();
            delete onMouseMove;
        }
        function onPress(Void) {
            _parent.pressFocus();
            lastY = _ymouse;
            onMouseMove = dragThumb;
            super.onPress();
        }
        function onRelease(Void) {
            _parent.releaseFocus();
            stopDragThumb();
            super.onRelease();
        }
        function onReleaseOutside(Void) {
            _parent.releaseFocus();
            stopDragThumb();
            super.onReleaseOutside();
        }
        function draw() {
            super.draw();
            if (grip_mc == undefined) {
                setSkin(3, gripSkin);
            }
        }
        function size() {
            super.size();
            grip_mc.move((__get__width() - grip_mc.width) / 2, (__get__height() - grip_mc.height) / 2);
        }
        static var symbolOwner = mx.skins.CustomBorder.symbolOwner;
        var className = "ScrollThumb";
        var btnOffset = 0;
        var horizontal = false;
        var idNames = new Array("l_mc", "m_mc", "r_mc", "grip_mc");
    }
﻿
//----------------------------------------------------------------------
//Instance of Symbol 41 MovieClip [Button] in Symbol 100 MovieClip [HScrollBar] Frame 2
//----------------------------------------------------------------------
//component parameters
onClipEvent (initialize) {
    icon = "";
    label = "Button";
    labelPlacement = "right";
    selected = false;
    toggle = false;
    enabled = true;
    visible = true;
    minHeight = 0;
    minWidth = 0;
}
﻿
//----------------------------------------------------------------------
//Symbol 305 MovieClip Frame 22
//----------------------------------------------------------------------
    this.gotoAndStop("\u6295\u79682");

﻿
//----------------------------------------------------------------------
//Symbol 76 MovieClip [ThumbThemeColor2] Frame 1
//----------------------------------------------------------------------
    mx.skins.ColoredSkinElement.setColorStyle(this, "themeColor");

﻿
//----------------------------------------------------------------------
//Symbol 250 MovieClip Frame 1
//----------------------------------------------------------------------
    stop();

﻿
//----------------------------------------------------------------------
//Symbol 97 MovieClip [BtnDownArrow] Frame 1
//----------------------------------------------------------------------
    #initclip 57
    Object.registerClass("BtnDownArrow", mx.controls.SimpleButton);
    #endinitclip

﻿
//----------------------------------------------------------------------
//Symbol 118 MovieClip [__Packages.mx.controls.scrollClasses.ScrollBar] Frame 0
//----------------------------------------------------------------------
    class mx.controls.scrollClasses.ScrollBar extends mx.core.UIComponent
    {
        var isScrolling, scrollTrack_mc, scrollThumb_mc, __height, tabEnabled, focusEnabled, boundingBox_mc, setSkin, upArrow_mc, _minHeight, _minWidth, downArrow_mc, createObject, createClassObject, enabled, _height, dispatchEvent, minMode, maxMode, plusMode, minusMode, _parent, getStyle, scrolling, _ymouse;
        function ScrollBar () {
            super();
        }
        function get scrollPosition() {
            return(_scrollPosition);
        }
        function set scrollPosition(pos) {
            _scrollPosition = pos;
            if (isScrolling != true) {
                pos = Math.min(pos, maxPos);
                pos = Math.max(pos, minPos);
                var _local3 = (((pos - minPos) * (scrollTrack_mc.height - scrollThumb_mc._height)) / (maxPos - minPos)) + scrollTrack_mc.top;
                scrollThumb_mc.move(0, _local3);
            }
            //return(scrollPosition);
        }
        function get pageScrollSize() {
            return(largeScroll);
        }
        function set pageScrollSize(lScroll) {
            largeScroll = lScroll;
            //return(pageScrollSize);
        }
        function set lineScrollSize(sScroll) {
            smallScroll = sScroll;
            //return(lineScrollSize);
        }
        function get lineScrollSize() {
            return(smallScroll);
        }
        function get virtualHeight() {
            return(__height);
        }
        function init(Void) {
            super.init();
            _scrollPosition = 0;
            tabEnabled = false;
            focusEnabled = false;
            boundingBox_mc._visible = false;
            boundingBox_mc._width = (boundingBox_mc._height = 0);
        }
        function createChildren(Void) {
            if (scrollTrack_mc == undefined) {
                setSkin(skinIDTrack, scrollTrackName);
            }
            scrollTrack_mc.visible = false;
            var _local3 = new Object();
            _local3.enabled = false;
            _local3.preset = mx.controls.SimpleButton.falseDisabled;
            _local3.initProperties = 0;
            _local3.autoRepeat = true;
            _local3.tabEnabled = false;
            var _local2;
            if (upArrow_mc == undefined) {
                _local2 = createButton(upArrowName, "upArrow_mc", skinIDUpArrow, _local3);
            }
            _local2.buttonDownHandler = onUpArrow;
            _local2.clickHandler = onScrollChanged;
            _minHeight = _local2.height;
            _minWidth = _local2.width;
            if (downArrow_mc == undefined) {
                _local2 = createButton(downArrowName, "downArrow_mc", skinIDDownArrow, _local3);
            }
            _local2.buttonDownHandler = onDownArrow;
            _local2.clickHandler = onScrollChanged;
            _minHeight = _minHeight + _local2.height;
        }
        function createButton(linkageName, id, skinID, o) {
            if (skinID == skinIDUpArrow) {
                o.falseUpSkin = upArrowUpName;
                o.falseDownSkin = upArrowDownName;
                o.falseOverSkin = upArrowOverName;
            } else {
                o.falseUpSkin = downArrowUpName;
                o.falseDownSkin = downArrowDownName;
                o.falseOverSkin = downArrowOverName;
            }
            var _local3 = createObject(linkageName, id, skinID, o);
            this[id].visible = false;
            this[id].useHandCursor = false;
            return(_local3);
        }
        function createThumb(Void) {
            var _local2 = new Object();
            _local2.validateNow = true;
            _local2.tabEnabled = false;
            _local2.leftSkin = thumbTopName;
            _local2.middleSkin = thumbMiddleName;
            _local2.rightSkin = thumbBottomName;
            _local2.gripSkin = thumbGripName;
            createClassObject(mx.controls.scrollClasses.ScrollThumb, "scrollThumb_mc", skinIDThumb, _local2);
        }
        function setScrollProperties(pSize, mnPos, mxPos, ls) {
            var _local4;
            var _local2 = scrollTrack_mc;
            pageSize = pSize;
            largeScroll = (((ls != undefined) && (ls > 0)) ? (ls) : (pSize));
            minPos = Math.max(mnPos, 0);
            maxPos = Math.max(mxPos, 0);
            _scrollPosition = Math.max(minPos, _scrollPosition);
            _scrollPosition = Math.min(maxPos, _scrollPosition);
            if (((maxPos - minPos) > 0) && (enabled)) {
                var _local5 = _scrollPosition;
                if (!initializing) {
                    upArrow_mc.enabled = true;
                    downArrow_mc.enabled = true;
                }
                _local2.onPress = (_local2.onDragOver = startTrackScroller);
                _local2.onRelease = releaseScrolling;
                _local2.onDragOut = (_local2.stopScrolling = stopScrolling);
                _local2.onReleaseOutside = releaseScrolling;
                _local2.useHandCursor = false;
                if (scrollThumb_mc == undefined) {
                    createThumb();
                }
                var _local3 = scrollThumb_mc;
                if (scrollTrackOverName.length > 0) {
                    _local2.onRollOver = trackOver;
                    _local2.onRollOut = trackOut;
                }
                _local4 = (pageSize / ((maxPos - minPos) + pageSize)) * _local2.height;
                if (_local4 < _local3.minHeight) {
                    if (_local2.height < _local3.minHeight) {
                        _local3.__set__visible(false);
                    } else {
                        _local4 = _local3.minHeight;
                        _local3.__set__visible(true);
                        _local3.setSize(_minWidth, _local3.minHeight + 0);
                    }
                } else {
                    _local3.__set__visible(true);
                    _local3.setSize(_minWidth, _local4);
                }
                _local3.setRange(upArrow_mc.__get__height() + 0, (virtualHeight - downArrow_mc.__get__height()) - _local3.__get__height(), minPos, maxPos);
                _local5 = Math.min(_local5, maxPos);
                scrollPosition = (Math.max(_local5, minPos));
            } else {
                scrollThumb_mc.__set__visible(false);
                if (!initializing) {
                    upArrow_mc.enabled = false;
                    downArrow_mc.enabled = false;
                }
                delete _local2.onPress;
                delete _local2.onDragOver;
                delete _local2.onRelease;
                delete _local2.onDragOut;
                delete _local2.onRollOver;
                delete _local2.onRollOut;
                delete _local2.onReleaseOutside;
            }
            if (initializing) {
                scrollThumb_mc.__set__visible(false);
            }
        }
        function setEnabled(enabledFlag) {
            super.setEnabled(enabledFlag);
            setScrollProperties(pageSize, minPos, maxPos, largeScroll);
        }
        function draw(Void) {
            if (initializing) {
                initializing = false;
                scrollTrack_mc.visible = true;
                upArrow_mc.__set__visible(true);
                downArrow_mc.__set__visible(true);
            }
            size();
        }
        function size(Void) {
            if (_height == 1) {
                return(undefined);
            }
            if (upArrow_mc == undefined) {
                return(undefined);
            }
            var _local3 = upArrow_mc.__get__height();
            var _local2 = downArrow_mc.__get__height();
            upArrow_mc.move(0, 0);
            var _local4 = scrollTrack_mc;
            _local4._y = _local3;
            _local4._height = (virtualHeight - _local3) - _local2;
            downArrow_mc.move(0, virtualHeight - _local2);
            setScrollProperties(pageSize, minPos, maxPos, largeScroll);
        }
        function dispatchScrollEvent(detail) {
            dispatchEvent({type:"scroll", detail:detail});
        }
        function isScrollBarKey(k) {
            if (k == 36) {
                if (scrollPosition != 0) {
                    scrollPosition = (0);
                    dispatchScrollEvent(minMode);
                }
                return(true);
            }
            if (k == 35) {
                if (scrollPosition < maxPos) {
                    scrollPosition = (maxPos);
                    dispatchScrollEvent(maxMode);
                }
                return(true);
            }
            return(false);
        }
        function scrollIt(inc, mode) {
            var _local3 = smallScroll;
            if (inc != "Line") {
                _local3 = ((largeScroll == 0) ? (pageSize) : (largeScroll));
            }
            var _local2 = _scrollPosition + (mode * _local3);
            if (_local2 > maxPos) {
                _local2 = maxPos;
            } else if (_local2 < minPos) {
                _local2 = minPos;
            }
            if (scrollPosition != _local2) {
                scrollPosition = (_local2);
                var _local4 = ((mode < 0) ? (minusMode) : (plusMode));
                dispatchScrollEvent(inc + _local4);
            }
        }
        function startTrackScroller(Void) {
            _parent.pressFocus();
            if (_parent.scrollTrackDownName.length > 0) {
                if (_parent.scrollTrackDown_mc == undefined) {
                    _parent.setSkin(skinIDTrackDown, scrollTrackDownName);
                } else {
                    _parent.scrollTrackDown_mc.visible = true;
                }
            }
            _parent.trackScroller();
            _parent.scrolling = setInterval(_parent, "scrollInterval", getStyle("repeatDelay"), "Page", -1);
        }
        function scrollInterval(inc, mode) {
            clearInterval(scrolling);
            if (inc == "Page") {
                trackScroller();
            } else {
                scrollIt(inc, mode);
            }
            scrolling = setInterval(this, "scrollInterval", getStyle("repeatInterval"), inc, mode);
        }
        function trackScroller(Void) {
            if ((scrollThumb_mc._y + scrollThumb_mc.__get__height()) < _ymouse) {
                scrollIt("Page", 1);
            } else if (scrollThumb_mc._y > _ymouse) {
                scrollIt("Page", -1);
            }
        }
        function dispatchScrollChangedEvent(Void) {
            dispatchEvent({type:"scrollChanged"});
        }
        function stopScrolling(Void) {
            clearInterval(_parent.scrolling);
            _parent.scrollTrackDown_mc.visible = false;
        }
        function releaseScrolling(Void) {
            _parent.releaseFocus();
            stopScrolling();
            _parent.dispatchScrollChangedEvent();
        }
        function trackOver(Void) {
            if (_parent.scrollTrackOverName.length > 0) {
                if (_parent.scrollTrackOver_mc == undefined) {
                    _parent.setSkin(skinIDTrackOver, scrollTrackOverName);
                } else {
                    _parent.scrollTrackOver_mc.visible = true;
                }
            }
        }
        function trackOut(Void) {
            _parent.scrollTrackOver_mc.visible = false;
        }
        function onUpArrow(Void) {
            _parent.scrollIt("Line", -1);
        }
        function onDownArrow(Void) {
            _parent.scrollIt("Line", 1);
        }
        function onScrollChanged(Void) {
            _parent.dispatchScrollChangedEvent();
        }
        static var symbolOwner = mx.core.UIComponent;
        var className = "ScrollBar";
        var minPos = 0;
        var maxPos = 0;
        var pageSize = 0;
        var largeScroll = 0;
        var smallScroll = 1;
        var _scrollPosition = 0;
        var scrollTrackName = "ScrollTrack";
        var scrollTrackOverName = "";
        var scrollTrackDownName = "";
        var upArrowName = "BtnUpArrow";
        var upArrowUpName = "ScrollUpArrowUp";
        var upArrowOverName = "ScrollUpArrowOver";
        var upArrowDownName = "ScrollUpArrowDown";
        var downArrowName = "BtnDownArrow";
        var downArrowUpName = "ScrollDownArrowUp";
        var downArrowOverName = "ScrollDownArrowOver";
        var downArrowDownName = "ScrollDownArrowDown";
        var thumbTopName = "ScrollThumbTopUp";
        var thumbMiddleName = "ScrollThumbMiddleUp";
        var thumbBottomName = "ScrollThumbBottomUp";
        var thumbGripName = "ScrollThumbGripUp";
        static var skinIDTrack = 0;
        static var skinIDTrackOver = 1;
        static var skinIDTrackDown = 2;
        static var skinIDUpArrow = 3;
        static var skinIDDownArrow = 4;
        static var skinIDThumb = 5;
        var idNames = new Array("scrollTrack_mc", "scrollTrackOver_mc", "scrollTrackDown_mc", "upArrow_mc", "downArrow_mc");
        var clipParameters = {minPos:1, maxPos:1, pageSize:1, scrollPosition:1, lineScrollSize:1, pageScrollSize:1, visible:1, enabled:1};
        static var mergedClipParameters = mx.core.UIObject.mergeClipParameters(mx.controls.scrollClasses.ScrollBar.prototype.clipParameters, mx.core.UIComponent.prototype.clipParameters);
        var initializing = true;
    }
﻿
//----------------------------------------------------------------------
//Symbol 159 Button
//----------------------------------------------------------------------
on (release) {
    play();
}
﻿
//----------------------------------------------------------------------
//Symbol 69 MovieClip [ThumbThemeColor3] Frame 1
//----------------------------------------------------------------------
    mx.skins.ColoredSkinElement.setColorStyle(this, "themeColor");

﻿
//----------------------------------------------------------------------
//Symbol 25 MovieClip [SelectableRow] Frame 1
//----------------------------------------------------------------------
    #initclip 50
    Object.registerClass("SelectableRow", mx.controls.listclasses.SelectableRow);
    #endinitclip

    stop();
﻿
//----------------------------------------------------------------------
//Symbol 67 MovieClip [ThumbThemeColor1] Frame 1
//----------------------------------------------------------------------
    mx.skins.ColoredSkinElement.setColorStyle(this, "themeColor");

﻿
//----------------------------------------------------------------------
//Symbol 121 MovieClip [__Packages.mx.skins.ColoredSkinElement] Frame 0
//----------------------------------------------------------------------
    class mx.skins.ColoredSkinElement
    {
        var getStyle, _color, onEnterFrame;
        function ColoredSkinElement () {
        }
        function setColor(c) {
            if (c != undefined) {
                var _local2 = new Color(this);
                _local2.setRGB(c);
            }
        }
        function draw(Void) {
            setColor(getStyle(_color));
            onEnterFrame = undefined;
        }
        function invalidateStyle(Void) {
            onEnterFrame = draw;
        }
        static function setColorStyle(p, colorStyle) {
            if (p._color == undefined) {
                p._color = colorStyle;
            }
            p.setColor = mixins.setColor;
            p.invalidateStyle = mixins.invalidateStyle;
            p.draw = mixins.draw;
            p.setColor(p.getStyle(colorStyle));
        }
        static var mixins = new mx.skins.ColoredSkinElement();
    }
﻿
//----------------------------------------------------------------------
//Symbol 202 Button
//----------------------------------------------------------------------
on (release) {
    next_Music();
}
﻿
//----------------------------------------------------------------------
//Symbol 246 MovieClip Frame 1
//----------------------------------------------------------------------
    stop();

﻿
//----------------------------------------------------------------------
//Symbol 14 MovieClip [Defaults] Frame 1
//----------------------------------------------------------------------
    #initclip 42
    Object.registerClass("Defaults", mx.skins.halo.Defaults);
    #endinitclip

﻿
//----------------------------------------------------------------------
//Instance of Symbol 304 MovieClip in Symbol 305 MovieClip Frame 23
//----------------------------------------------------------------------
onClipEvent (load) {
    dsvote_txt.text = _parent.DS_vote;
    DS_vote = _parent.DS_vote;
}
﻿
//----------------------------------------------------------------------
//Symbol 104 MovieClip [ScrollSelectList] Frame 1
//----------------------------------------------------------------------
    #initclip 63
    Object.registerClass("ScrollSelectList", mx.controls.listclasses.ScrollSelectList);
    #endinitclip

    stop();

﻿
//----------------------------------------------------------------------
//Symbol 134 MovieClip [__Packages.mx.controls.VScrollBar] Frame 0
//----------------------------------------------------------------------
    class mx.controls.VScrollBar extends mx.controls.scrollClasses.ScrollBar
    {
        var scrollIt;
        function VScrollBar () {
            super();
        }
        function init(Void) {
            super.init();
        }
        function isScrollBarKey(k) {
            if (k == 38) {
                scrollIt("Line", -1);
                return(true);
            }
            if (k == 40) {
                scrollIt("Line", 1);
                return(true);
            }
            if (k == 33) {
                scrollIt("Page", -1);
                return(true);
            }
            if (k == 34) {
                scrollIt("Page", 1);
                return(true);
            }
            return(super.isScrollBarKey(k));
        }
        static var symbolName = "VScrollBar";
        static var symbolOwner = mx.core.UIComponent;
        static var version = "2.0.2.126";
        var className = "VScrollBar";
        var minusMode = "Up";
        var plusMode = "Down";
        var minMode = "AtTop";
        var maxMode = "AtBottom";
    }
﻿
//----------------------------------------------------------------------
//Symbol 32 MovieClip [BrdrBlk] Frame 1
//----------------------------------------------------------------------
    mx.skins.ColoredSkinElement.setColorStyle(this, "borderColor");

﻿
//----------------------------------------------------------------------
//Symbol 22 MovieClip [FocusManager] Frame 1
//----------------------------------------------------------------------
    #initclip 47
    Object.registerClass("FocusManager", mx.managers.FocusManager);
    #endinitclip

    stop();

﻿
//----------------------------------------------------------------------
//Symbol 320 MovieClip Frame 3
//----------------------------------------------------------------------
    function close_interval() {
        clearInterval(time_interval);
        nc.close();
    }
    function stopPlay() {
        YLshan_mc1._visible = 0;
        YLshan_mc2._visible = 0;
        clearInterval(intervalTime);
    }
    close_interval();
    stopPlay();
    _root.red5Noplay = false;
    this.play();

﻿
//----------------------------------------------------------------------
//Symbol 5 MovieClip [__Packages.mx.controls.listclasses.DataSelector] Frame 0
//----------------------------------------------------------------------
    class mx.controls.listclasses.DataSelector extends Object
    {
        var __vPosition, setVPosition, __dataProvider, enabled, lastSelID, lastSelected, selected, invUpdateControl, invalidate, multipleSelection, updateControl, __rowCount, rows;
        function DataSelector () {
            super();
        }
        static function Initialize(obj) {
            var _local3 = mixinProps;
            var _local4 = _local3.length;
            obj = obj.prototype;
            var _local1 = 0;
            while (_local1 < _local4) {
                obj[_local3[_local1]] = mixins[_local3[_local1]];
                _local1++;
            }
            mixins.createProp(obj, "dataProvider", true);
            mixins.createProp(obj, "length", false);
            mixins.createProp(obj, "value", false);
            mixins.createProp(obj, "selectedIndex", true);
            mixins.createProp(obj, "selectedIndices", true);
            mixins.createProp(obj, "selectedItems", false);
            mixins.createProp(obj, "selectedItem", true);
            return(true);
        }
        function createProp(obj, propName, setter) {
            var p = (propName.charAt(0).toUpperCase() + propName.substr(1));
            var _local2 = null;
            var _local4 = function (Void) {
                return(this["get" + p]());
            };
            if (setter) {
                _local2 = function (val) {
                    this["set" + p](val);
                };
            }
            obj.addProperty(propName, _local4, _local2);
        }
        function setDataProvider(dP) {
            if (__vPosition != 0) {
                setVPosition(0);
            }
            clearSelected();
            __dataProvider.removeEventListener(this);
            __dataProvider = dP;
            dP.addEventListener("modelChanged", this);
            dP.addView(this);
            modelChanged({eventName:"updateAll"});
        }
        function getDataProvider(Void) {
            return(__dataProvider);
        }
        function addItemAt(index, label, data) {
            if ((index < 0) || (!enabled)) {
                return(undefined);
            }
            var _local2 = __dataProvider;
            if (_local2 == undefined) {
                _local2 = (__dataProvider = new Array());
                _local2.addEventListener("modelChanged", this);
                index = 0;
            }
            if ((typeof(label) == "object") || (typeof(_local2.getItemAt(0)) == "string")) {
                _local2.addItemAt(index, label);
            } else {
                _local2.addItemAt(index, {label:label, data:data});
            }
        }
        function addItem(label, data) {
            addItemAt(__dataProvider.length, label, data);
        }
        function removeItemAt(index) {
            return(__dataProvider.removeItemAt(index));
        }
        function removeAll(Void) {
            __dataProvider.removeAll();
        }
        function replaceItemAt(index, newLabel, newData) {
            if (typeof(newLabel) == "object") {
                __dataProvider.replaceItemAt(index, newLabel);
            } else {
                __dataProvider.replaceItemAt(index, {label:newLabel, data:newData});
            }
        }
        function sortItemsBy(fieldName, order) {
            lastSelID = __dataProvider.getItemID(lastSelected);
            __dataProvider.sortItemsBy(fieldName, order);
        }
        function sortItems(compareFunc, order) {
            lastSelID = __dataProvider.getItemID(lastSelected);
            __dataProvider.sortItems(compareFunc, order);
        }
        function getLength(Void) {
            return(__dataProvider.length);
        }
        function getItemAt(index) {
            return(__dataProvider.getItemAt(index));
        }
        function modelChanged(eventObj) {
            var _local3 = eventObj.firstItem;
            var _local6 = eventObj.lastItem;
            var _local7 = eventObj.eventName;
            if (_local7 == undefined) {
                _local7 = eventObj.event;
                _local3 = eventObj.firstRow;
                _local6 = eventObj.lastRow;
                if (_local7 == "addRows") {
                    _local7 = (eventObj.eventName = "addItems");
                } else if (_local7 == "deleteRows") {
                    _local7 = (eventObj.eventName = "removeItems");
                } else if (_local7 == "updateRows") {
                    _local7 = (eventObj.eventName = "updateItems");
                }
            }
            if (_local7 == "addItems") {
                for (var _local2 in selected) {
                    var _local5 = selected[_local2];
                    if ((_local5 != undefined) && (_local5 >= _local3)) {
                        selected[_local2] = selected[_local2] + ((_local6 - _local3) + 1);
                    }
                }
            } else if (_local7 == "removeItems") {
                if (__dataProvider.length == 0) {
                    delete selected;
                } else {
                    var _local9 = eventObj.removedIDs;
                    var _local10 = _local9.length;
                    var _local2 = 0;
                    while (_local2 < _local10) {
                        var _local4 = _local9[_local2];
                        if (selected[_local4] != undefined) {
                            delete selected[_local4];
                        }
                        _local2++;
                    }
                    for (_local2 in selected) {
                        if (selected[_local2] >= _local3) {
                            selected[_local2] = selected[_local2] - ((_local6 - _local3) + 1);
                        }
                    }
                }
            } else if (_local7 == "sort") {
                if (typeof(__dataProvider.getItemAt(0)) != "object") {
                    delete selected;
                } else {
                    var _local10 = __dataProvider.length;
                    var _local2 = 0;
                    while (_local2 < _local10) {
                        if (isSelected(_local2)) {
                            var _local4 = __dataProvider.getItemID(_local2);
                            if (_local4 == lastSelID) {
                                lastSelected = _local2;
                            }
                            selected[_local4] = _local2;
                        }
                        _local2++;
                    }
                }
            } else if (_local7 == "filterModel") {
                setVPosition(0);
            }
            invUpdateControl = true;
            invalidate();
        }
        function getValue(Void) {
            var _local2 = getSelectedItem();
            if (typeof(_local2) != "object") {
                return(_local2);
            }
            return(((_local2.data == undefined) ? (_local2.label) : (_local2.data)));
        }
        function getSelectedIndex(Void) {
            for (var _local3 in selected) {
                var _local2 = selected[_local3];
                if (_local2 != undefined) {
                    return(_local2);
                }
            }
        }
        function setSelectedIndex(index) {
            if (((index >= 0) && (index < __dataProvider.length)) && (enabled)) {
                delete selected;
                selectItem(index, true);
                lastSelected = index;
                invUpdateControl = true;
                invalidate();
            } else if (index == undefined) {
                clearSelected();
            }
        }
        function getSelectedIndices(Void) {
            var _local2 = new Array();
            for (var _local3 in selected) {
                _local2.push(selected[_local3]);
            }
            _local2.reverse();
            return(((_local2.length > 0) ? (_local2) : undefined));
        }
        function setSelectedIndices(indexArray) {
            if (multipleSelection != true) {
                return(undefined);
            }
            delete selected;
            var _local3 = 0;
            while (_local3 < indexArray.length) {
                var _local2 = indexArray[_local3];
                if ((_local2 >= 0) && (_local2 < __dataProvider.length)) {
                    selectItem(_local2, true);
                }
                _local3++;
            }
            invUpdateControl = true;
            updateControl();
        }
        function getSelectedItems(Void) {
            var _local3 = getSelectedIndices();
            var _local4 = new Array();
            var _local2 = 0;
            while (_local2 < _local3.length) {
                _local4.push(getItemAt(_local3[_local2]));
                _local2++;
            }
            return(((_local4.length > 0) ? (_local4) : undefined));
        }
        function getSelectedItem(Void) {
            return(__dataProvider.getItemAt(getSelectedIndex()));
        }
        function selectItem(index, selectedFlag) {
            if (selected == undefined) {
                selected = new Object();
            }
            var _local2 = __dataProvider.getItemID(index);
            if (_local2 == undefined) {
                return(undefined);
            }
            if (selectedFlag && (!isSelected(index))) {
                selected[_local2] = index;
            } else if (!selectedFlag) {
                delete selected[_local2];
            }
        }
        function isSelected(index) {
            var _local2 = __dataProvider.getItemID(index);
            if (_local2 == undefined) {
                return(false);
            }
            return(selected[_local2] != undefined);
        }
        function clearSelected(transition) {
            var _local3 = 0;
            for (var _local4 in selected) {
                var _local2 = selected[_local4];
                if (((_local2 != undefined) && (__vPosition <= _local2)) && (_local2 < (__vPosition + __rowCount))) {
                    rows[_local2 - __vPosition].drawRow(rows[_local2 - __vPosition].item, "normal", transition && ((_local3 % 3) == 0));
                }
                _local3++;
            }
            delete selected;
        }
        static var mixins = new mx.controls.listclasses.DataSelector();
        static var mixinProps = ["setDataProvider", "getDataProvider", "addItem", "addItemAt", "removeAll", "removeItemAt", "replaceItemAt", "sortItemsBy", "sortItems", "getLength", "getItemAt", "modelChanged", "calcPreferredWidthFromData", "calcPreferredHeightFromData", "getValue", "getSelectedIndex", "getSelectedItem", "getSelectedIndices", "getSelectedItems", "selectItem", "isSelected", "clearSelected", "setSelectedIndex", "setSelectedIndices"];
    }
﻿
//----------------------------------------------------------------------
//Instance of Symbol 270 MovieClip in Symbol 295 MovieClip Frame 3
//----------------------------------------------------------------------
on (rollOver) {
    _parent.jing_mc.gotoAndPlay("\u5F00\u59CB");
    _parent.jing_mc.intotext = "\u7CBE\u9009DJ\u4F5C\u54C1\uFF0C\u53EA\u80FDVIP\u4F1A\u5458\u4E0B\u8F7D";
}
on (release) {
    _root.R_list_mc.R_menu.reloadDJtype("hotYuanChuang", "\u7CBE\u54C1\u4E32\u70E7");
}
﻿
//----------------------------------------------------------------------
//Symbol 295 MovieClip Frame 1
//----------------------------------------------------------------------
    stop();
﻿
//----------------------------------------------------------------------
//Symbol 296 MovieClip Frame 1652
//----------------------------------------------------------------------
    stop();
    var up_DJcount = new LoadVars();
    var thisPath = ((_root.DataAsp + "upDJ_count.asp?music_ID=") + _root.playerMusic_ID);
    trace("\u5F00\u59CB\u66F4\u65B0\u8BD5\u542C\u6B21\u6570");
    up_DJcount.load(thisPath);
    up_DJcount.onLoad = function (success) {
        if (success) {
            trace("\u66F4\u65B0\u8BD5\u542C\u6B21\u6570\u6210\u529F\u3002");
        }
    };
﻿
//----------------------------------------------------------------------
//Symbol 229 Button
//----------------------------------------------------------------------
on (release) {
    getURL (((_root.webApp + "fenXiang.asp?id=") + _root.playerMusic_ID) + "&FXtype=sina", "_blank");
    _root.openURL(((_root.webApp + "fenXiang.asp?id=") + _root.playerMusic_ID) + "&FXtype=sina");
}
﻿
//----------------------------------------------------------------------
//Symbol 110 MovieClip [__Packages.mx.skins.Border] Frame 0
//----------------------------------------------------------------------
    class mx.skins.Border extends mx.core.UIObject
    {
        function Border () {
            super();
        }
        function init(Void) {
            super.init();
        }
        static var symbolName = "Border";
        static var symbolOwner = mx.skins.Border;
        var className = "Border";
        var tagBorder = 0;
        var idNames = new Array("border_mc");
    }
﻿
//----------------------------------------------------------------------
//Symbol 295 MovieClip Frame 11
//----------------------------------------------------------------------
    stop();

﻿
//----------------------------------------------------------------------
//Instance of Symbol 179 MovieClip "Vol_mc" in Symbol 180 MovieClip Frame 1
//----------------------------------------------------------------------
onClipEvent (load) {
    this._visible = 0;
}
﻿
//----------------------------------------------------------------------
//Symbol 23 MovieClip [UIComponentExtensions] Frame 1
//----------------------------------------------------------------------
    #initclip 48
    Object.registerClass("UIComponentExtensions", mx.core.ext.UIComponentExtensions);
    #endinitclip

﻿
//----------------------------------------------------------------------
//Instance of Symbol 101 MovieClip [VScrollBar] in Symbol 103 MovieClip [ScrollView] Frame 2
//----------------------------------------------------------------------
//component parameters
onClipEvent (initialize) {
    enabled = true;
    visible = true;
    minHeight = 0;
    minWidth = 0;
}
﻿
//----------------------------------------------------------------------
//Symbol 114 MovieClip [__Packages.mx.core.ExternalContent] Frame 0
//----------------------------------------------------------------------
    class mx.core.ExternalContent
    {
        var createObject, numChildren, prepList, doLater, loadList, dispatchEvent, loadedList, childLoaded;
        function ExternalContent () {
        }
        function loadExternal(url, placeholderClassName, instanceName, depth, initProps) {
            var _local2;
            _local2 = createObject(placeholderClassName, instanceName, depth, initProps);
            this[mx.core.View.childNameBase + numChildren] = _local2;
            if (prepList == undefined) {
                prepList = new Object();
            }
            prepList[instanceName] = {obj:_local2, url:url, complete:false, initProps:initProps};
            prepareToLoadMovie(_local2);
            return(_local2);
        }
        function prepareToLoadMovie(obj) {
            obj.unloadMovie();
            doLater(this, "waitForUnload");
        }
        function waitForUnload() {
            var _local3;
            for (_local3 in prepList) {
                var _local2 = prepList[_local3];
                if (_local2.obj.getBytesTotal() == 0) {
                    if (loadList == undefined) {
                        loadList = new Object();
                    }
                    loadList[_local3] = _local2;
                    _local2.obj.loadMovie(_local2.url);
                    delete prepList[_local3];
                    doLater(this, "checkLoadProgress");
                } else {
                    doLater(this, "waitForUnload");
                }
            }
        }
        function checkLoadProgress() {
            var _local8 = false;
            var _local3;
            for (_local3 in loadList) {
                var _local2 = loadList[_local3];
                _local2.loaded = _local2.obj.getBytesLoaded();
                _local2.total = _local2.obj.getBytesTotal();
                if (_local2.total > 0) {
                    _local2.obj._visible = false;
                    dispatchEvent({type:"progress", target:_local2.obj, current:_local2.loaded, total:_local2.total});
                    if (_local2.loaded == _local2.total) {
                        if (loadedList == undefined) {
                            loadedList = new Object();
                        }
                        loadedList[_local3] = _local2;
                        delete loadList[_local3];
                        doLater(this, "contentLoaded");
                    }
                } else if (_local2.total == -1) {
                    if (_local2.failedOnce != undefined) {
                        _local2.failedOnce++;
                        if (_local2.failedOnce > 3) {
                            dispatchEvent({type:"complete", target:_local2.obj, current:_local2.loaded, total:_local2.total});
                            delete loadList[_local3];
                        }
                    } else {
                        _local2.failedOnce = 0;
                    }
                }
                _local8 = true;
            }
            if (_local8) {
                doLater(this, "checkLoadProgress");
            }
        }
        function contentLoaded() {
            var _local4;
            for (_local4 in loadedList) {
                var _local2 = loadedList[_local4];
                _local2.obj._visible = true;
                _local2.obj._complete = true;
                var _local3;
                for (_local3 in _local2.initProps) {
                    _local2.obj[_local3] = _local2.initProps[_local3];
                }
                childLoaded(_local2.obj);
                dispatchEvent({type:"complete", target:_local2.obj, current:_local2.loaded, total:_local2.total});
                delete loadedList[_local4];
            }
        }
        function convertToUIObject(obj) {
            if (obj.setSize == undefined) {
                var _local2 = mx.core.UIObject.prototype;
                obj.addProperty("width", _local2.__get__width, null);
                obj.addProperty("height", _local2.__get__height, null);
                obj.addProperty("left", _local2.__get__left, null);
                obj.addProperty("x", _local2.__get__x, null);
                obj.addProperty("top", _local2.__get__top, null);
                obj.addProperty("y", _local2.__get__y, null);
                obj.addProperty("right", _local2.__get__right, null);
                obj.addProperty("bottom", _local2.__get__bottom, null);
                obj.addProperty("visible", _local2.__get__visible, _local2.__set__visible);
                obj.move = mx.core.UIObject.prototype.move;
                obj.setSize = mx.core.UIObject.prototype.setSize;
                obj.size = mx.core.UIObject.prototype.size;
                mx.events.UIEventDispatcher.initialize(obj);
            }
        }
        static function enableExternalContent() {
        }
        static function classConstruct() {
            var _local1 = mx.core.View.prototype;
            var _local2 = mx.core.ExternalContent.prototype;
            _local1.loadExternal = _local2.loadExternal;
            _local1.prepareToLoadMovie = _local2.prepareToLoadMovie;
            _local1.waitForUnload = _local2.waitForUnload;
            _local1.checkLoadProgress = _local2.checkLoadProgress;
            _local1.contentLoaded = _local2.contentLoaded;
            _local1.convertToUIObject = _local2.convertToUIObject;
            return(true);
        }
        static var classConstructed = classConstruct();
        static var ViewDependency = mx.core.View;
    }
﻿
//----------------------------------------------------------------------
//Symbol 222 MovieClip Frame 1
//----------------------------------------------------------------------
    stop();

﻿
//----------------------------------------------------------------------
//Symbol 303 Button
//----------------------------------------------------------------------
on (release) {
    getURL ((_root.userPath + "DSvote.asp?music_ID=") + _root.playerMusic_ID, "_blank");
}
﻿
//----------------------------------------------------------------------
//Symbol 115 MovieClip [__Packages.mx.skins.CustomBorder] Frame 0
//----------------------------------------------------------------------
    class mx.skins.CustomBorder extends mx.skins.Border
    {
        var __width, __height, l_mc, setSkin, minHeight, minWidth, m_mc, r_mc;
        function CustomBorder () {
            super();
        }
        function get width() {
            return(__width);
        }
        function get height() {
            return(__height);
        }
        function init(Void) {
            super.init();
        }
        function createChildren(Void) {
        }
        function draw(Void) {
            if (l_mc == undefined) {
                var _local2 = setSkin(tagL, leftSkin);
                if (horizontal) {
                    minHeight = l_mc._height;
                    minWidth = l_mc._width;
                } else {
                    minHeight = l_mc._height;
                    minWidth = l_mc._width;
                }
            }
            if (m_mc == undefined) {
                setSkin(tagM, middleSkin);
                if (horizontal) {
                    minHeight = m_mc._height;
                    minWidth = minWidth + m_mc._width;
                } else {
                    minHeight = minHeight + m_mc._height;
                    minWidth = m_mc._width;
                }
            }
            if (r_mc == undefined) {
                setSkin(tagR, rightSkin);
                if (horizontal) {
                    minHeight = r_mc._height;
                    minWidth = minWidth + r_mc._width;
                } else {
                    minHeight = minHeight + r_mc._height;
                    minWidth = r_mc._width;
                }
            }
            size();
        }
        function size(Void) {
            l_mc.move(0, 0);
            if (horizontal) {
                r_mc.move(width - r_mc.width, 0);
                m_mc.move(l_mc.width, 0);
                m_mc.setSize(r_mc.x - m_mc.x, m_mc.height);
            } else {
                r_mc.move(0, height - r_mc.height, 0);
                m_mc.move(0, l_mc.height);
                m_mc.setSize(m_mc.width, r_mc.y - m_mc.y);
            }
        }
        static var symbolName = "CustomBorder";
        static var symbolOwner = mx.skins.CustomBorder;
        static var version = "2.0.2.126";
        var className = "CustomBorder";
        static var tagL = 0;
        static var tagM = 1;
        static var tagR = 2;
        var idNames = new Array("l_mc", "m_mc", "r_mc");
        var leftSkin = "F3PieceLeft";
        var middleSkin = "F3PieceMiddle";
        var rightSkin = "F3PieceRight";
        var horizontal = true;
    }
﻿
//----------------------------------------------------------------------
//Symbol 295 MovieClip Frame 3
//----------------------------------------------------------------------
    stop();

﻿
//----------------------------------------------------------------------
//Symbol 122 MovieClip [__Packages.mx.core.ext.UIObjectExtensions] Frame 0
//----------------------------------------------------------------------
    class mx.core.ext.UIObjectExtensions
    {
        function UIObjectExtensions () {
        }
        static function addGeometry(tf, ui) {
            tf.addProperty("width", ui.__get__width, null);
            tf.addProperty("height", ui.__get__height, null);
            tf.addProperty("left", ui.__get__left, null);
            tf.addProperty("x", ui.__get__x, null);
            tf.addProperty("top", ui.__get__top, null);
            tf.addProperty("y", ui.__get__y, null);
            tf.addProperty("right", ui.__get__right, null);
            tf.addProperty("bottom", ui.__get__bottom, null);
            tf.addProperty("visible", ui.__get__visible, ui.__set__visible);
        }
        static function Extensions() {
            if (bExtended == true) {
                return(true);
            }
            bExtended = true;
            var _local6 = mx.core.UIObject.prototype;
            var _local9 = mx.skins.SkinElement.prototype;
            addGeometry(_local9, _local6);
            mx.events.UIEventDispatcher.initialize(_local6);
            var _local13 = mx.skins.ColoredSkinElement;
            mx.styles.CSSTextStyles.addTextStyles(_local6);
            var _local5 = MovieClip.prototype;
            _local5.getTopLevel = _local6.getTopLevel;
            _local5.createLabel = _local6.createLabel;
            _local5.createObject = _local6.createObject;
            _local5.createClassObject = _local6.createClassObject;
            _local5.createEmptyObject = _local6.createEmptyObject;
            _local5.destroyObject = _local6.destroyObject;
            _global.ASSetPropFlags(_local5, "getTopLevel", 1);
            _global.ASSetPropFlags(_local5, "createLabel", 1);
            _global.ASSetPropFlags(_local5, "createObject", 1);
            _global.ASSetPropFlags(_local5, "createClassObject", 1);
            _global.ASSetPropFlags(_local5, "createEmptyObject", 1);
            _global.ASSetPropFlags(_local5, "destroyObject", 1);
            _local5.__getTextFormat = _local6.__getTextFormat;
            _local5._getTextFormat = _local6._getTextFormat;
            _local5.getStyleName = _local6.getStyleName;
            _local5.getStyle = _local6.getStyle;
            _global.ASSetPropFlags(_local5, "__getTextFormat", 1);
            _global.ASSetPropFlags(_local5, "_getTextFormat", 1);
            _global.ASSetPropFlags(_local5, "getStyleName", 1);
            _global.ASSetPropFlags(_local5, "getStyle", 1);
            var _local7 = TextField.prototype;
            addGeometry(_local7, _local6);
            _local7.addProperty("enabled", function () {
                return(this.__enabled);
            }, function (x) {
                this.__enabled = x;
                this.invalidateStyle();
            });
            _local7.move = _local9.move;
            _local7.setSize = _local9.setSize;
            _local7.invalidateStyle = function () {
                this.invalidateFlag = true;
            };
            _local7.draw = function () {
                if (this.invalidateFlag) {
                    this.invalidateFlag = false;
                    var _local2 = this._getTextFormat();
                    this.setTextFormat(_local2);
                    this.setNewTextFormat(_local2);
                    this.embedFonts = _local2.embedFonts == true;
                    if (this.__text != undefined) {
                        if (this.text == "") {
                            this.text = this.__text;
                        }
                        delete this.__text;
                    }
                    this._visible = true;
                }
            };
            _local7.setColor = function (color) {
                this.textColor = color;
            };
            _local7.getStyle = _local5.getStyle;
            _local7.__getTextFormat = _local6.__getTextFormat;
            _local7.setValue = function (v) {
                this.text = v;
            };
            _local7.getValue = function () {
                return(this.text);
            };
            _local7.addProperty("value", function () {
                return(this.getValue());
            }, function (v) {
                this.setValue(v);
            });
            _local7._getTextFormat = function () {
                var _local2 = this.stylecache.tf;
                if (_local2 != undefined) {
                    return(_local2);
                }
                _local2 = new TextFormat();
                this.__getTextFormat(_local2);
                this.stylecache.tf = _local2;
                if (this.__enabled == false) {
                    if (this.enabledColor == undefined) {
                        var _local4 = this.getTextFormat();
                        this.enabledColor = _local4.color;
                    }
                    var _local3 = this.getStyle("disabledColor");
                    _local2.color = _local3;
                } else if (this.enabledColor != undefined) {
                    if (_local2.color == undefined) {
                        _local2.color = this.enabledColor;
                    }
                }
                return(_local2);
            };
            _local7.getPreferredWidth = function () {
                this.draw();
                return(this.textWidth + 4);
            };
            _local7.getPreferredHeight = function () {
                this.draw();
                return(this.textHeight + 4);
            };
            TextFormat.prototype.getTextExtent2 = function (s) {
                var _local3 = _root._getTextExtent;
                if (_local3 == undefined) {
                    _root.createTextField("_getTextExtent", -2, 0, 0, 1000, 100);
                    _local3 = _root._getTextExtent;
                    _local3._visible = false;
                }
                _root._getTextExtent.text = s;
                var _local4 = this.align;
                this.align = "left";
                _root._getTextExtent.setTextFormat(this);
                this.align = _local4;
                return({width:_local3.textWidth, height:_local3.textHeight});
            };
            if (_global.style == undefined) {
                _global.style = new mx.styles.CSSStyleDeclaration();
                _global.cascadingStyles = true;
                _global.styles = new Object();
                _global.skinRegistry = new Object();
                if (_global._origWidth == undefined) {
                    _global.origWidth = Stage.width;
                    _global.origHeight = Stage.height;
                }
            }
            var _local4 = _root;
            while (_local4._parent != undefined) {
                _local4 = _local4._parent;
            }
            _local4.addProperty("width", function () {
                return(Stage.width);
            }, null);
            _local4.addProperty("height", function () {
                return(Stage.height);
            }, null);
            _global.ASSetPropFlags(_local4, "width", 1);
            _global.ASSetPropFlags(_local4, "height", 1);
            return(true);
        }
        static var bExtended = false;
        static var UIObjectExtended = Extensions();
        static var UIObjectDependency = mx.core.UIObject;
        static var SkinElementDependency = mx.skins.SkinElement;
        static var CSSTextStylesDependency = mx.styles.CSSTextStyles;
        static var UIEventDispatcherDependency = mx.events.UIEventDispatcher;
    }
﻿
//----------------------------------------------------------------------
//Symbol 295 MovieClip Frame 6
//----------------------------------------------------------------------
    stop();

﻿
//----------------------------------------------------------------------
//Symbol 54 MovieClip [ScrollThemeColor1] Frame 1
//----------------------------------------------------------------------
    mx.skins.ColoredSkinElement.setColorStyle(this, "themeColor");

﻿
//----------------------------------------------------------------------
//Symbol 98 MovieClip [BtnUpArrow] Frame 1
//----------------------------------------------------------------------
    #initclip 58
    Object.registerClass("BtnUpArrow", mx.controls.SimpleButton);
    #endinitclip

﻿
//----------------------------------------------------------------------
//Symbol 117 MovieClip [__Packages.mx.controls.SimpleButton] Frame 0
//----------------------------------------------------------------------
    class mx.controls.SimpleButton extends mx.core.UIComponent
    {
        static var emphasizedStyleDeclaration;
        var preset, boundingBox_mc, useHandCursor, skinName, linkLength, iconName, destroyObject, __width, _width, __height, _height, __emphaticStyleName, styleName, enabled, invalidate, pressFocus, dispatchEvent, autoRepeat, interval, getStyle, releaseFocus, createLabel, invalidateStyle;
        function SimpleButton () {
            super();
        }
        function init(Void) {
            super.init();
            if (preset == undefined) {
                boundingBox_mc._visible = false;
                boundingBox_mc._width = (boundingBox_mc._height = 0);
            }
            useHandCursor = false;
        }
        function createChildren(Void) {
            if (preset != undefined) {
                var _local2 = this[idNames[preset]];
                this[refNames[preset]] = _local2;
                skinName = _local2;
                if (falseOverSkin.length == 0) {
                    rolloverSkin = fus;
                }
                if (falseOverIcon.length == 0) {
                    rolloverIcon = fui;
                }
                initializing = false;
            } else if (__state == true) {
                setStateVar(true);
            } else {
                if (falseOverSkin.length == 0) {
                    rolloverSkin = fus;
                }
                if (falseOverIcon.length == 0) {
                    rolloverIcon = fui;
                }
            }
        }
        function setIcon(tag, linkageName) {
            return(setSkin(tag + 8, linkageName));
        }
        function changeIcon(tag, linkageName) {
            linkLength = linkageName.length;
            var _local2 = stateNames[tag] + "Icon";
            this[_local2] = linkageName;
            this[idNames[tag + 8]] = _local2;
            setStateVar(getState());
        }
        function changeSkin(tag, linkageName) {
            var _local2 = stateNames[tag] + "Skin";
            this[_local2] = linkageName;
            this[idNames[tag]] = _local2;
            setStateVar(getState());
        }
        function viewIcon(varName) {
            var _local4 = varName + "Icon";
            var _local3 = this[_local4];
            if (typeof(_local3) == "string") {
                var _local5 = _local3;
                if (__emphasized) {
                    if (this[_local3 + "Emphasized"].length > 0) {
                        _local3 = _local3 + "Emphasized";
                    }
                }
                if (this[_local3].length == 0) {
                    return(undefined);
                }
                _local3 = setIcon(tagMap[_local5], this[_local3]);
                if ((_local3 == undefined) && (_global.isLivePreview)) {
                    _local3 = setIcon(0, "ButtonIcon");
                }
                this[_local4] = _local3;
            }
            iconName._visible = false;
            iconName = _local3;
            iconName._visible = true;
        }
        function removeIcons() {
            var _local3 = 0;
            while (_local3 < 2) {
                var _local2 = 8;
                while (_local2 < 16) {
                    destroyObject(idNames[_local2]);
                    this[stateNames[_local2 - 8] + "Icon"] = "";
                    _local2++;
                }
                _local3++;
            }
            refresh();
        }
        function setSkin(tag, linkageName, initobj) {
            var _local3 = super.setSkin(tag, linkageName, ((initobj != undefined) ? (initobj) : ({styleName:this})));
            calcSize(tag, _local3);
            return(_local3);
        }
        function calcSize(Void) {
            __width = _width;
            __height = _height;
        }
        function viewSkin(varName, initObj) {
            var _local3 = varName + "Skin";
            var _local2 = this[_local3];
            if (typeof(_local2) == "string") {
                var _local4 = _local2;
                if (__emphasized) {
                    if (this[_local2 + "Emphasized"].length > 0) {
                        _local2 = _local2 + "Emphasized";
                    }
                }
                if (this[_local2].length == 0) {
                    return(undefined);
                }
                _local2 = setSkin(tagMap[_local4], this[_local2], ((initObj != undefined) ? (initObj) : ({styleName:this})));
                this[_local3] = _local2;
            }
            skinName._visible = false;
            skinName = _local2;
            skinName._visible = true;
        }
        function showEmphasized(e) {
            if (e && (!__emphatic)) {
                if (emphasizedStyleDeclaration != undefined) {
                    __emphaticStyleName = styleName;
                    styleName = emphasizedStyleDeclaration;
                }
                __emphatic = true;
            } else {
                if (__emphatic) {
                    styleName = __emphaticStyleName;
                }
                __emphatic = false;
            }
        }
        function refresh(Void) {
            var _local2 = getState();
            if (enabled == false) {
                viewIcon("disabled");
                viewSkin("disabled");
            } else {
                viewSkin(phase);
                viewIcon(phase);
            }
            setView(phase == "down");
            iconName.enabled = enabled;
        }
        function setView(offset) {
            if (iconName == undefined) {
                return(undefined);
            }
            var _local2 = (offset ? (btnOffset) : 0);
            iconName._x = ((__width - iconName._width) / 2) + _local2;
            iconName._y = ((__height - iconName._height) / 2) + _local2;
        }
        function setStateVar(state) {
            if (state) {
                if (trueOverSkin.length == 0) {
                    rolloverSkin = tus;
                } else {
                    rolloverSkin = trs;
                }
                if (trueOverIcon.length == 0) {
                    rolloverIcon = tui;
                } else {
                    rolloverIcon = tri;
                }
                upSkin = tus;
                downSkin = tds;
                disabledSkin = dts;
                upIcon = tui;
                downIcon = tdi;
                disabledIcon = dti;
            } else {
                if (falseOverSkin.length == 0) {
                    rolloverSkin = fus;
                } else {
                    rolloverSkin = frs;
                }
                if (falseOverIcon.length == 0) {
                    rolloverIcon = fui;
                } else {
                    rolloverIcon = fri;
                }
                upSkin = fus;
                downSkin = fds;
                disabledSkin = dfs;
                upIcon = fui;
                downIcon = fdi;
                disabledIcon = dfi;
            }
            __state = state;
        }
        function setState(state) {
            if (state != __state) {
                setStateVar(state);
                invalidate();
            }
        }
        function size(Void) {
            refresh();
        }
        function draw(Void) {
            if (initializing) {
                initializing = false;
                skinName.visible = true;
                iconName.visible = true;
            }
            size();
        }
        function getState(Void) {
            return(__state);
        }
        function setToggle(val) {
            __toggle = val;
            if (__toggle == false) {
                setState(false);
            }
        }
        function getToggle(Void) {
            return(__toggle);
        }
        function set toggle(val) {
            setToggle(val);
            //return(toggle);
        }
        function get toggle() {
            return(getToggle());
        }
        function set value(val) {
            setSelected(val);
            //return(value);
        }
        function get value() {
            return(getSelected());
        }
        function set selected(val) {
            setSelected(val);
            //return(selected);
        }
        function get selected() {
            return(getSelected());
        }
        function setSelected(val) {
            if (__toggle) {
                setState(val);
            } else {
                setState((initializing ? (val) : (__state)));
            }
        }
        function getSelected() {
            return(__state);
        }
        function setEnabled(val) {
            if (enabled != val) {
                super.setEnabled(val);
                invalidate();
            }
        }
        function onPress(Void) {
            pressFocus();
            phase = "down";
            refresh();
            dispatchEvent({type:"buttonDown"});
            if (autoRepeat) {
                interval = setInterval(this, "onPressDelay", getStyle("repeatDelay"));
            }
        }
        function onPressDelay(Void) {
            dispatchEvent({type:"buttonDown"});
            if (autoRepeat) {
                clearInterval(interval);
                interval = setInterval(this, "onPressRepeat", getStyle("repeatInterval"));
            }
        }
        function onPressRepeat(Void) {
            dispatchEvent({type:"buttonDown"});
            updateAfterEvent();
        }
        function onRelease(Void) {
            releaseFocus();
            phase = "rollover";
            if (interval != undefined) {
                clearInterval(interval);
                delete interval;
            }
            if (getToggle()) {
                setState(!getState());
            } else {
                refresh();
            }
            dispatchEvent({type:"click"});
        }
        function onDragOut(Void) {
            phase = "up";
            refresh();
            dispatchEvent({type:"buttonDragOut"});
        }
        function onDragOver(Void) {
            if (phase != "up") {
                onPress();
                return(undefined);
            }
            phase = "down";
            refresh();
        }
        function onReleaseOutside(Void) {
            releaseFocus();
            phase = "up";
            if (interval != undefined) {
                clearInterval(interval);
                delete interval;
            }
        }
        function onRollOver(Void) {
            phase = "rollover";
            refresh();
        }
        function onRollOut(Void) {
            phase = "up";
            refresh();
        }
        function getLabel(Void) {
            return(fui.text);
        }
        function setLabel(val) {
            if (typeof(fui) == "string") {
                createLabel("fui", 8, val);
                fui.styleName = this;
            } else {
                fui.text = val;
            }
            var _local4 = fui._getTextFormat();
            var _local2 = _local4.getTextExtent2(val);
            fui._width = _local2.width + 5;
            fui._height = _local2.height + 5;
            iconName = fui;
            setView(__state);
        }
        function get emphasized() {
            return(__emphasized);
        }
        function set emphasized(val) {
            __emphasized = val;
            var _local2 = 0;
            while (_local2 < 8) {
                this[idNames[_local2]] = stateNames[_local2] + "Skin";
                if (typeof(this[idNames[_local2 + 8]]) == "movieclip") {
                    this[idNames[_local2 + 8]] = stateNames[_local2] + "Icon";
                }
                _local2++;
            }
            showEmphasized(__emphasized);
            setStateVar(__state);
            invalidateStyle();
            //return(emphasized);
        }
        function keyDown(e) {
            if (e.code == 32) {
                onPress();
            }
        }
        function keyUp(e) {
            if (e.code == 32) {
                onRelease();
            }
        }
        function onKillFocus(newFocus) {
            super.onKillFocus();
            if (phase != "up") {
                phase = "up";
                refresh();
            }
        }
        static var symbolName = "SimpleButton";
        static var symbolOwner = mx.controls.SimpleButton;
        static var version = "2.0.2.126";
        var className = "SimpleButton";
        var style3dInset = 4;
        var btnOffset = 1;
        var __toggle = false;
        var __state = false;
        var __emphasized = false;
        var __emphatic = false;
        static var falseUp = 0;
        static var falseDown = 1;
        static var falseOver = 2;
        static var falseDisabled = 3;
        static var trueUp = 4;
        static var trueDown = 5;
        static var trueOver = 6;
        static var trueDisabled = 7;
        var falseUpSkin = "SimpleButtonUp";
        var falseDownSkin = "SimpleButtonIn";
        var falseOverSkin = "";
        var falseDisabledSkin = "SimpleButtonUp";
        var trueUpSkin = "SimpleButtonIn";
        var trueDownSkin = "";
        var trueOverSkin = "";
        var trueDisabledSkin = "SimpleButtonIn";
        var falseUpIcon = "";
        var falseDownIcon = "";
        var falseOverIcon = "";
        var falseDisabledIcon = "";
        var trueUpIcon = "";
        var trueDownIcon = "";
        var trueOverIcon = "";
        var trueDisabledIcon = "";
        var phase = "up";
        var fui = "falseUpIcon";
        var fus = "falseUpSkin";
        var fdi = "falseDownIcon";
        var fds = "falseDownSkin";
        var frs = "falseOverSkin";
        var fri = "falseOverIcon";
        var dfi = "falseDisabledIcon";
        var dfs = "falseDisabledSkin";
        var tui = "trueUpIcon";
        var tus = "trueUpSkin";
        var tdi = "trueDownIcon";
        var tds = "trueDownSkin";
        var trs = "trueOverSkin";
        var tri = "trueOverIcon";
        var dts = "trueDisabledSkin";
        var dti = "trueDisabledIcon";
        var rolloverSkin = mx.controls.SimpleButton.prototype.frs;
        var rolloverIcon = mx.controls.SimpleButton.prototype.fri;
        var upSkin = mx.controls.SimpleButton.prototype.fus;
        var downSkin = mx.controls.SimpleButton.prototype.fds;
        var disabledSkin = mx.controls.SimpleButton.prototype.dfs;
        var upIcon = mx.controls.SimpleButton.prototype.fui;
        var downIcon = mx.controls.SimpleButton.prototype.fdi;
        var disabledIcon = mx.controls.SimpleButton.prototype.dfi;
        var initializing = true;
        var idNames = ["fus", "fds", "frs", "dfs", "tus", "tds", "trs", "dts", "fui", "fdi", "fri", "dfi", "tui", "tdi", "tri", "dti"];
        var stateNames = ["falseUp", "falseDown", "falseOver", "falseDisabled", "trueUp", "trueDown", "trueOver", "trueDisabled"];
        var refNames = ["upSkin", "downSkin", "rolloverSkin", "disabledSkin"];
        var tagMap = {falseUpSkin:0, falseDownSkin:1, falseOverSkin:2, falseDisabledSkin:3, trueUpSkin:4, trueDownSkin:5, trueOverSkin:6, trueDisabledSkin:7, falseUpIcon:0, falseDownIcon:1, falseOverIcon:2, falseDisabledIcon:3, trueUpIcon:4, trueDownIcon:5, trueOverIcon:6, trueDisabledIcon:7};
    }
﻿
//----------------------------------------------------------------------
//Symbol 12 MovieClip [DataProvider] Frame 1
//----------------------------------------------------------------------
    #initclip 40
    Object.registerClass("DataProvider", mx.controls.listclasses.DataProvider);
    #endinitclip

    stop();
﻿
//----------------------------------------------------------------------
//Symbol 124 MovieClip [__Packages.mx.managers.SystemManager] Frame 0
//----------------------------------------------------------------------
    class mx.managers.SystemManager
    {
        static var _xAddEventListener, addEventListener, __addEventListener, _xRemoveEventListener, removeEventListener, __removeEventListener, form, __screen, dispatchEvent;
        function SystemManager () {
        }
        static function init(Void) {
            if (_initialized == false) {
                _initialized = true;
                mx.events.EventDispatcher.initialize(mx.managers.SystemManager);
                Mouse.addListener(mx.managers.SystemManager);
                Stage.addListener(mx.managers.SystemManager);
                _xAddEventListener = addEventListener;
                addEventListener = __addEventListener;
                _xRemoveEventListener = removeEventListener;
                removeEventListener = __removeEventListener;
            }
        }
        static function addFocusManager(f) {
            form = f;
            f.focusManager.activate();
        }
        static function removeFocusManager(f) {
        }
        static function onMouseDown(Void) {
            var _local1 = form;
            _local1.focusManager._onMouseDown();
        }
        static function onResize(Void) {
            var _local7 = Stage.width;
            var _local6 = Stage.height;
            var _local9 = _global.origWidth;
            var _local8 = _global.origHeight;
            var _local3 = Stage.align;
            var _local5 = (_local9 - _local7) / 2;
            var _local4 = (_local8 - _local6) / 2;
            if (_local3 == "T") {
                _local4 = 0;
            } else if (_local3 == "B") {
                _local4 = _local8 - _local6;
            } else if (_local3 == "L") {
                _local5 = 0;
            } else if (_local3 == "R") {
                _local5 = _local9 - _local7;
            } else if (_local3 == "LT") {
                _local4 = 0;
                _local5 = 0;
            } else if (_local3 == "TR") {
                _local4 = 0;
                _local5 = _local9 - _local7;
            } else if (_local3 == "LB") {
                _local4 = _local8 - _local6;
                _local5 = 0;
            } else if (_local3 == "RB") {
                _local4 = _local8 - _local6;
                _local5 = _local9 - _local7;
            }
            if (__screen == undefined) {
                __screen = new Object();
            }
            __screen.x = _local5;
            __screen.y = _local4;
            __screen.width = _local7;
            __screen.height = _local6;
            _root.focusManager.relocate();
            dispatchEvent({type:"resize"});
        }
        static function get screen() {
            init();
            if (__screen == undefined) {
                onResize();
            }
            return(__screen);
        }
        static var _initialized = false;
        static var idleFrames = 0;
        static var isMouseDown = false;
        static var forms = new Array();
    }
﻿
//----------------------------------------------------------------------
//Symbol 241 Button
//----------------------------------------------------------------------
on (release) {
    getURL (((_root.webApp + "fenXiang.asp?id=") + _root.playerMusic_ID) + "&FXtype=QQhome", "_blank");
    _root.openURL(((_root.webApp + "fenXiang.asp?id=") + _root.playerMusic_ID) + "&FXtype=QQhome");
}
﻿
//----------------------------------------------------------------------
//Instance of Symbol 100 MovieClip [HScrollBar] in Symbol 103 MovieClip [ScrollView] Frame 2
//----------------------------------------------------------------------
//component parameters
onClipEvent (initialize) {
    enabled = true;
    visible = true;
    minHeight = 0;
    minWidth = 0;
}
﻿
//----------------------------------------------------------------------
//Symbol 250 MovieClip Frame 7
//----------------------------------------------------------------------
    stop();

﻿
//----------------------------------------------------------------------
//Symbol 320 MovieClip Frame 1
//----------------------------------------------------------------------
    function loadHomeCount_mc() {
        homeLookCount = _root.homeLookCount;
        if (_root.homeVIP == "1") {
            vip._visible = 1;
        } else {
            vip._visible = 0;
        }
    }
    function Ztime() {
        var _local2 = Number(music_load_mc._totalframes);
        _local2 = Math.round(_local2 / 12.6);
        _root.GC_totalframes = Math.round(Number(music_load_mc._totalframes) / 12);
        ZSJ_t = _local2;
        t_minutes = int(_local2 / 60);
        if (t_minutes < 10) {
            t_minutes = "0" + t_minutes;
        }
        if (_local2 < 60) {
            t_seconds = _local2;
        }
        if (_local2 >= 60) {
            t_seconds = _local2 - (int(_local2 / 60) * 60);
        }
        if (t_seconds < 10) {
            t_seconds = "0" + t_seconds;
        }
        ZSJ = (t_minutes + ":") + t_seconds;
    }
    function Dtime() {
        var _local1 = PlayI;
        c_minutes = int(_local1 / 60);
        if (c_minutes < 10) {
            c_minutes = "0" + c_minutes;
        }
        if (_local1 < 60) {
            c_seconds = _local1;
        }
        if (_local1 >= 60) {
            c_seconds = _local1 - (int(_local1 / 60) * 60);
        }
        if (c_seconds < 10) {
            c_seconds = "0" + c_seconds;
        }
        DQSJ = (c_minutes + ":") + c_seconds;
    }
    function next_Music() {
        var _local2 = _root.R_list_mc.MList.selectedIndex;
        var _local3 = _root.R_list_mc.MList.length;
        if ((int(_local2) + 1) == _local3) {
            _root.R_list_mc.MList.setSelectedIndex(0);
        } else {
            _root.R_list_mc.MList.setSelectedIndex(Number(_local2 + 1));
        }
        _root.R_list_mc.myMusicList();
    }
    function preMusic() {
        var _local2 = _root.R_list_mc.MList.selectedIndex;
        if (Number(_local2) == 0) {
            _root.R_list_mc.MList.setSelectedIndex(Number(_root.R_list_mc.MList.length - 1));
        } else {
            _root.R_list_mc.MList.setSelectedIndex(Number(_local2 - 1));
        }
        _root.R_list_mc.myMusicList();
    }
    function DQloop_Music() {
        _root.R_list_mc.myMusicList();
    }
    function random_Music() {
        var _local2 = _root.R_list_mc.MList.length;
        _root.R_list_mc.MList.setSelectedIndex(Number(random(_local2)));
        _root.R_list_mc.myMusicList();
    }
    function preloading() {
        preload.onEnterFrame = function () {
            loadBFB._visible = 1;
            loaded = s.getBytesLoaded();
            total = s.getBytesTotal();
            DJfileSize = xs((total / 1024) / 1024, 2);
            fileSize.text = ("\u6587\u4EF6\u5927\u5C0F:" + DJfileSize) + "M";
            if (DJfileSize == 0) {
                aotuLoadDJ.gotoAndStop("end");
            }
            this._width = (loaded / total) * 370;
            loadBFB.LoadBL = ("\u7F13\u51B2" + Math.round((Number(loaded) / Number(total)) * 100)) + "%";
            loadBFB._x = 4 + (((Number(loaded) / Number(total)) * 100) * 2.5);
            if (loaded == total) {
                delete this.onEnterFrame;
                loadBFB._visible = 0;
                loadBFB.LoadBL = "";
            }
        };
    }
    function xs(M, n) {
        return(Math.round(M * Math.pow(10, n)) / Math.pow(10, n));
    }
    function loadsound(Music) {
        played = 0;
        paused = false;
        key = true;
        s = new Sound();
        s.loadSound(Music, true);
        s.start();
        s.onSoundComplete = function () {
            if (_root.loopPlay == 1) {
                next_Music();
            } else if (_root.loopPlay == 2) {
                random_Music();
            } else if (_root.loopPlay == 3) {
                DQloop_Music();
            } else {
                next_Music();
            }
            if (int(_root.tingWan_DJcount) < 20) {
                if (int(_root.tingWanZTime) > 150) {
                    if (int(_root.tingWanTime) >= int(_root.tingWanZTime)) {
                        _root.tingWan_addHYJF = 1;
                        _root.tingWanTime = 0;
                        _root.tingWan_DJcount++;
                    }
                }
            }
        };
        mix.gotoAndStop(1);
        preloading();
    }
    function savePlayCX(Pindex) {
        changePlayCX.data.changeIndex = Pindex;
    }
    volume_mc.setMask(ZZ);
    web = ("http://" + _root.home_URL) + ".djyule.com";
    ZRname = _root.homeHYname;
    stop();
    var tempSoundVol = true;
    PlayI = 0;
    ZSJ_t = 0;
    var mp3total = new Array();
    var mp3name = new Array();
    var mp3 = new Array();
    var s = new Sound();
    var id = 0;
    var played = 0;
    var key = true;
    var paused = false;
    DJfileSize = "";
    var changePlayCX = SharedObject.getLocal("PlayCX");
    changePlayCX.data.highScore = new Number();
    var playCXIndex;
    playCXIndex = changePlayCX.data.changeIndex;
    if (playCXIndex != undefined) {
        switch (playCXIndex) {
            case 1 : 
                loop_mc.gotoAndStop(1);
                break;
            case 2 : 
                loop_mc.gotoAndStop(2);
                break;
            case 3 : 
                loop_mc.gotoAndStop(3);
        }
    }
    yz_x.onRelease = function () {
        if (_root.playZL != "64k") {
            yz_bg._x = yz_x._x;
            yz_bg._y = yz_x._y;
            _root.playZL = "64k";
            _root.R_list_mc.myMusicList();
            _root.Hdj_mc._visible = 0;
        }
    };
    yz_d.onRelease = function () {
        if (_root.HYname == "") {
            _root.msgBox("\u8BF7\u767B\u5F55\u6216\u8005\u6CE8\u518C\uFF01", "320kbps\u9AD8\u97F3\u8D28DJ\u821E\u66F2\u53EA\u63D0\u4F9B\u7ED9\u4F1A\u5458\u514D\u8D39\u5728\u7EBF\u8BD5\u542C\uFF0C\u8BF7\u5148\u767B\u5F55\u6216\u6CE8\u518C\u3002");
        } else if (_root.YHJF < 5) {
            _root.Hdj_mc.gotoAndPlay("starGO");
            _root.msgBox("\u8BD5\u542C320kbps\u51FA\u9519\u63D0\u793A\uFF1A", "\u4F60\u7684\u7528\u6237\u79EF\u5206\u4E0D\u8DB3\uFF0C\u65E0\u6CD5\u7EE7\u7EED\u542C320kbps\u9AD8\u97F3\u8D28DJ\uFF0C\u8BF7\u770B\u79EF\u5206\u89C4\u5219\u3002");
            _root.yz_x.onRelease();
        } else if (_root.playZL != "320k") {
            yz_bg._x = yz_d._x;
            yz_bg._y = yz_d._y;
            _root.playZL = "320k";
            _root.R_list_mc.myMusicList();
        }
    };